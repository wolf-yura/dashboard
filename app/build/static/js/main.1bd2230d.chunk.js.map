{"version":3,"sources":["serviceWorker.js","helpers/chartjs.js","theme/palette.js","theme/typography.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","common/validators.js","services/auth.service.js","components/SearchInput/SearchInput.js","components/StatusBullet/StatusBullet.js","components/RouteWithLayout/RouteWithLayout.js","layouts/Main/components/Footer/Footer.js","layouts/Main/components/Sidebar/components/Profile/Profile.js","layouts/Main/components/Sidebar/components/SidebarNav/SidebarNav.js","layouts/Main/components/Sidebar/Sidebar.js","layouts/Main/components/Sidebar/components/UpgradePlan/UpgradePlan.js","layouts/Main/components/Topbar/Topbar.js","layouts/Main/Main.js","layouts/Minimal/components/Topbar/Topbar.js","layouts/Minimal/Minimal.js","views/Account/components/AccountDetails/AccountDetails.js","views/Account/Account.js","views/Account/components/AccountProfile/AccountProfile.js","views/Dashboard/components/Budget/Budget.js","views/Dashboard/components/LatestOrders/data.js","views/Dashboard/components/LatestOrders/LatestOrders.js","views/Dashboard/components/LatestProducts/data.js","views/Dashboard/components/LatestProducts/LatestProducts.js","views/Dashboard/components/LatestSales/chart.js","views/Dashboard/components/LatestSales/LatestSales.js","views/Dashboard/components/TasksProgress/TasksProgress.js","views/Dashboard/components/TotalProfit/TotalProfit.js","views/Dashboard/components/TotalUsers/TotalUsers.js","views/Dashboard/Dashboard.js","views/Dashboard/components/UsersByDevice/UsersByDevice.js","views/Icons/Icons.js","views/NotFound/NotFound.js","views/ProductList/components/ProductCard/ProductCard.js","views/ProductList/components/ProductsToolbar/ProductsToolbar.js","views/ProductList/data.js","views/ProductList/ProductList.js","views/Settings/components/Notifications/Notifications.js","views/Settings/components/Password/Password.js","views/Settings/Settings.js","icons/Facebook/index.js","icons/Google/index.js","views/SignIn/SignIn.js","views/SignUp/FirstStep.js","views/SignUp/SecondStep.js","views/SignUp/Confirm.js","views/SignUp/SignUp.js","views/Typography/Typography.js","services/auth-header.js","services/user.service.js","views/UserList/components/UsersTable/UsersTable.js","views/UserList/components/UsersToolbar/UsersToolbar.js","views/UserList/UserList.js","views/ActiveUserList/components/UsersTable/UsersTable.js","views/ActiveUserList/components/UsersToolbar/UsersToolbar.js","views/ActiveUserList/ActiveUserList.js","views/UserEdit/components/UserDetails/UserDetails.js","views/UserEdit/UserEdit.js","views/UserPersonal/components/UserDetails/UserDetails.js","views/UserPersonal/UserPersonal.js","views/UserBank/components/UserDetails/UserDetails.js","views/UserBank/UserBank.js","views/UserPlan/components/PlanList/PlanList.js","services/plan.service.js","views/UserPlan/UserPlan.js","views/UserDeposit/components/PlanList/PlanList.js","services/deposit.service.js","views/UserDeposit/UserDeposit.js","views/UserWithdraw/components/WithdrawList/WithdrawList.js","services/withdraw.service.js","views/UserWithdraw/UserWithdraw.js","views/AdminPlan/components/PlanList/PlanList.js","views/AdminPlan/AdminPlan.js","views/AdminDeposit/components/PlanList/PlanList.js","views/AdminDeposit/AdminDeposit.js","views/AdminWithdraw/components/WithdrawList/WithdrawList.js","views/AdminWithdraw/AdminWithdraw.js","views/AdminContract/components/ContractList/ContractList.js","views/AdminContract/AdminContract.js","views/UserPassword/components/UserDetails/UserDetails.js","views/UserPassword/UserPassword.js","Routes.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","draw","left","right","top","bottom","signX","signY","borderSkipped","radius","ctx","this","_chart","vm","_view","borderWidth","cornerRadius","config","options","horizontal","base","x","y","height","width","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","backgroundColor","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","index","corner","moveTo","i","nextCornerId","floor","xTl","xTr","yTl","yTr","xBl","xBr","yBl","yBr","lineTo","quadraticCurveTo","fill","stroke","white","black","primary","contrastText","dark","colors","indigo","main","light","checkbox","lightGreen","secondary","success","green","info","blue","warning","orange","error","red","text","grey","link","background","default","paper","icon","blueGrey","divider","h1","color","palette","fontWeight","fontSize","letterSpacing","lineHeight","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","button","caption","overline","textTransform","MuiButton","contained","boxShadow","MuiIconButton","root","MuiPaper","elevation1","MuiTableCell","typography","MuiTableHead","MuiTypography","gutterBottom","marginBottom","theme","createMuiTheme","overrides","zIndex","appBar","drawer","checked","value","message","AUTH_URL","login_data","axios","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","zipcode","get","removeItem","register_data","parse","getItem","useStyles","makeStyles","borderRadius","alignItems","padding","spacing","display","flexBasis","marginRight","input","flexGrow","SearchInput","props","className","onChange","style","rest","classes","Paper","clsx","Input","disableUnderline","flexShrink","sm","md","lg","neutral","danger","StatusBullet","size","defaultProps","RouteWithLayout","Layout","layout","Component","component","render","matchProps","Footer","variant","flexDirection","minHeight","avatar","name","marginTop","Profile","user","nested","paddingLeft","item","paddingTop","paddingBottom","justifyContent","fontWeightMedium","active","CustomRouterLink","forwardRef","ref","SidebarNav","pages","useState","state","setState","handleClick","e","List","map","page","key","title","subpages","ListItem","disableGutters","onClick","bind","Button","activeClassName","to","href","Collapse","in","timeout","unmountOnExit","disablePadding","subpage","media","textAlign","content","actions","breakpoints","up","margin","nav","Sidebar","open","AuthService","onClose","user_pages","Drawer","anchor","Divider","getCurrentUser","roles","includes","signOutButton","marginLeft","Topbar","onSidebarOpen","logOut","notifications","AppBar","Toolbar","alt","src","Hidden","mdDown","IconButton","Badge","badgeContent","length","lgUp","shiftContent","Main","children","useTheme","isDesktop","useMediaQuery","defaultMatches","openSidebar","setOpenSidebar","history","useHistory","shouldOpenSidebar","logout","push","reload","position","Minimal","AccountDetails","firstName","lastName","email","phone","country","values","setValues","handleChange","event","target","Card","autoComplete","noValidate","CardHeader","subheader","CardContent","Grid","container","xs","TextField","fullWidth","helperText","label","required","type","select","SelectProps","native","option","city","CardActions","details","progress","uploadButton","Account","xl","difference","differenceIcon","differenceValue","uuid","inner","minWidth","statusContainer","status","moment","subtract","image","chartContainer","TasksProgress","justify","Avatar","LinearProgress","stats","device","deviceIcon","Dashboard","TotalUsers","TotalProfit","iframe","border","Icons","maxWidth","NotFound","imageContainer","overflow","statsItem","statsIcon","ProductCard","product","imageUrl","align","description","totalDownloads","row","spacer","importButton","exportButton","searchInput","ProductsToolbar","placeholder","id","updatedAt","createdAt","pagination","ProductList","mockData","products","Notifications","wrap","FormControlLabel","control","Checkbox","defaultChecked","Password","password","confirm","newPassword","Settings","Facebook","SvgIcon","d","Google","schema","presence","allowEmpty","maximum","signupLink","grid","quoteContainer","down","quote","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","quoteInner","quoteText","bio","contentContainer","contentHeader","paddingBototm","paddingRight","logoImage","contentBody","form","socialButtons","socialIcon","sugestion","textField","signInButton","withRouter","setStatus","setMessage","isValid","touched","errors","formState","setFormState","useEffect","validate","persist","handleSignIn","login","resMessage","toString","hasError","field","person","goBack","disabled","Link","RouterLink","show","onConfirm","FirstStep","handleNext","full_name","cpf","cellphone","filedError","isError","isEmpty","defaultValue","mask","maskChar","disableButton","SecondStep","handleBack","birthdate","gender","investment_type","investment","isZipcode","InputLabelProps","shrink","FormControl","InputLabel","htmlFor","Select","MenuItem","Confirm","submit","street","number","complement","neighborhood","isNumber","InputProps","colorWhite","emailRegex","RegExp","cpfRegex","labels","completed","policy","policyCheckbox","signUpButton","contentForm","stepDone","steps","setSteps","fields","setFields","setFieldError","setIsError","setIsZipcode","statusFail","setStatusFail","loading","setLoading","formErrors","lengthValidate","cep","cepformatValidate","replace","test","fetch","res","json","result","erro","logradouro","bairro","localidade","uf","CPF","error_count","Object","forEach","val","array","register","Stepper","activeStep","alternativeLabel","Step","StepLabel","StepIconProps","step","handleSteps","html","showConfirmButton","allowOutsideClick","variants","Typography","keys","authHeader","URL","headers","userId","formData","user_id","pdf_path","responseType","resp","download","invest_type","MySwal","withReactContent","Swal","nameContainer","blackText","head","th","UsersTable","users","selectedUsers","setSelectedUsers","rowsPerPage","setRowsPerPage","setPage","handleActive","fire","confirmButtonText","cancelButtonText","showCancelButton","userService","setActive","console","log","dismiss","DismissReason","cancel","preConfirm","SimpleMaskMoney","formatToNumber","document","getElementById","showValidationMessage","files","onOpen","$","change","FileReader","readAsDataURL","input_swal","setMask","allowNegative","negativeSignAfter","prefix","suffix","fixed","fractionDigits","decimalSeparator","thousandsSeparator","cursor","FormData","file","append","handleEdit","handleDelete","delete","Table","TableHead","TableRow","TableCell","indeterminate","TableBody","slice","tableRow","hover","selected","selectedIndex","newSelectedUsers","concat","handleSelectOne","TablePagination","count","onChangePage","onChangeRowsPerPage","rowsPerPageOptions","UsersToolbar","UserList","setUsers","a","UserService","getDeactiveUsers","fetchUsers","ActiveUserList","getActiveUsers","UserDetails","setUser","getOneUser","fetchUser","update","dangerMode","UserEdit","params","UserPersonal","banco_nome","banco_agencia","banco_conta","tipo_conta","bank","setBank","getBank","bankUpdate","UserBank","PlanList","PlanService","plans","setPlans","getPlanByUser","user_pdf","is_both_invest_type","f_count","c_count","select_html","getContractPDFByUser","cp_res","cp_res_data","invest_type_value","admin_pdf","admin_pdf2","downloadUserContract","is_exist","admin_is_exist","user_pdf2","alarm_string","uploadUserContract","start_date","format","end_date","currencyFormatter","open_value","code","symbol","Number","add_data","UserPlan","DepositService","getDepositByUser","oninput","addDeposit","user_value","admin_value","UserDeposit","WithdrawList","WithdrawService","args","getBalance","undefined","balance","add","withdraw_value","el","check_cpf_user","cpf_response","cpf_user","transfer","UserWithdraw","getAll","handleApprove","plan_id","setApprove","AdminPlan","deposit_id","AdminDeposit","withdraw_id","AdminWithdraw","ContractList","getContractPDFAll","fetchContracts","handleUpload","uploadAdminContract","handleDownload","downloadContract","AdminContract","current_password","updatePassword","UserPassword","Routes","showUserBoard","showAdminBoard","currentUser","exact","from","DashboardView","MainLayout","path","UserListView","AdminPlanView","AdminContractView","AdminDepositView","AdminWithdrawView","ActiveUserListView","UserEditView","UserPersonalView","UserPasswordView","UserBankView","UserPlanView","UserDepositView","UserWithdrawView","ProductListView","TypographyView","IconsView","AccountView","SettingsView","SignUpView","MinimalLayout","SignInView","NotFoundView","browserHistory","createBrowserHistory","Chart","helpers","extend","elements","Rectangle","prototype","chartjs","validators","App","ThemeProvider","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1bd2230d.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","// ChartJS extension rounded bar chart\r\n// https://codepen.io/jedtrow/full/ygRYgo\r\nfunction draw() {\r\n  const { ctx } = this._chart;\r\n  const vm = this._view;\r\n  let { borderWidth } = vm;\r\n\r\n  let left;\r\n  let right;\r\n  let top;\r\n  let bottom;\r\n  let signX;\r\n  let signY;\r\n  let borderSkipped;\r\n  let radius;\r\n\r\n  // If radius is less than 0 or is large enough to cause drawing errors a max\r\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\r\n  let { cornerRadius } = this._chart.config.options;\r\n  if (cornerRadius < 0) {\r\n    cornerRadius = 0;\r\n  }\r\n\r\n  if (typeof cornerRadius === 'undefined') {\r\n    cornerRadius = 0;\r\n  }\r\n\r\n  if (!vm.horizontal) {\r\n    // bar\r\n    left = vm.x - vm.width / 2;\r\n    right = vm.x + vm.width / 2;\r\n    top = vm.y;\r\n    bottom = vm.base;\r\n    signX = 1;\r\n    signY = bottom > top ? 1 : -1;\r\n    borderSkipped = vm.borderSkipped || 'bottom';\r\n  } else {\r\n    // horizontal bar\r\n    left = vm.base;\r\n    right = vm.x;\r\n    top = vm.y - vm.height / 2;\r\n    bottom = vm.y + vm.height / 2;\r\n    signX = right > left ? 1 : -1;\r\n    signY = 1;\r\n    borderSkipped = vm.borderSkipped || 'left';\r\n  }\r\n\r\n  // Canvas doesn't allow us to stroke inside the width so we can\r\n  // adjust the sizes to fit if we're setting a stroke on the line\r\n  if (borderWidth) {\r\n    // borderWidth shold be less than bar width and bar height.\r\n    const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\r\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\r\n    const halfStroke = borderWidth / 2;\r\n    // Adjust borderWidth when bar top position is near vm.base(zero).\r\n    const borderLeft =\r\n      left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\r\n    const borderRight =\r\n      right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\r\n    const borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\r\n    const borderBottom =\r\n      bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\r\n    // not become a vertical line?\r\n    if (borderLeft !== borderRight) {\r\n      top = borderTop;\r\n      bottom = borderBottom;\r\n    }\r\n    // not become a horizontal line?\r\n    if (borderTop !== borderBottom) {\r\n      left = borderLeft;\r\n      right = borderRight;\r\n    }\r\n  }\r\n\r\n  ctx.beginPath();\r\n  ctx.fillStyle = vm.backgroundColor;\r\n  ctx.strokeStyle = vm.borderColor;\r\n  ctx.lineWidth = borderWidth;\r\n\r\n  // Corner points, from bottom-left to bottom-right clockwise\r\n  // | 1 2 |\r\n  // | 0 3 |\r\n  const corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\r\n\r\n  // Find first (starting) corner with fallback to 'bottom'\r\n  const borders = ['bottom', 'left', 'top', 'right'];\r\n  let startCorner = borders.indexOf(borderSkipped, 0);\r\n  if (startCorner === -1) {\r\n    startCorner = 0;\r\n  }\r\n\r\n  function cornerAt(index) {\r\n    return corners[(startCorner + index) % 4];\r\n  }\r\n\r\n  // Draw rectangle from 'startCorner'\r\n  let corner = cornerAt(0);\r\n  ctx.moveTo(corner[0], corner[1]);\r\n\r\n  for (let i = 1; i < 4; i += 1) {\r\n    corner = cornerAt(i);\r\n    let nextCornerId = i + 1;\r\n    if (nextCornerId === 4) {\r\n      nextCornerId = 0;\r\n    }\r\n\r\n    const width = corners[2][0] - corners[1][0];\r\n    const height = corners[0][1] - corners[1][1];\r\n    const x = corners[1][0];\r\n    const y = corners[1][1];\r\n\r\n    radius = cornerRadius;\r\n    // Fix radius being too large\r\n    if (radius > Math.abs(height) / 2) {\r\n      radius = Math.floor(Math.abs(height) / 2);\r\n    }\r\n    if (radius > Math.abs(width) / 2) {\r\n      radius = Math.floor(Math.abs(width) / 2);\r\n    }\r\n\r\n    if (height < 0) {\r\n      // Negative values in a standard bar chart\r\n      const xTl = x;\r\n      const xTr = x + width;\r\n      const yTl = y + height;\r\n      const yTr = y + height;\r\n\r\n      const xBl = x;\r\n      const xBr = x + width;\r\n      const yBl = y;\r\n      const yBr = y;\r\n\r\n      // Draw\r\n      ctx.moveTo(xBl + radius, yBl);\r\n      ctx.lineTo(xBr - radius, yBr);\r\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\r\n      ctx.lineTo(xTr, yTr + radius);\r\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\r\n      ctx.lineTo(xTl + radius, yTl);\r\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\r\n      ctx.lineTo(xBl, yBl - radius);\r\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\r\n    } else if (width < 0) {\r\n      // Negative values in a horizontal bar chart\r\n      const xTl = x + width;\r\n      const xTr = x;\r\n      const yTl = y;\r\n      const yTr = y;\r\n\r\n      const xBl = x + width;\r\n      const xBr = x;\r\n      const yBl = y + height;\r\n      const yBr = y + height;\r\n\r\n      // Draw\r\n      ctx.moveTo(xBl + radius, yBl);\r\n      ctx.lineTo(xBr - radius, yBr);\r\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\r\n      ctx.lineTo(xTr, yTr + radius);\r\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\r\n      ctx.lineTo(xTl + radius, yTl);\r\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\r\n      ctx.lineTo(xBl, yBl - radius);\r\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\r\n    } else {\r\n      // Positive Value\r\n      ctx.moveTo(x + radius, y);\r\n      ctx.lineTo(x + width - radius, y);\r\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n      ctx.lineTo(x + width, y + height - radius);\r\n      ctx.quadraticCurveTo(\r\n        x + width,\r\n        y + height,\r\n        x + width - radius,\r\n        y + height\r\n      );\r\n      ctx.lineTo(x + radius, y + height);\r\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n      ctx.lineTo(x, y + radius);\r\n      ctx.quadraticCurveTo(x, y, x + radius, y);\r\n    }\r\n  }\r\n\r\n  ctx.fill();\r\n  if (borderWidth) {\r\n    ctx.stroke();\r\n  }\r\n}\r\n\r\nexport default {\r\n  draw\r\n};\r\n","import { colors } from '@material-ui/core';\r\n\r\nconst white = '#FFFFFF';\r\nconst black = '#000000';\r\n\r\nexport default {\r\n  black,\r\n  white,\r\n  primary: {\r\n    contrastText: white,\r\n    dark: colors.indigo[900],\r\n    main: \"#222b3d\",\r\n    light: colors.indigo[100]\r\n  },\r\n  checkbox: {\r\n    main: \"#7b8087\",\r\n    lightGreen: \"#4d84ff\"\r\n  },\r\n  secondary: {\r\n    contrastText: white,\r\n    dark: \"#4d84ff\",\r\n    main: \"#222b3d\",\r\n    light: \"#4d84ff\"\r\n  },\r\n  success: {\r\n    contrastText: white,\r\n    dark: colors.green[900],\r\n    main: colors.green[600],\r\n    light: colors.green[400]\r\n  },\r\n  info: {\r\n    contrastText: white,\r\n    dark: colors.blue[900],\r\n    main: colors.blue[600],\r\n    light: colors.blue[400]\r\n  },\r\n  warning: {\r\n    contrastText: white,\r\n    dark: colors.orange[900],\r\n    main: colors.orange[600],\r\n    light: colors.orange[400]\r\n  },\r\n  error: {\r\n    contrastText: white,\r\n    dark: colors.red[900],\r\n    main: colors.red[600],\r\n    light: colors.red[400]\r\n  },\r\n  text: {\r\n    primary: colors.grey[50],\r\n    secondary: \"#7b8087\",\r\n    link: \"#4d84ff\"\r\n  },\r\n  background: {\r\n    default: \"#212a37\",\r\n    paper: \"#212a37\"\r\n  },\r\n  icon: colors.blueGrey[600],\r\n  divider: \"#212a37\"\r\n};\r\n","import palette from './palette';\r\n\r\nexport default {\r\n  h1: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '35px',\r\n    letterSpacing: '-0.24px',\r\n    lineHeight: '40px'\r\n  },\r\n  h2: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '29px',\r\n    letterSpacing: '-0.24px',\r\n    lineHeight: '32px'\r\n  },\r\n  h3: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '24px',\r\n    letterSpacing: '-0.06px',\r\n    lineHeight: '28px'\r\n  },\r\n  h4: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '20px',\r\n    letterSpacing: '-0.06px',\r\n    lineHeight: '24px'\r\n  },\r\n  h5: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '16px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '20px'\r\n  },\r\n  h6: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '14px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '20px'\r\n  },\r\n  subtitle1: {\r\n    color: palette.text.primary,\r\n    fontSize: '16px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '25px'\r\n  },\r\n  subtitle2: {\r\n    color: palette.text.secondary,\r\n    fontWeight: 400,\r\n    fontSize: '14px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '21px'\r\n  },\r\n  body1: {\r\n    color: palette.text.primary,\r\n    fontSize: '14px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '21px'\r\n  },\r\n  body2: {\r\n    color: palette.text.secondary,\r\n    fontSize: '12px',\r\n    letterSpacing: '-0.04px',\r\n    lineHeight: '18px'\r\n  },\r\n  button: {\r\n    color: palette.text.primary,\r\n    fontSize: '14px'\r\n  },\r\n  caption: {\r\n    color: palette.text.secondary,\r\n    fontSize: '11px',\r\n    letterSpacing: '0.33px',\r\n    lineHeight: '13px'\r\n  },\r\n  overline: {\r\n    color: palette.text.secondary,\r\n    fontSize: '11px',\r\n    fontWeight: 500,\r\n    letterSpacing: '0.33px',\r\n    lineHeight: '13px',\r\n    textTransform: 'uppercase'\r\n  }\r\n};\r\n","import MuiButton from './MuiButton';\r\nimport MuiIconButton from './MuiIconButton';\r\nimport MuiPaper from './MuiPaper';\r\nimport MuiTableCell from './MuiTableCell';\r\nimport MuiTableHead from './MuiTableHead';\r\nimport MuiTypography from './MuiTypography';\r\n\r\nexport default {\r\n  MuiButton,\r\n  MuiIconButton,\r\n  MuiPaper,\r\n  MuiTableCell,\r\n  MuiTableHead,\r\n  MuiTypography\r\n};\r\n","export default {\r\n  contained: {\r\n    boxShadow:\r\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\r\n    backgroundColor: '#FFFFFF'\r\n  }\r\n};\r\n","import palette from '../palette';\r\n\r\nexport default {\r\n  root: {\r\n    color: palette.icon,\r\n    '&:hover': {\r\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\r\n    }\r\n  }\r\n};\r\n","export default {\r\n  elevation1: {\r\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\r\n  }\r\n};\r\n","import palette from '../palette';\r\nimport typography from '../typography';\r\n\r\nexport default {\r\n  root: {\r\n    ...typography.body1,\r\n    borderBottom: `1px solid ${palette.divider}`\r\n  }\r\n};\r\n","import { colors } from '@material-ui/core';\r\n\r\nexport default {\r\n  root: {\r\n    backgroundColor: colors.grey[50]\r\n  }\r\n};\r\n","export default {\r\n  gutterBottom: {\r\n    marginBottom: 8\r\n  }\r\n};\r\n","import { createMuiTheme } from '@material-ui/core';\r\n\r\nimport palette from './palette';\r\nimport typography from './typography';\r\nimport overrides from './overrides';\r\n\r\nconst theme = createMuiTheme({\r\n  palette,\r\n  typography,\r\n  overrides,\r\n  zIndex: {\r\n    appBar: 1200,\r\n    drawer: 1100\r\n  }\r\n});\r\n\r\nexport default theme;\r\n","const checked = (value, options) => {\r\n  if (value !== true) {\r\n    return options.message || 'precisam estar checados';\r\n  }\r\n};\r\n\r\nexport default {\r\n  checked\r\n};\r\n","import axios from \"axios\";\r\n// const dotenv = require('dotenv');\r\n// dotenv.config('/');\r\n// const { API_URL } = process.env;\r\n// const AUTH_URL = `${API_URL}auth/`;\r\n\r\nconst AUTH_URL = 'http://localhost:8080/api/auth/';\r\n\r\n\r\nclass AuthService {\r\n    \r\n    login(login_data) {\r\n      return axios\r\n        .post(AUTH_URL + \"signin\", login_data)\r\n        .then(response => {\r\n          if (response.data.accessToken) {\r\n            localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n          }\r\n          return response.data;\r\n        });\r\n    }\r\n    get_zipcode(zipcode) {\r\n      return axios\r\n        .get('https://viacep.com.br/ws/'+zipcode+'/json')\r\n        .then(response => {\r\n          return response.data;\r\n        });\r\n    }\r\n    logout() {\r\n      localStorage.removeItem(\"user\");\r\n    }\r\n  \r\n    register(register_data) {\r\n      return axios.post(AUTH_URL + \"signup\", register_data);\r\n    }\r\n  \r\n    getCurrentUser() {\r\n      return JSON.parse(localStorage.getItem('user'))\r\n    }\r\n  }\r\n  \r\n  export default new AuthService();\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Paper, Input } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    borderRadius: '4px',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(1),\r\n    display: 'flex',\r\n    flexBasis: 420\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(1),\r\n    color: theme.palette.text.secondary\r\n  },\r\n  input: {\r\n    flexGrow: 1,\r\n    fontSize: '14px',\r\n    lineHeight: '16px',\r\n    letterSpacing: '-0.05px'\r\n  }\r\n}));\r\n\r\nconst SearchInput = props => {\r\n  const { className, onChange, style, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n      style={style}\r\n    >\r\n      <SearchIcon className={classes.icon} />\r\n      <Input\r\n        {...rest}\r\n        className={classes.input}\r\n        disableUnderline\r\n        onChange={onChange}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nSearchInput.propTypes = {\r\n  className: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  style: PropTypes.object\r\n};\r\n\r\nexport default SearchInput;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'inline-block',\r\n    borderRadius: '50%',\r\n    flexGrow: 0,\r\n    flexShrink: 0\r\n  },\r\n  sm: {\r\n    height: theme.spacing(1),\r\n    width: theme.spacing(1)\r\n  },\r\n  md: {\r\n    height: theme.spacing(2),\r\n    width: theme.spacing(2)\r\n  },\r\n  lg: {\r\n    height: theme.spacing(3),\r\n    width: theme.spacing(3)\r\n  },\r\n  neutral: {\r\n    backgroundColor: theme.palette.neutral\r\n  },\r\n  primary: {\r\n    backgroundColor: theme.palette.primary.main\r\n  },\r\n  info: {\r\n    backgroundColor: theme.palette.info.main\r\n  },\r\n  warning: {\r\n    backgroundColor: theme.palette.warning.main\r\n  },\r\n  danger: {\r\n    backgroundColor: theme.palette.error.main\r\n  },\r\n  success: {\r\n    backgroundColor: theme.palette.success.main\r\n  }\r\n}));\r\n\r\nconst StatusBullet = props => {\r\n  const { className, size, color, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <span\r\n      {...rest}\r\n      className={clsx(\r\n        {\r\n          [classes.root]: true,\r\n          [classes[size]]: size,\r\n          [classes[color]]: color\r\n        },\r\n        className\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nStatusBullet.propTypes = {\r\n  className: PropTypes.string,\r\n  color: PropTypes.oneOf([\r\n    'neutral',\r\n    'primary',\r\n    'info',\r\n    'success',\r\n    'warning',\r\n    'danger'\r\n  ]),\r\n  size: PropTypes.oneOf(['sm', 'md', 'lg'])\r\n};\r\n\r\nStatusBullet.defaultProps = {\r\n  size: 'md',\r\n  color: 'default'\r\n};\r\n\r\nexport default StatusBullet;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst RouteWithLayout = props => {\r\n  const { layout: Layout, component: Component, ...rest } = props;\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={matchProps => (\r\n        <Layout>\r\n          <Component {...matchProps} />\r\n        </Layout>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nRouteWithLayout.propTypes = {\r\n  component: PropTypes.any.isRequired,\r\n  layout: PropTypes.any.isRequired,\r\n  path: PropTypes.string\r\n};\r\n\r\nexport default RouteWithLayout;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Typography, Link } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst Footer = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      { ...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Typography variant=\"body1\">\r\n        &copy;{' '} 2020 - XCapital Inv.\r\n      </Typography>\r\n      <Typography variant=\"caption\">\r\n      Alguma dúvida do quanto o seu dinheiro pode render com a XCapital?\r\n      +55 (48) 9 9123-1919 - Segunda à Sexta | 08:00h às 18:00h\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nFooter.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Avatar, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    minHeight: 'fit-content'\r\n  },\r\n  avatar: {\r\n    width: 60,\r\n    height: 60\r\n  },\r\n  name: {\r\n    marginTop: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst Profile = props => {\r\n  const { className, ...rest } = props;\r\n  const classes = useStyles();\r\n  const user = {\r\n    name: 'Nome',\r\n    bio: 'Bem vindo à XCapital !'\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Typography\r\n        className={classes.name}\r\n        variant=\"h4\"\r\n      >\r\n        {user.name}\r\n      </Typography>\r\n      <Typography variant=\"body2\">{user.bio}</Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Profile;\r\n","/* eslint-disable react/no-multi-comp */\r\n/* eslint-disable react/display-name */\r\nimport React, { forwardRef, useState } from 'react';\r\nimport { NavLink as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { List, ListItem, Button, colors } from '@material-ui/core';\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nconst useStyles = makeStyles(theme => ({\r\n  nested: {\r\n    paddingLeft: theme.spacing(2)\r\n  },\r\n  root: {},\r\n  item: {\r\n    display: 'flex',\r\n    paddingTop: 0,\r\n    paddingBottom: 0\r\n  },\r\n  button: {\r\n    color: colors.grey[50],\r\n    padding: '10px 8px',\r\n    justifyContent: 'flex-start',\r\n    textTransform: 'none',\r\n    letterSpacing: 0,\r\n    width: '100%',\r\n    fontWeight: theme.typography.fontWeightMedium\r\n  },\r\n  icon: {\r\n    color: \"fff\",\r\n    width: 24,\r\n    height: 24,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  active: {\r\n    color: \"#4d84ff\",\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    '& $icon': {\r\n      color: \"#4d84ff\"\r\n    }\r\n  }\r\n}));\r\n\r\nconst CustomRouterLink = forwardRef((props, ref) => (\r\n  <div\r\n    ref={ref}\r\n    style={{ flexGrow: 1 }}\r\n  >\r\n    <RouterLink {...props} />\r\n  </div>\r\n));\r\n\r\n\r\n\r\nconst SidebarNav = props => {\r\n  const { pages, className, ...rest } = props;\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({});\r\n  const handleClick = e => {\r\n    setState({ [e]: !state[e] });\r\n  };\r\n  return (\r\n    <List\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      {pages.map(page => (\r\n        <div key={page.title}>\r\n        {page.subpages != null ? (\r\n          <div key={page.title}>\r\n        <ListItem\r\n          className={classes.item}\r\n          disableGutters\r\n          key={page.title}\r\n          button\r\n          onClick={handleClick.bind(\r\n            this,\r\n            page.title\r\n          )}  \r\n        >\r\n          <Button\r\n            activeClassName={classes.active}\r\n            className={classes.button}\r\n            component={CustomRouterLink}\r\n            to={page.href}\r\n          >\r\n            <div className={classes.icon}>{page.icon}</div>\r\n            {page.title}\r\n          </Button>\r\n          {state[page.title] ? (\r\n              <ExpandLess />\r\n          ) : (\r\n              <ExpandMore />\r\n          )}\r\n        </ListItem>\r\n        <Collapse in={state[page.title]} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n                {page.subpages.map((subpage) => {\r\n                    return (\r\n                      <ListItem\r\n                        className={classes.nested}\r\n                        disableGutters\r\n                        key={subpage.title}\r\n                      >\r\n                      <Button\r\n                        activeClassName={classes.active}\r\n                        className={classes.button}\r\n                        component={CustomRouterLink}\r\n                        to={subpage.href}\r\n                      >\r\n                      <div className={classes.icon}>{subpage.icon}</div>\r\n                      {subpage.title}\r\n                      </Button>\r\n                      </ListItem>\r\n                    )\r\n                })}\r\n            </List>\r\n        </Collapse> \r\n        </div>): (\r\n            <ListItem\r\n            className={classes.item}\r\n            disableGutters\r\n            key={page.title}\r\n            button\r\n            onClick={handleClick.bind(\r\n              this,\r\n              page.title\r\n            )}\r\n          >\r\n            <Button\r\n              activeClassName={classes.active}\r\n              className={classes.button}\r\n              component={CustomRouterLink}\r\n              to={page.href}\r\n            >\r\n              <div className={classes.icon}>{page.icon}</div>\r\n              {page.title}\r\n            </Button>\r\n          </ListItem>\r\n        )}\r\n        </div>\r\n      ))}\r\n    </List>\r\n    \r\n  );\r\n};\r\n\r\nSidebarNav.propTypes = {\r\n  className: PropTypes.string,\r\n  pages: PropTypes.array.isRequired\r\n};\r\n\r\nexport default SidebarNav;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Divider, Drawer } from '@material-ui/core';\r\nimport DashboardIcon from '@material-ui/icons/DashboardOutlined';\r\nimport RotateIcon from '@material-ui/icons/RotateRight';\r\nimport Rotate90DegreesCcwIcon from '@material-ui/icons/Rotate90DegreesCcw';\r\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFileOutlined';\r\nimport InsertChartIcon from '@material-ui/icons/InsertChartOutlined';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBoxOutlined';\r\nimport SettingsIcon from '@material-ui/icons/SettingsOutlined';\r\nimport PageViewIcon from '@material-ui/icons/PageviewOutlined';\r\nimport LocalAtmIcon from '@material-ui/icons/LocalAtmOutlined';\r\nimport AccountBalanceWalletOutlinedIcon from '@material-ui/icons/AccountBalanceWalletOutlined';\r\nimport ArrowForwardIosOutlinedIcon from '@material-ui/icons/ArrowForwardIosOutlined';\r\n\r\nimport { Profile, SidebarNav, UpgradePlan } from './components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  drawer: {\r\n    width: 240,\r\n    [theme.breakpoints.up('lg')]: {\r\n      marginTop: 64,\r\n      height: 'calc(100% - 64px)'\r\n    }\r\n  },\r\n  root: {\r\n    backgroundColor: \"#222b3d\",\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    height: '100%',\r\n    padding: theme.spacing(2)\r\n  },\r\n  divider: {\r\n    margin: theme.spacing(2, 0)\r\n  },\r\n  nav: {\r\n    marginBottom: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst Sidebar = props => {\r\n  const { open, AuthService, variant, onClose, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const pages = [\r\n    {\r\n      title: 'Dashboard',\r\n      href: '/dashboard',\r\n      icon: <DashboardIcon />,\r\n\r\n    },\r\n    {\r\n      title: 'Solicitações',\r\n      href: '/users',\r\n      icon: <AccountBoxIcon />,\r\n      subpages: [\r\n        {\r\n          title: 'Solicitações de não clientes',\r\n          href: '/users',\r\n      icon: <ArrowForwardIosOutlinedIcon />,\r\n        },\r\n        {\r\n          title: 'Lista de clientes',\r\n          href: '/active_users',\r\n      icon: <ArrowForwardIosOutlinedIcon />,\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      title: 'Planos',\r\n      href: '/adminplan',\r\n      icon: <Rotate90DegreesCcwIcon />,\r\n    },\r\n\r\n    {\r\n      title: 'Depósitos',\r\n      href: '/admindeposit',\r\n      icon: <AccountBalanceWalletOutlinedIcon />,\r\n    },\r\n    {\r\n      title: 'Saques',\r\n      href: '/adminwithdraw',\r\n      icon: <LocalAtmIcon />,\r\n    },\r\n    {\r\n      title: 'Contrato',\r\n      href: '/admincontract',\r\n      icon: <InsertDriveFileIcon />,\r\n    },\r\n    {\r\n      title: 'Extrato',\r\n      href: '/dashboard',\r\n      icon: <PageViewIcon />,\r\n\r\n    },\r\n    {\r\n      title: 'Projeção',\r\n      href: '/dashboard',\r\n      icon: <InsertChartIcon />,\r\n\r\n    },\r\n    {\r\n      title: 'Configurações',\r\n      href: '/userpassword',\r\n      icon: <SettingsIcon />,\r\n\r\n    }\r\n  ];\r\n  const user_pages = [\r\n    {\r\n      title: 'Dashboard',\r\n      href: '/dashboard',\r\n      icon: <DashboardIcon />,\r\n\r\n    },\r\n    {\r\n      title: 'Planos',\r\n      href: '/userplan',\r\n      icon: <Rotate90DegreesCcwIcon />,\r\n    },\r\n    {\r\n      title: 'Depósitos',\r\n      href: '/userdeposit',\r\n      icon: <AccountBalanceWalletOutlinedIcon />,\r\n    },\r\n    {\r\n      title: 'Saques',\r\n      href: '/userwithdraw',\r\n      icon: <LocalAtmIcon />,\r\n    },\r\n    {\r\n      title: 'Extrato',\r\n      href: '/dashboard',\r\n      icon: <PageViewIcon />,\r\n\r\n    },\r\n    {\r\n      title: 'Projeção',\r\n      href: '/dashboard',\r\n      icon: <InsertChartIcon />,\r\n\r\n    },\r\n    {\r\n      title: 'Configurações',\r\n      href: '/userpersonal',\r\n      icon: <AccountBoxIcon />,\r\n      subpages: [\r\n        {\r\n          title: 'Dados cadastrais',\r\n          href: '/userpersonal',\r\n          icon: <ArrowForwardIosOutlinedIcon />,\r\n        },\r\n        {\r\n          title: 'Conta bancária',\r\n          href: '/userbank',\r\n          icon: <ArrowForwardIosOutlinedIcon />,\r\n        },\r\n        {\r\n          title: 'Alteração de senha',\r\n          href: '/userpassword',\r\n          icon: <ArrowForwardIosOutlinedIcon />,\r\n        }\r\n      ]\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Drawer\r\n      anchor=\"left\"\r\n      classes={{ paper: classes.drawer }}\r\n      onClose={onClose}\r\n      open={open}\r\n      variant={variant}\r\n    >\r\n      <div\r\n        {...rest}\r\n        className={clsx(classes.root, className)}\r\n      >\r\n        <Profile />\r\n        <Divider className={classes.divider} />\r\n\r\n        <SidebarNav\r\n          className={classes.nav}\r\n          pages={AuthService.getCurrentUser().roles.includes(\"ROLE_ADMIN\") ? pages : user_pages}\r\n        />\r\n      </div>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nSidebar.propTypes = {\r\n  className: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n  open: PropTypes.bool.isRequired,\r\n  variant: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Typography, Button, colors } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: colors.grey[50]\r\n  },\r\n  media: {\r\n    paddingTop: theme.spacing(2),\r\n    height: 80,\r\n    textAlign: 'center',\r\n    '& > img': {\r\n      height: '100%',\r\n      width: 'auto'\r\n    }\r\n  },\r\n  content: {\r\n    padding: theme.spacing(1, 2)\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(1, 2),\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  }\r\n}));\r\n\r\nconst UpgradePlan = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <div className={classes.media}>\r\n        <img\r\n          alt=\"Upgrade to PRO\"\r\n          src=\"/images/undraw_resume_folder_2_arse.svg\"\r\n        />\r\n      </div>\r\n      <div className={classes.content}>\r\n        <Typography\r\n          align=\"center\"\r\n          gutterBottom\r\n          variant=\"h6\"\r\n        >\r\n          Upgrade to PRO\r\n        </Typography>\r\n        <Typography\r\n          align=\"center\"\r\n          variant=\"body2\"\r\n        >\r\n          Upgrade to Devias Kit PRO and get even more components\r\n        </Typography>\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <Button\r\n          color=\"primary\"\r\n          component=\"a\"\r\n          href=\"https://devias.io/products/devias-kit-pro\"\r\n          variant=\"contained\"\r\n        >\r\n          Upgrade\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nUpgradePlan.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default UpgradePlan;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { AppBar, Toolbar, Badge, Hidden, IconButton } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\r\nimport InputIcon from '@material-ui/icons/Input';\r\n\r\nimport { SearchInput } from 'components';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    boxShadow: 'none'\r\n  },\r\n  flexGrow: {\r\n    flexGrow: 1,\r\n  },\r\n  signOutButton: {\r\n    marginLeft: theme.spacing(1),\r\n    color: 'white'\r\n  }\r\n}));\r\n\r\n\r\n\r\n\r\nconst Topbar = props => {\r\n  const { className, onSidebarOpen,logOut, ...rest } = props;\r\n  const classes = useStyles();\r\n  const [notifications] = useState([]);\r\n  return (\r\n    <AppBar\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Toolbar>\r\n      <RouterLink to=\"/\">\r\n        <img\r\n          alt=\"Logo\"\r\n          width=\"100px\"\r\n          src=\"/images/logos/logo.png\"\r\n        />\r\n      </RouterLink>\r\n        <div className={classes.flexGrow} />\r\n        <Hidden mdDown>\r\n          <IconButton style={{color: '#939499'}}>\r\n            <Badge\r\n              badgeContent={notifications.length}\r\n              style={{color: '#939499'}}\r\n              variant=\"dot\"\r\n            >\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n          <IconButton\r\n            className={classes.signOutButton}\r\n            style={{color: '#939499'}}\r\n            onClick={logOut}\r\n          >\r\n            <InputIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n        <Hidden lgUp>\r\n          <IconButton\r\n            style={{color: '#939499'}}\r\n            onClick={onSidebarOpen}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nTopbar.propTypes = {\r\n  className: PropTypes.string,\r\n  onSidebarOpen: PropTypes.func,\r\n  logOut: PropTypes.func\r\n};\r\n\r\nexport default Topbar;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/styles';\r\nimport { useMediaQuery } from '@material-ui/core';\r\n\r\nimport { Sidebar, Topbar, Footer } from './components';\r\nimport AuthService from \"../../services/auth.service\";\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingTop: 56,\r\n    height: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingTop: 64\r\n    }\r\n  },\r\n  shiftContent: {\r\n    paddingLeft: 240\r\n  },\r\n  content: {\r\n    height: '100%'\r\n  }\r\n}));\r\n\r\nconst Main = props => {\r\n  const { children } = props;\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const isDesktop = useMediaQuery(theme.breakpoints.up('lg'), {\r\n    defaultMatches: true\r\n  });\r\n\r\n  const [openSidebar, setOpenSidebar] = useState(false);\r\n\r\n  const handleSidebarOpen = () => {\r\n    setOpenSidebar(true);\r\n  };\r\n\r\n  const handleSidebarClose = () => {\r\n    setOpenSidebar(false);\r\n  };\r\n  const history = useHistory();\r\n  const handleLogout = () => {\r\n    AuthService.logout();\r\n    history.push('/sign-in');\r\n    window.location.reload('/sign-in');\r\n  }\r\n  const shouldOpenSidebar = isDesktop ? true : openSidebar;\r\n\r\n  return (\r\n    <div\r\n      className={clsx({\r\n        [classes.root]: true,\r\n        [classes.shiftContent]: isDesktop\r\n      })}\r\n    >\r\n      <Topbar onSidebarOpen={handleSidebarOpen} logOut={handleLogout} />\r\n      <Sidebar\r\n        onClose={handleSidebarClose}\r\n        open={shouldOpenSidebar}\r\n        AuthService={AuthService}\r\n        variant={isDesktop ? 'persistent' : 'temporary'}\r\n      />\r\n      <main className={classes.content}>\r\n        {children}\r\n        <Footer />\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nMain.propTypes = {\r\n  children: PropTypes.node\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { AppBar, Toolbar } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    boxShadow: 'none'\r\n  }\r\n}));\r\n\r\nconst Topbar = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n      color=\"primary\"\r\n      position=\"fixed\"\r\n    >\r\n      <Toolbar>\r\n        <RouterLink to=\"/\">\r\n          <img\r\n            alt=\"Logo\"\r\n            src=\"/images/logos/logo.png\"\r\n            width=\"100px\"\r\n          />\r\n        </RouterLink>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nTopbar.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Topbar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nimport { Topbar } from './components';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    paddingTop: 64,\r\n    height: '100%'\r\n  },\r\n  content: {\r\n    height: '100%'\r\n  }\r\n}));\r\n\r\nconst Minimal = props => {\r\n  const { children } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Topbar />\r\n      <main className={classes.content}>{children}</main>\r\n    </div>\r\n  );\r\n};\r\n\r\nMinimal.propTypes = {\r\n  children: PropTypes.node,\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Minimal;\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n}));\r\n\r\nconst AccountDetails = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [values, setValues] = useState({\r\n    firstName: 'Jean',\r\n    lastName: 'Campos',\r\n    email: 'examplo@email.com',\r\n    phone: '',\r\n    state: 'São Paulo',\r\n    country: 'BR'\r\n  });\r\n\r\n  const handleChange = event => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  const states = [\r\n    {\r\n      value: 'São Paulo',\r\n      label: 'São Paulo'\r\n    },\r\n    {\r\n      value: 'Rio de Janeiro',\r\n      label: 'Rio de Janeiro'\r\n    },\r\n    {\r\n      value: 'Curitiba',\r\n      label: 'Curitiba'\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"Atualizar dados da conta\"\r\n          title=\"Minha Conta\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Especifique o primeiro nome\"\r\n                label=\"Nome\"\r\n                margin=\"dense\"\r\n                name=\"firstName\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.firstName}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Sobrenome\"\r\n                margin=\"dense\"\r\n                name=\"lastName\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.lastName}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"E-mail\"\r\n                margin=\"dense\"\r\n                name=\"email\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.email}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Celular\"\r\n                margin=\"dense\"\r\n                name=\"phone\"\r\n                onChange={handleChange}\r\n                type=\"number\"\r\n                value={values.phone}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Estado\"\r\n                margin=\"dense\"\r\n                name=\"state\"\r\n                onChange={handleChange}\r\n                required\r\n                select\r\n                // eslint-disable-next-line react/jsx-sort-props\r\n                SelectProps={{ native: true }}\r\n                value={values.state}\r\n                variant=\"outlined\"\r\n              >\r\n                {states.map(option => (\r\n                  <option\r\n                    key={option.value}\r\n                    value={option.value}\r\n                  >\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Cidade\"\r\n                margin=\"dense\"\r\n                name=\"city\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.city}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"País\"\r\n                margin=\"dense\"\r\n                name=\"country\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.country}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          <Button\r\n            color=\"secondary\"\r\n            variant=\"contained\"\r\n          >\r\n            Salvar\r\n          </Button>\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAccountDetails.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default AccountDetails;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport { AccountProfile, AccountDetails } from './components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst Account = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        spacing={4}\r\n      >\r\n        <Grid\r\n          item\r\n          lg={12}\r\n          md={6}\r\n          xl={8}\r\n          xs={12}\r\n        >\r\n          <AccountDetails />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Typography,\r\n  Divider,\r\n  Button,\r\n  LinearProgress\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  details: {\r\n    display: 'flex'\r\n  },\r\n  avatar: {\r\n    marginLeft: 'auto',\r\n    height: 110,\r\n    width: 100,\r\n    flexShrink: 0,\r\n    flexGrow: 0\r\n  },\r\n  progress: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  uploadButton: {\r\n    marginRight: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst AccountProfile = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const user = {\r\n    name: 'Nome na Conta',\r\n    city: 'Los Angeles',\r\n    country: 'USA',\r\n    timezone: 'GTM-7',\r\n    avatar: '/images/avatars/avatar_11.png'\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent>\r\n        <div className={classes.details}>\r\n          <div>\r\n            <Typography\r\n              gutterBottom\r\n              variant=\"h2\"\r\n            >\r\n              John Doe\r\n            </Typography>\r\n            <Typography\r\n              className={classes.locationText}\r\n              color=\"textSecondary\"\r\n              variant=\"body1\"\r\n            >\r\n              {user.city}, {user.country}\r\n            </Typography>\r\n            <Typography\r\n              className={classes.dateText}\r\n              color=\"textSecondary\"\r\n              variant=\"body1\"\r\n            >\r\n              {moment().format('hh:mm A')} ({user.timezone})\r\n            </Typography>\r\n          </div>\r\n          <Avatar\r\n            className={classes.avatar}\r\n            src={user.avatar}\r\n          />\r\n        </div>\r\n        <div className={classes.progress}>\r\n          <Typography variant=\"body1\">Profile Completeness: 70%</Typography>\r\n          <LinearProgress\r\n            value={70}\r\n            variant=\"determinate\"\r\n          />\r\n        </div>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardActions>\r\n        <Button\r\n          className={classes.uploadButton}\r\n          color=\"primary\"\r\n          variant=\"text\"\r\n        >\r\n          Upload picture\r\n        </Button>\r\n        <Button variant=\"text\">Remove picture</Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAccountProfile.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default AccountProfile;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Card, CardContent, Grid, Typography, Avatar } from '@material-ui/core';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport MoneyIcon from '@material-ui/icons/Money';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  content: {\r\n    alignItems: 'center',\r\n    display: 'flex'\r\n  },\r\n  title: {\r\n    fontWeight: 700\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.error.main,\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  icon: {\r\n    height: 32,\r\n    width: 32\r\n  },\r\n  difference: {\r\n    marginTop: theme.spacing(2),\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  differenceIcon: {\r\n    color: theme.palette.error.dark\r\n  },\r\n  differenceValue: {\r\n    color: theme.palette.error.dark,\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst Budget = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              className={classes.title}\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"body2\"\r\n            >\r\n              BUDGET\r\n            </Typography>\r\n            <Typography variant=\"h3\">$24,000</Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <MoneyIcon className={classes.icon} />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n        <div className={classes.difference}>\r\n          <ArrowDownwardIcon className={classes.differenceIcon} />\r\n          <Typography\r\n            className={classes.differenceValue}\r\n            variant=\"body2\"\r\n          >\r\n            12%\r\n          </Typography>\r\n          <Typography\r\n            className={classes.caption}\r\n            variant=\"caption\"\r\n          >\r\n            Since last month\r\n          </Typography>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nBudget.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Budget;\r\n","import uuid from 'uuid/v1';\r\n\r\nexport default [\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1049',\r\n    amount: 30.5,\r\n    customer: {\r\n      name: 'Ekaterina Tankova'\r\n    },\r\n    createdAt: 1555016400000,\r\n    status: 'pending'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1048',\r\n    amount: 25.1,\r\n    customer: {\r\n      name: 'Cao Yu'\r\n    },\r\n    createdAt: 1555016400000,\r\n    status: 'delivered'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1047',\r\n    amount: 10.99,\r\n    customer: {\r\n      name: 'Alexa Richardson'\r\n    },\r\n    createdAt: 1554930000000,\r\n    status: 'refunded'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1046',\r\n    amount: 96.43,\r\n    customer: {\r\n      name: 'Anje Keizer'\r\n    },\r\n    createdAt: 1554757200000,\r\n    status: 'pending'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1045',\r\n    amount: 32.54,\r\n    customer: {\r\n      name: 'Clarke Gillebert'\r\n    },\r\n    createdAt: 1554670800000,\r\n    status: 'delivered'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    ref: 'CDD1044',\r\n    amount: 16.76,\r\n    customer: {\r\n      name: 'Adam Denisov'\r\n    },\r\n    createdAt: 1554670800000,\r\n    status: 'delivered'\r\n  }\r\n];\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardHeader,\r\n  CardContent,\r\n  Button,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Tooltip,\r\n  TableSortLabel\r\n} from '@material-ui/core';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\nimport mockData from './data';\r\nimport { StatusBullet } from 'components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 800\r\n  },\r\n  statusContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  status: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst statusColors = {\r\n  delivered: 'success',\r\n  pending: 'info',\r\n  refunded: 'danger'\r\n};\r\n\r\nconst LatestOrders = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [orders] = useState(mockData);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader\r\n        action={\r\n          <Button\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n          >\r\n            New entry\r\n          </Button>\r\n        }\r\n        title=\"Histórico\"\r\n      />\r\n      <Divider />\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n          <div className={classes.inner}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Order Ref</TableCell>\r\n                  <TableCell>Customer</TableCell>\r\n                  <TableCell sortDirection=\"desc\">\r\n                    <Tooltip\r\n                      enterDelay={300}\r\n                      title=\"Sort\"\r\n                    >\r\n                      <TableSortLabel\r\n                        active\r\n                        direction=\"desc\"\r\n                      >\r\n                        Date\r\n                      </TableSortLabel>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                  <TableCell>Status</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {orders.map(order => (\r\n                  <TableRow\r\n                    hover\r\n                    key={order.id}\r\n                  >\r\n                    <TableCell>{order.ref}</TableCell>\r\n                    <TableCell>{order.customer.name}</TableCell>\r\n                    <TableCell>\r\n                      {moment(order.createdAt).format('DD/MM/YYYY')}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <div className={classes.statusContainer}>\r\n                        <StatusBullet\r\n                          className={classes.status}\r\n                          color={statusColors[order.status]}\r\n                          size=\"sm\"\r\n                        />\r\n                        {order.status}\r\n                      </div>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardActions className={classes.actions}>\r\n        <Button\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          variant=\"text\"\r\n        >\r\n          View all <ArrowRightIcon />\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLatestOrders.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default LatestOrders;\r\n","import uuid from 'uuid/v1';\r\nimport moment from 'moment';\r\n\r\nexport default [\r\n  {\r\n    id: uuid(),\r\n    name: 'Dropbox',\r\n    imageUrl: '/images/products/product_1.png',\r\n    updatedAt: moment().subtract(2, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'Medium Corporation',\r\n    imageUrl: '/images/products/product_2.png',\r\n    updatedAt: moment().subtract(2, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'Slack',\r\n    imageUrl: '/images/products/product_3.png',\r\n    updatedAt: moment().subtract(3, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'Lyft',\r\n    imageUrl: '/images/products/product_4.png',\r\n    updatedAt: moment().subtract(5, 'hours')\r\n  },\r\n  {\r\n    id: uuid(),\r\n    name: 'GitHub',\r\n    imageUrl: '/images/products/product_5.png',\r\n    updatedAt: moment().subtract(9, 'hours')\r\n  }\r\n];\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Button,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  IconButton\r\n} from '@material-ui/core';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nimport mockData from './data';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  image: {\r\n    height: 48,\r\n    width: 48\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst LatestProducts = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [products] = useState(mockData);\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader\r\n        subtitle={`${products.length} in total`}\r\n        title=\"Latest products\"\r\n      />\r\n      <Divider />\r\n      <CardContent className={classes.content}>\r\n        <List>\r\n          {products.map((product, i) => (\r\n            <ListItem\r\n              divider={i < products.length - 1}\r\n              key={product.id}\r\n            >\r\n              <ListItemAvatar>\r\n                <img\r\n                  alt=\"Product\"\r\n                  className={classes.image}\r\n                  src={product.imageUrl}\r\n                />\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={product.name}\r\n                secondary={`Updated ${product.updatedAt.fromNow()}`}\r\n              />\r\n              <IconButton\r\n                edge=\"end\"\r\n                size=\"small\"\r\n              >\r\n                <MoreVertIcon />\r\n              </IconButton>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardActions className={classes.actions}>\r\n        <Button\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          variant=\"text\"\r\n        >\r\n          View all <ArrowRightIcon />\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLatestProducts.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default LatestProducts;\r\n","import palette from 'theme/palette';\r\n\r\nexport const data = {\r\n  labels: ['1 Aug', '2 Aug', '3 Aug', '4 Aug', '5 Aug', '6 Aug'],\r\n  datasets: [\r\n    {\r\n      label: 'This year',\r\n      backgroundColor: palette.primary.main,\r\n      data: [18, 5, 19, 27, 29, 19, 20]\r\n    },\r\n    {\r\n      label: 'Last year',\r\n      backgroundColor: palette.neutral,\r\n      data: [11, 20, 12, 29, 30, 25, 13]\r\n    }\r\n  ]\r\n};\r\n\r\nexport const options = {\r\n  responsive: true,\r\n  maintainAspectRatio: false,\r\n  animation: false,\r\n  legend: { display: false },\r\n  cornerRadius: 20,\r\n  tooltips: {\r\n    enabled: true,\r\n    mode: 'index',\r\n    intersect: false,\r\n    borderWidth: 1,\r\n    borderColor: palette.divider,\r\n    backgroundColor: palette.white,\r\n    titleFontColor: palette.text.primary,\r\n    bodyFontColor: palette.text.secondary,\r\n    footerFontColor: palette.text.secondary\r\n  },\r\n  layout: { padding: 0 },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        barThickness: 12,\r\n        maxBarThickness: 10,\r\n        barPercentage: 0.5,\r\n        categoryPercentage: 0.5,\r\n        ticks: {\r\n          fontColor: palette.text.secondary\r\n        },\r\n        gridLines: {\r\n          display: false,\r\n          drawBorder: false\r\n        }\r\n      }\r\n    ],\r\n    yAxes: [\r\n      {\r\n        ticks: {\r\n          fontColor: palette.text.secondary,\r\n          beginAtZero: true,\r\n          min: 0\r\n        },\r\n        gridLines: {\r\n          borderDash: [2],\r\n          borderDashOffset: [2],\r\n          color: palette.divider,\r\n          drawBorder: false,\r\n          zeroLineBorderDash: [2],\r\n          zeroLineBorderDashOffset: [2],\r\n          zeroLineColor: palette.divider\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Button\r\n} from '@material-ui/core';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\n\r\nimport { data, options } from './chart';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  chartContainer: {\r\n    height: 400,\r\n    position: 'relative'\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst LatestSales = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader\r\n        action={\r\n          <Button\r\n            size=\"small\"\r\n            variant=\"text\"\r\n          >\r\n            Last 7 days <ArrowDropDownIcon />\r\n          </Button>\r\n        }\r\n        title=\"Latest Sales\"\r\n      />\r\n      <Divider />\r\n      <CardContent>\r\n        <div className={classes.chartContainer}>\r\n          <Bar\r\n            data={data}\r\n            options={options}\r\n          />\r\n        </div>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardActions className={classes.actions}>\r\n        <Button\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          variant=\"text\"\r\n        >\r\n          Overview <ArrowRightIcon />\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nLatestSales.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default LatestSales;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  Avatar,\r\n  LinearProgress\r\n} from '@material-ui/core';\r\nimport MoneyIcon from '@material-ui/icons/MoneyOutlined';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  content: {\r\n    alignItems: 'center',\r\n    display: 'flex'\r\n  },\r\n  title: {\r\n    fontWeight: 700\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.success.main,\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  icon: {\r\n    height: 32,\r\n    width: 32\r\n  },\r\n  difference: {\r\n    marginTop: theme.spacing(2),\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  differenceIcon: {\r\n    color: theme.palette.success.dark\r\n  },\r\n  differenceValue: {\r\n    color: theme.palette.success.dark,\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  progress: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst TasksProgress = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              className={classes.title}\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"body2\"\r\n            >\r\n              FUNDO DE CRESCIMENTO\r\n            </Typography>\r\n            <Typography\r\n              color=\"inherit\"\r\n              variant=\"h3\"\r\n            >\r\n              R$ 15.000,00\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <MoneyIcon className={classes.icon} />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n        <Typography\r\n          className={classes.caption}\r\n          variant=\"caption\"\r\n        >\r\n          plano de crescimento finaliza em: 30/03/2021\r\n        </Typography>\r\n        <LinearProgress\r\n          className={classes.progress}\r\n          variant=\"determinate\"\r\n        />\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTasksProgress.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TasksProgress;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  Avatar,\r\n  LinearProgress\r\n} from '@material-ui/core';\r\nimport LocalAtmIcon from '@material-ui/icons/LocalAtmOutlined';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  content: {\r\n    alignItems: 'center',\r\n    display: 'flex'\r\n  },\r\n  title: {\r\n    fontWeight: 700\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.success.main,\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  icon: {\r\n    height: 32,\r\n    width: 32\r\n  },\r\n  difference: {\r\n    marginTop: theme.spacing(2),\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  differenceIcon: {\r\n    color: theme.palette.success.dark\r\n  },\r\n  differenceValue: {\r\n    color: theme.palette.success.dark,\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  progress: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst TasksProgress = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              className={classes.title}\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"body2\"\r\n            >\r\n              TOTAL APORTADO\r\n            </Typography>\r\n            <Typography\r\n              color=\"inherit\"\r\n              variant=\"h3\"\r\n            >\r\n              R$ 20.000,00\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <LocalAtmIcon className={classes.icon} />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n        <Typography\r\n          className={classes.caption}\r\n          variant=\"caption\"\r\n        >\r\n          valor consolidado dos aportes nos planos.\r\n        </Typography>\r\n        <LinearProgress\r\n          className={classes.progress}\r\n          variant=\"determinate\"\r\n        />\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTasksProgress.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TasksProgress;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  Avatar,\r\n  LinearProgress\r\n} from '@material-ui/core';\r\nimport InsertChartIcon from '@material-ui/icons/InsertChartOutlined';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  content: {\r\n    alignItems: 'center',\r\n    display: 'flex'\r\n  },\r\n  title: {\r\n    fontWeight: 700\r\n  },\r\n  avatar: {\r\n    backgroundColor: theme.palette.success.main,\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  icon: {\r\n    height: 32,\r\n    width: 32\r\n  },\r\n  difference: {\r\n    marginTop: theme.spacing(2),\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  differenceIcon: {\r\n    color: theme.palette.success.dark\r\n  },\r\n  differenceValue: {\r\n    color: theme.palette.success.dark,\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  progress: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst TasksProgress = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              className={classes.title}\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"body2\"\r\n            >\r\n              FUNDO FLEXÍVEL\r\n            </Typography>\r\n            <Typography\r\n              color=\"inherit\"\r\n              variant=\"h3\"\r\n            >\r\n              R$ 5.000,00\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              <InsertChartIcon className={classes.icon} />\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n        <Typography\r\n          className={classes.caption}\r\n          variant=\"caption\"\r\n        >\r\n         plano flexível finaliza em: 30/09/2020\r\n        </Typography>\r\n        <LinearProgress\r\n          className={classes.progress}\r\n          variant=\"determinate\"\r\n        />\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTasksProgress.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TasksProgress;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport {\r\n  Budget,\r\n  TotalUsers,\r\n  TasksProgress,\r\n  TotalProfit,\r\n  LatestSales,\r\n  UsersByDevice\r\n} from './components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst Dashboard = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        spacing={4}\r\n      >\r\n        <Grid\r\n          item\r\n          lg={3}\r\n          sm={6}\r\n          xl={3}\r\n          xs={12}\r\n        >\r\n          <TotalUsers />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          lg={3}\r\n          sm={6}\r\n          xl={3}\r\n          xs={12}\r\n        >\r\n          <TasksProgress />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          lg={3}\r\n          sm={6}\r\n          xl={3}\r\n          xs={12}\r\n        >\r\n          <TotalProfit />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles, useTheme } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  IconButton,\r\n  Divider,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\r\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  chartContainer: {\r\n    position: 'relative',\r\n    height: '300px'\r\n  },\r\n  stats: {\r\n    marginTop: theme.spacing(2),\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  device: {\r\n    textAlign: 'center',\r\n    padding: theme.spacing(1)\r\n  },\r\n  deviceIcon: {\r\n    color: theme.palette.icon\r\n  }\r\n}));\r\n\r\nconst UsersByDevice = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const data = {\r\n    datasets: [\r\n      {\r\n        data: [63, 15, 22],\r\n        backgroundColor: [\r\n          theme.palette.primary.main,\r\n          theme.palette.error.main,\r\n          theme.palette.warning.main\r\n        ],\r\n        borderWidth: 8,\r\n        borderColor: theme.palette.white,\r\n        hoverBorderColor: theme.palette.white\r\n      }\r\n    ],\r\n    labels: ['Desktop', 'Tablet', 'Mobile']\r\n  };\r\n\r\n  const options = {\r\n    legend: {\r\n      display: false\r\n    },\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    animation: false,\r\n    cutoutPercentage: 80,\r\n    layout: { padding: 0 },\r\n    tooltips: {\r\n      enabled: true,\r\n      mode: 'index',\r\n      intersect: false,\r\n      borderWidth: 1,\r\n      borderColor: theme.palette.divider,\r\n      backgroundColor: theme.palette.white,\r\n      titleFontColor: theme.palette.text.primary,\r\n      bodyFontColor: theme.palette.text.secondary,\r\n      footerFontColor: theme.palette.text.secondary\r\n    }\r\n  };\r\n\r\n  const devices = [\r\n    {\r\n      title: 'Desktop',\r\n      value: '63',\r\n      icon: <LaptopMacIcon />,\r\n      color: theme.palette.primary.main\r\n    },\r\n    {\r\n      title: 'Tablet',\r\n      value: '15',\r\n      icon: <TabletMacIcon />,\r\n      color: theme.palette.error.main\r\n    },\r\n    {\r\n      title: 'Mobile',\r\n      value: '23',\r\n      icon: <PhoneIphoneIcon />,\r\n      color: theme.palette.warning.main\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader\r\n        action={\r\n          <IconButton size=\"small\">\r\n            <RefreshIcon />\r\n          </IconButton>\r\n        }\r\n        title=\"Users By Device\"\r\n      />\r\n      <Divider />\r\n      <CardContent>\r\n        <div className={classes.chartContainer}>\r\n          <Doughnut\r\n            data={data}\r\n            options={options}\r\n          />\r\n        </div>\r\n        <div className={classes.stats}>\r\n          {devices.map(device => (\r\n            <div\r\n              className={classes.device}\r\n              key={device.title}\r\n            >\r\n              <span className={classes.deviceIcon}>{device.icon}</span>\r\n              <Typography variant=\"body1\">{device.title}</Typography>\r\n              <Typography\r\n                style={{ color: device.color }}\r\n                variant=\"h2\"\r\n              >\r\n                {device.value}%\r\n              </Typography>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nUsersByDevice.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default UsersByDevice;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(4)\r\n  },\r\n  iframe: {\r\n    width: '100%',\r\n    minHeight: 640,\r\n    border: 0\r\n  }\r\n}));\r\n\r\nconst Icons = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <iframe\r\n        className={classes.iframe}\r\n        src=\"https://material.io/tools/icons/?icon=accessibility&style=outline\"\r\n        title=\"Material Design icons\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Icons;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(4)\r\n  },\r\n  content: {\r\n    paddingTop: 150,\r\n    textAlign: 'center'\r\n  },\r\n  image: {\r\n    marginTop: 50,\r\n    display: 'inline-block',\r\n    maxWidth: '100%',\r\n    width: 560\r\n  }\r\n}));\r\n\r\nconst NotFound = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        justify=\"center\"\r\n        spacing={4}\r\n      >\r\n        <Grid\r\n          item\r\n          lg={6}\r\n          xs={12}\r\n        >\r\n          <div className={classes.content}>\r\n            <Typography variant=\"h1\">\r\n              404: The page you are looking for isn’t here\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\">\r\n              You either tried some shady route or you came here by mistake.\r\n              Whichever it is, try using the navigation\r\n            </Typography>\r\n            <img\r\n              alt=\"Under development\"\r\n              className={classes.image}\r\n              src=\"/images/undraw_page_not_found_su7k.svg\"\r\n            />\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardActions,\r\n  Typography,\r\n  Grid,\r\n  Divider\r\n} from '@material-ui/core';\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  imageContainer: {\r\n    height: 64,\r\n    width: 64,\r\n    margin: '0 auto',\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    borderRadius: '5px',\r\n    overflow: 'hidden',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  image: {\r\n    width: '100%'\r\n  },\r\n  statsItem: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  statsIcon: {\r\n    color: theme.palette.icon,\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst ProductCard = props => {\r\n  const { className, product, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent>\r\n        <div className={classes.imageContainer}>\r\n          <img\r\n            alt=\"Product\"\r\n            className={classes.image}\r\n            src={product.imageUrl}\r\n          />\r\n        </div>\r\n        <Typography\r\n          align=\"center\"\r\n          gutterBottom\r\n          variant=\"h4\"\r\n        >\r\n          {product.title}\r\n        </Typography>\r\n        <Typography\r\n          align=\"center\"\r\n          variant=\"body1\"\r\n        >\r\n          {product.description}\r\n        </Typography>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardActions>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n        >\r\n          <Grid\r\n            className={classes.statsItem}\r\n            item\r\n          >\r\n            <AccessTimeIcon className={classes.statsIcon} />\r\n            <Typography\r\n              display=\"inline\"\r\n              variant=\"body2\"\r\n            >\r\n              Updated 2hr ago\r\n            </Typography>\r\n          </Grid>\r\n          <Grid\r\n            className={classes.statsItem}\r\n            item\r\n          >\r\n            <GetAppIcon className={classes.statsIcon} />\r\n            <Typography\r\n              display=\"inline\"\r\n              variant=\"body2\"\r\n            >\r\n              {product.totalDownloads} Downloads\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nProductCard.propTypes = {\r\n  className: PropTypes.string,\r\n  product: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProductCard;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { SearchInput } from 'components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  row: {\r\n    height: '42px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  spacer: {\r\n    flexGrow: 1\r\n  },\r\n  importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  exportButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  searchInput: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst ProductsToolbar = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <div className={classes.row}>\r\n        <span className={classes.spacer} />\r\n        <Button className={classes.importButton}>Importar</Button>\r\n        <Button className={classes.exportButton}>Exportar</Button>\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n        >\r\n          Add product\r\n        </Button>\r\n      </div>\r\n      <div className={classes.row}>\r\n        <SearchInput\r\n          className={classes.searchInput}\r\n          placeholder=\"Search product\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nProductsToolbar.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default ProductsToolbar;\r\n","import uuid from 'uuid/v1';\r\n\r\nexport default [\r\n  {\r\n    id: uuid(),\r\n    title: 'Dropbox',\r\n    description:\r\n      'Dropbox is a file hosting service that offers cloud storage, file synchronization, a personal cloud.',\r\n    imageUrl: '/images/products/product_1.png',\r\n    totalDownloads: '594',\r\n    updatedAt: '27/03/2019'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    title: 'Medium Corporation',\r\n    description:\r\n      'Medium is an online publishing platform developed by Evan Williams, and launched in August 2012.',\r\n    imageUrl: '/images/products/product_2.png',\r\n    totalDownloads: '625',\r\n    createdAt: '31/03/2019'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    title: 'Slack',\r\n    description:\r\n      'Slack is a cloud-based set of team collaboration tools and services, founded by Stewart Butterfield.',\r\n    imageUrl: '/images/products/product_3.png',\r\n    totalDownloads: '857',\r\n    createdAt: '03/04/2019'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    title: 'Lyft',\r\n    description:\r\n      'Lyft is an on-demand transportation company based in San Francisco, California.',\r\n    imageUrl: '/images/products/product_4.png',\r\n    totalDownloads: '406',\r\n    createdAt: '04/04/2019'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    title: 'GitHub',\r\n    description:\r\n      'GitHub is a web-based hosting service for version control of code using Git.',\r\n    imageUrl: '/images/products/product_5.png',\r\n    totalDownloads: '835',\r\n    createdAt: '04/04/2019'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    title: 'Squarespace',\r\n    description:\r\n      'Squarespace provides software as a service for website building and hosting. Headquartered in NYC.',\r\n    imageUrl: '/images/products/product_6.png',\r\n    totalDownloads: '835',\r\n    createdAt: '04/04/2019'\r\n  }\r\n];\r\n","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { IconButton, Grid, Typography } from '@material-ui/core';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\n\r\nimport { ProductsToolbar, ProductCard } from './components';\r\nimport mockData from './data';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3)\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  pagination: {\r\n    marginTop: theme.spacing(3),\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst ProductList = () => {\r\n  const classes = useStyles();\r\n\r\n  const [products] = useState(mockData);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ProductsToolbar />\r\n      <div className={classes.content}>\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n        >\r\n          {products.map(product => (\r\n            <Grid\r\n              item\r\n              key={product.id}\r\n              lg={4}\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <ProductCard product={product} />\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </div>\r\n      <div className={classes.pagination}>\r\n        <Typography variant=\"caption\">1-6 of 20</Typography>\r\n        <IconButton>\r\n          <ChevronLeftIcon />\r\n        </IconButton>\r\n        <IconButton>\r\n          <ChevronRightIcon />\r\n        </IconButton>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Grid,\r\n  Divider,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Typography,\r\n  Button\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  item: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  }\r\n}));\r\n\r\nconst Notifications = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <form>\r\n        <CardHeader\r\n          subheader=\"Gerenciar notificações\"\r\n          title=\"Notificações\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={6}\r\n            wrap=\"wrap\"\r\n          >\r\n            <Grid\r\n              className={classes.item}\r\n              item\r\n              md={4}\r\n              sm={6}\r\n              xs={12}\r\n            >\r\n              <Typography\r\n                gutterBottom\r\n                variant=\"h6\"\r\n              >\r\n                Celular\r\n              </Typography>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    color=\"checkbox\"\r\n                    defaultChecked //\r\n                  />\r\n                }\r\n                label=\"E-mail\"\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox color=\"checkbox\" />}\r\n                label=\"SMS\"\r\n              />\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    color=\"checkbox\"\r\n                    defaultChecked //\r\n                  />\r\n                }\r\n                label=\"Push Notification\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              className={classes.item}\r\n              item\r\n              md={4}\r\n              sm={6}\r\n              xs={12}\r\n            >\r\n              <Typography\r\n                gutterBottom\r\n                variant=\"h6\"\r\n              >\r\n                Navegador\r\n              </Typography>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    color=\"checkbox\"\r\n                    defaultChecked //\r\n                  />\r\n                }\r\n                label=\"E-mail\"\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox color=\"checkbox\" />}\r\n                label=\"Chat Online\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          <Button\r\n            color=\"secondary\"\r\n            variant=\"contained\"\r\n          >\r\n            Salvar\r\n          </Button>\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nNotifications.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Notifications;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Button,\r\n  TextField\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Password = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [values, setValues] = useState({\r\n    password: '',\r\n    confirm: ''\r\n  });\r\n\r\n  const handleChange = event => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <form>\r\n        <CardHeader\r\n          subheader=\"Atualizar senha\"\r\n          title=\"Senha\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Senha atual\"\r\n            name=\"password\"\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            value={values.password}\r\n            variant=\"outlined\"\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Nova senha\"\r\n            name=\"newPassword\"\r\n            onChange={handleChange}\r\n            style={{ marginTop: '1rem' }}\r\n            type=\"password\"\r\n            value={values.newPassword}\r\n            variant=\"outlined\"\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Confirmar senha\"\r\n            name=\"confirm\"\r\n            onChange={handleChange}\r\n            style={{ marginTop: '1rem' }}\r\n            type=\"password\"\r\n            value={values.confirm}\r\n            variant=\"outlined\"\r\n          />\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          <Button\r\n            color=\"secondary\"\r\n            variant=\"contained\"\r\n          >\r\n            Atualizar\r\n          </Button>\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nPassword.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Password;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport { Notifications, Password } from './components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst Settings = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        spacing={4}\r\n      >\r\n        <Grid\r\n          item\r\n          md={7}\r\n          xs={12}\r\n        >\r\n          <Notifications />\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          md={5}\r\n          xs={12}\r\n        >\r\n          <Password />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import React from 'react';\r\n\r\n// Material components\r\nimport { SvgIcon } from '@material-ui/core';\r\n\r\nexport default function Facebook(props) {\r\n  return (\r\n    <SvgIcon {...props}>\r\n      <path d=\"M9.53144612,22.005 L9.53144612,13.0552149 L6.44166667,13.0552149 L6.44166667,9.49875 L9.53144612,9.49875 L9.53144612,6.68484375 C9.53144612,5.19972656 9.95946769,4.04680661 10.8155103,3.22608401 C11.6715529,2.4053613 12.808485,1.995 14.2263057,1.995 C15.3766134,1.995 16.3129099,2.04710915 17.0351961,2.15132812 L17.0351961,5.3169726 L15.1090998,5.3169726 C14.3868137,5.3169726 13.8919142,5.47330073 13.6244006,5.78595698 C13.4103902,6.04650407 13.3033846,6.46337874 13.3033846,7.03658198 L13.3033846,9.49875 L16.71418,9.49875 L16.2326559,13.0552149 L13.3033846,13.0552149 L13.3033846,22.005 L9.53144612,22.005 Z\" />\r\n    </SvgIcon>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\n// Material components\r\nimport { SvgIcon } from '@material-ui/core';\r\n\r\nexport default function Google(props) {\r\n  return (\r\n    <SvgIcon {...props}>\r\n      <path d=\"M21,12.2177419 C21,13.9112905 20.6311475,15.4233869 19.8934426,16.7540323 C19.1557377,18.0846776 18.1168031,19.1249998 16.7766393,19.875 C15.4364756,20.6250002 13.8934424,21 12.147541,21 C10.4999998,21 8.97540984,20.5947579 7.57377049,19.7842742 C6.17213115,18.9737905 5.05942604,17.8790323 4.23565574,16.5 C3.41188543,15.1209677 3,13.6209679 3,12 C3,10.3790321 3.41188543,8.87903226 4.23565574,7.5 C5.05942604,6.12096774 6.17213115,5.02620949 7.57377049,4.21572581 C8.97540984,3.40524212 10.4999998,3 12.147541,3 C14.5327871,3 16.5737705,3.78629051 18.2704918,5.35887097 L15.7991803,7.71774194 C15.0122953,6.96774175 14.0655738,6.52016129 12.9590164,6.375 C11.9262295,6.22983871 10.9057375,6.375 9.89754098,6.81048387 C8.88934445,7.24596774 8.07786904,7.89919355 7.46311475,8.77016129 C6.79918033,9.71370968 6.46721311,10.7903228 6.46721311,12 C6.46721311,13.0403228 6.72540984,13.9899192 7.24180328,14.8487903 C7.75819672,15.7076615 8.4467215,16.3971776 9.30737705,16.9173387 C10.1680326,17.4374998 11.1147541,17.6975806 12.147541,17.6975806 C13.2540984,17.6975806 14.2254096,17.455645 15.0614754,16.9717742 C15.7254098,16.5846772 16.2786885,16.0645161 16.7213115,15.4112903 C17.0409838,14.8790321 17.2499998,14.3467744 17.3483607,13.8145161 L12.147541,13.8145161 L12.147541,10.6935484 L20.852459,10.6935484 C20.9508199,11.2258066 21,11.7338712 21,12.2177419 Z\" />\r\n    </SvgIcon>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink, withRouter, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport validate from 'validate.js';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Grid,\r\n  Button,\r\n  IconButton,\r\n  TextField,\r\n  Link,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport AuthService from \"../../services/auth.service\";\r\nimport SweetAlert from 'sweetalert2-react';\r\n\r\nimport { Facebook as FacebookIcon, Google as GoogleIcon } from 'icons';\r\n\r\nconst schema = {\r\n  email: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    email: true,\r\n    length: {\r\n      maximum: 64\r\n    }\r\n  },\r\n  password: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    length: {\r\n      maximum: 128\r\n    }\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  signupLink: {\r\n    color: 'white!important'\r\n  },\r\n  root: {\r\n    backgroundColor: theme.palette.background.default,\r\n    height: '100%'\r\n  },\r\n  grid: {\r\n    height: '100%'\r\n  },\r\n  quoteContainer: {\r\n    [theme.breakpoints.down('md')]: {\r\n      display: 'none'\r\n    }\r\n  },\r\n  quote: {\r\n    backgroundColor: theme.palette.neutral,\r\n    height: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundImage: 'url(/images/auth.jpg)',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center'\r\n  },\r\n  quoteInner: {\r\n    textAlign: 'center',\r\n    flexBasis: '600px'\r\n  },\r\n  quoteText: {\r\n    color: theme.palette.white,\r\n    fontWeight: 300\r\n  },\r\n  name: {\r\n    marginTop: theme.spacing(3),\r\n    color: theme.palette.white\r\n  },\r\n  bio: {\r\n    color: theme.palette.white\r\n  },\r\n  contentContainer: {},\r\n  content: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  contentHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingTop: theme.spacing(5),\r\n    paddingBototm: theme.spacing(2),\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2)\r\n  },\r\n  logoImage: {\r\n    marginLeft: theme.spacing(4)\r\n  },\r\n  contentBody: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    [theme.breakpoints.down('md')]: {\r\n      justifyContent: 'center'\r\n    }\r\n  },\r\n  form: {\r\n    paddingLeft: 100,\r\n    paddingRight: 100,\r\n    paddingBottom: 125,\r\n    flexBasis: 700,\r\n    [theme.breakpoints.down('sm')]: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2)\r\n    }\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  socialButtons: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  socialIcon: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  sugestion: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  textField: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  signInButton: {\r\n    margin: theme.spacing(2, 0),\r\n    \"&:disabled\": {\r\n      color: 'rgb(206, 191, 191)!important',\r\n      backgroundColor: 'rgb(107, 110, 128)!important'\r\n    }\r\n  }\r\n}));\r\n\r\nconst SignIn = props => {\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const [status, setStatus] = useState(false)\r\n  const [message, setMessage] = useState('')\r\n  const [formState, setFormState] = useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n\r\n  useEffect(() => {\r\n    const errors = validate(formState.values, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...formState,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n  }, [formState.values]);\r\n\r\n  const handleBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  const handleChange = event => {\r\n    event.persist();\r\n\r\n    setFormState(formState => ({\r\n      ...formState,\r\n      values: {\r\n        ...formState.values,\r\n        [event.target.name]:\r\n          event.target.type === 'checkbox'\r\n            ? event.target.checked\r\n            : event.target.value\r\n      },\r\n      touched: {\r\n        ...formState.touched,\r\n        [event.target.name]: true\r\n      }\r\n    }));\r\n  };\r\n\r\n  const handleSignIn = event => {\r\n    if(formState.isValid) {\r\n      AuthService.login(formState.values).then(\r\n        () => {\r\n          history.push(\"/dashboard\");\r\n          window.location.reload(\"/dashboard\");\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n            setStatus(true)\r\n            setMessage(resMessage)\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const hasError = field =>\r\n    formState.touched[field] && formState.errors[field] ? true : false;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        className={classes.grid}\r\n        container\r\n      >\r\n        <Grid\r\n          className={classes.quoteContainer}\r\n          item\r\n          lg={5}\r\n        >\r\n          <div className={classes.quote}>\r\n            <div className={classes.quoteInner}>\r\n              <Typography\r\n                className={classes.quoteText}\r\n                variant=\"h1\"\r\n              >\r\n                \"O dinheiro, assim como as emoções, é algo que você precisa controlar para manter sua vida no caminho certo.\"\r\n              </Typography>\r\n              <div className={classes.person}>\r\n                <Typography\r\n                  className={classes.name}\r\n                  variant=\"body1\"\r\n                >\r\n                  Natasha Munson\r\n                </Typography>\r\n                <Typography\r\n                  className={classes.bio}\r\n                  variant=\"body2\"\r\n                >\r\n                  www.novosite.com.br\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n        <Grid\r\n          className={classes.content}\r\n          item\r\n          lg={7}\r\n          xs={12}\r\n        >\r\n          <div className={classes.content}>\r\n            <div className={classes.contentHeader}>\r\n              <IconButton onClick={handleBack}>\r\n                <ArrowBackIcon />\r\n              </IconButton>\r\n            </div>\r\n            <div className={classes.contentBody}>\r\n              <form\r\n                className={classes.form}\r\n                // onSubmit={handleSignIn}\r\n              >\r\n                <Typography\r\n                  className={classes.title}\r\n                  variant=\"h2\"\r\n                >\r\n                  Entrar\r\n                </Typography>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  gutterBottom\r\n                >\r\n                  Você está a um passo de acessar sua conta.\r\n                </Typography>\r\n                <Grid\r\n                  className={classes.socialButtons}\r\n                  container\r\n                  spacing={2}\r\n                >\r\n                  <Grid item>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      onClick={handleSignIn}\r\n                      size=\"large\"\r\n                      variant=\"contained\"\r\n                    >\r\n                      <FacebookIcon className={classes.socialIcon} />\r\n                      Login with Facebook\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Button\r\n                      onClick={handleSignIn}\r\n                      size=\"large\"\r\n                      variant=\"contained\"\r\n                    >\r\n                      <GoogleIcon className={classes.socialIcon} />\r\n                      Login with Google\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n                <Typography\r\n                  align=\"center\"\r\n                  className={classes.sugestion}\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n                  ou faça o login com e-mail:\r\n                </Typography>\r\n                <TextField\r\n                  className={classes.textField}\r\n                  error={hasError('email')}\r\n                  fullWidth\r\n                  helperText={\r\n                    hasError('email') ? formState.errors.email[0] : null\r\n                  }\r\n                  label=\"Endereço de e-mail\"\r\n                  name=\"email\"\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  value={formState.values.email || ''}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  className={classes.textField}\r\n                  error={hasError('password')}\r\n                  fullWidth\r\n                  helperText={\r\n                    hasError('password') ? formState.errors.password[0] : null\r\n                  }\r\n                  label=\"Senha\"\r\n                  name=\"password\"\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={formState.values.password || ''}\r\n                  variant=\"outlined\"\r\n                />\r\n                <Button\r\n                  className={classes.signInButton}\r\n                  color=\"primary\"\r\n                  disabled={!formState.isValid}\r\n                  fullWidth\r\n                  size=\"large\"\r\n                  type=\"button\"\r\n                  onClick={handleSignIn}\r\n                  variant=\"contained\"\r\n                >\r\n                  Confirmar\r\n                </Button>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n                  Não possui uma conta?{' '}\r\n                  <Link\r\n                    className={classes.signupLink}\r\n                    component={RouterLink}\r\n                    to=\"/sign-up\"\r\n                    variant=\"h6\"\r\n                  >\r\n                    Registre-se\r\n                  </Link>\r\n                </Typography>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n      <SweetAlert\r\n        show={status}\r\n        title=\"Erro\"\r\n        text={message}\r\n        type='error'\r\n        onConfirm={() => {\r\n          setStatus(false)\r\n        }}\r\n        />\r\n    </div>\r\n  );\r\n};\r\n\r\nSignIn.propTypes = {\r\n  history: PropTypes.object\r\n};\r\n\r\nexport default withRouter(SignIn);\r\n","import React, { Fragment } from \"react\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport InputMask from \"react-input-mask\";\r\n// Destructure props\r\nconst FirstStep = ({\r\n  classes,\r\n  handleNext,\r\n  handleChange,\r\n  values: { full_name, cpf, email, cellphone, password, confirm },\r\n  filedError,\r\n  isError\r\n}) => {\r\n  // Check if all values are not empty\r\n  const isEmpty = full_name.length > 0\r\n                  && cpf.length > 0\r\n                  && email.length > 0\r\n                  && cellphone.length > 0\r\n                  && password.length > 0\r\n                  && confirm.length > 0\r\n                  && password === confirm\r\n  if(confirm !== password) {\r\n      filedError.confirm = 'Confirmar Senha e Senha devem ser iguais.';\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <Grid container noValidate>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Nome Completo\"\r\n            name=\"full_name\"\r\n            placeholder=\"Nome Completo\"\r\n            defaultValue={full_name}\r\n            onChange={handleChange(\"full_name\")}\r\n            margin=\"normal\"\r\n            error={filedError.full_name !== \"\"}\r\n            helperText={\r\n              filedError.full_name !== \"\" ? `${filedError.full_name}` : \"\"\r\n            }\r\n            required\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <InputMask\r\n            mask=\"999.999.999-99\"\r\n            maskChar=\" \"\r\n            defaultValue={cpf}\r\n            onChange={handleChange(\"cpf\")}\r\n          >\r\n            {() => <TextField\r\n                    fullWidth\r\n                    label=\"CPF\"\r\n                    name=\"cpf\"\r\n                    placeholder=\"formato: 123.432.156-12\"\r\n                    margin=\"normal\"\r\n                    error={filedError.cpf !== \"\"}\r\n                    helperText={\r\n                      filedError.cpf !== \"\" ? `${filedError.cpf}` : \"\"\r\n                    }\r\n                    required\r\n                  />\r\n            }\r\n            </InputMask>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"E-mail\"\r\n            name=\"email\"\r\n            placeholder=\"meu@email.com.br\"\r\n            type=\"email\"\r\n            defaultValue={email}\r\n            onChange={handleChange(\"email\")}\r\n            margin=\"normal\"\r\n            error={filedError.email !== \"\"}\r\n            helperText={filedError.email !== \"\" ? `${filedError.email}` : \"\"}\r\n            required\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <InputMask\r\n              mask=\"+55 (99) 99999-9999\"\r\n              maskChar=\" \"\r\n              defaultValue={cellphone}\r\n              onChange={handleChange(\"cellphone\")}\r\n            >\r\n              {() => <TextField\r\n                      fullWidth\r\n                      label=\"Celular\"\r\n                      name=\"cellphone\"\r\n                      placeholder=\"i.e: +55 (99) 99999-9999\"\r\n                      margin=\"normal\"\r\n                      error={filedError.cellphone !== \"\"}\r\n                      helperText={filedError.cellphone !== \"\" ? `${filedError.cellphone}` : \"\"}\r\n              />}\r\n          </InputMask>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Senha\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Senha\"\r\n            defaultValue={password}\r\n            onChange={handleChange(\"password\")}\r\n            margin=\"normal\"\r\n            error={filedError.password !== \"\"}\r\n            helperText={\r\n              filedError.password !== \"\" ? `${filedError.password}` : \"\"\r\n            }\r\n            required\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Confirmar Senha\"\r\n            name=\"confirm\"\r\n            type=\"password\"\r\n            placeholder=\"Confirmar Senha\"\r\n            defaultValue={confirm}\r\n            onChange={handleChange(\"confirm\")}\r\n            margin=\"normal\"\r\n            error={filedError.confirm !== \"\"}\r\n            helperText={\r\n              filedError.confirm !== \"\" ? `${filedError.confirm}` : \"\"\r\n            }\r\n            required\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <div\r\n        style={{ display: \"flex\", marginTop: 50, justifyContent: \"flex-end\" }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          disabled={!isEmpty || isError}\r\n          color=\"primary\"\r\n          onClick={handleNext}\r\n          className={classes.disableButton}\r\n        >\r\n          Avançar\r\n        </Button>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default FirstStep\r\n","import React, { Fragment } from \"react\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport FormControl from \"@material-ui/core/FormControl\"\r\nimport Select from \"@material-ui/core/Select\"\r\nimport InputLabel from \"@material-ui/core/InputLabel\"\r\nimport MenuItem from \"@material-ui/core/MenuItem\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport InputMask from \"react-input-mask\";\r\n// Destructure props\r\nconst SecondStep = ({\r\n  classes,\r\n  handleNext,\r\n  handleBack,\r\n  handleChange,\r\n  values: { zipcode, birthdate, gender,investment_type,investment},\r\n  filedError,\r\n  isError,\r\n  isZipcode\r\n}) => {\r\n  // Check if all values are not empty\r\n  const isEmpty = birthdate.length > 0\r\n                   && zipcode.length > 0\r\n                   && gender.length > 0\r\n                   && investment_type.length > 0\r\n                   && investment.length > 0\r\n  return (\r\n    <Fragment>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <InputMask\r\n            mask=\"99999-999\"\r\n            maskChar=\" \"\r\n            defaultValue={zipcode}\r\n            onChange={handleChange(\"zipcode\")}\r\n          >\r\n            {() => <TextField\r\n                    fullWidth\r\n                    label=\"CEP\"\r\n                    name=\"zipcode\"\r\n                    placeholder=\"Informe seu CEP\"\r\n                    margin=\"normal\"\r\n                    error={!isZipcode}\r\n                    helperText={isZipcode ? \"\" : \"Formato de CEP inválido.\"}\r\n                    required\r\n                  />\r\n            }\r\n            </InputMask>\r\n\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            InputLabelProps={{\r\n              shrink: true\r\n            }}\r\n            label=\"Nascimento\"\r\n            name=\"birthdate\"\r\n            type=\"date\"\r\n            defaultValue={birthdate}\r\n            onChange={handleChange(\"birthdate\")}\r\n            margin=\"normal\"\r\n            required\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <FormControl fullWidth required margin=\"normal\">\r\n            <InputLabel htmlFor=\"gender\">Gênero</InputLabel>\r\n            <Select value={gender} onChange={handleChange(\"gender\")}>\r\n              <MenuItem value={\"MASCULINO\"}>MASCULINO</MenuItem>\r\n              <MenuItem value={\"FEMININO\"}>FEMININO</MenuItem>\r\n              <MenuItem value={\"TRANSGÊNERO\"}>TRANSGÊNERO</MenuItem>\r\n              <MenuItem value={\"OUTRO\"}>OUTRO</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <FormControl fullWidth required margin=\"normal\">\r\n            <InputLabel htmlFor=\"investment_type\">Plano</InputLabel>\r\n            <Select value={investment_type} onChange={handleChange(\"investment_type\")}>\r\n              <MenuItem value={\"FLEXIVEL\"}>FLEXÍVEL</MenuItem>\r\n              <MenuItem value={\"CRESCIMENTO\"}>CRESCIMENTO</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <FormControl fullWidth required margin=\"normal\">\r\n            <InputLabel htmlFor=\"investment\">Aporte</InputLabel>\r\n            <Select value={investment} onChange={handleChange(\"investment\")}>\r\n              <MenuItem value={\"5.000-15.000\"}>5.000-15.000</MenuItem>\r\n              <MenuItem value={\"20.000-50.000\"}>20.000-50.000</MenuItem>\r\n              <MenuItem value={\"55.000-80.000\"}>55.000-80.000</MenuItem>\r\n              <MenuItem value={\"100.000+\"}>100.000+</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n      <div\r\n        style={{ display: \"flex\", marginTop: 50, justifyContent: \"flex-end\" }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"default\"\r\n          onClick={handleBack}\r\n          style={{ marginRight: 20 }}\r\n        >\r\n          Voltar\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          disabled={!isEmpty || isError || !isZipcode}\r\n          color=\"primary\"\r\n          onClick={handleNext}\r\n          className={classes.disableButton}\r\n        >\r\n         Avançar\r\n        </Button>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default SecondStep\r\n","import React, { Fragment } from \"react\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport FormControl from \"@material-ui/core/FormControl\"\r\nimport Select from \"@material-ui/core/Select\"\r\nimport InputLabel from \"@material-ui/core/InputLabel\"\r\nimport MenuItem from \"@material-ui/core/MenuItem\"\r\nimport Button from \"@material-ui/core/Button\"\r\n\r\n// Destructure props\r\nconst Confirm = ({\r\n  classes,\r\n  handleNext,\r\n  handleBack,\r\n  handleChange,\r\n  submit,\r\n  values: { street, number, complement, neighborhood, city, state},\r\n  filedError,\r\n  isError\r\n}) => {\r\n  // Check if all values are not empty\r\n  const isEmpty = city.length > 0\r\n                  && street.length > 0\r\n                  && number.length > 0\r\n                  && complement.length >= 0\r\n                  && neighborhood.length > 0\r\n                  && city.length > 0\r\n                  && state.length > 0\r\n  const isNumber = number.length > 1 && number.length < 6;\r\n  return (\r\n    <Fragment>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Logradouro\"\r\n            name=\"street\"\r\n            placeholder=\"Digite sua rua/logradouro.\"\r\n            defaultValue={street}\r\n            onChange={handleChange(\"street\")}\r\n            margin=\"normal\"\r\n            error={filedError.street !== \"\"}\r\n            helperText={filedError.street !== \"\" ? `${filedError.street}` : \"\"}\r\n            required\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Número\"\r\n            name=\"number\"\r\n            placeholder=\"Digite o número da residência.\"\r\n            defaultValue={number}\r\n            onChange={handleChange(\"number\")}\r\n            margin=\"normal\"\r\n            error={filedError.number !== \"\" || !isNumber}\r\n            helperText={filedError.number !== \"\" || !isNumber ? \"Números de 2 a 5 necessários.\" : \"\"}\r\n            required\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Complemento\"\r\n            name=\"complement\"\r\n            placeholder=\"Digite um complemento. i.e: apartamento 10\"\r\n            defaultValue={complement}\r\n            onChange={handleChange(\"complement\")}\r\n            margin=\"normal\"\r\n            error={filedError.complement !== \"\"}\r\n            helperText={filedError.complement !== \"\" ? `${filedError.complement}` : \"\"}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Bairro\"\r\n            name=\"neighborhood\"\r\n            placeholder=\"Digite o bairro da residência.\"\r\n            defaultValue={neighborhood}\r\n            onChange={handleChange(\"neighborhood\")}\r\n            margin=\"normal\"\r\n            error={filedError.neighborhood !== \"\"}\r\n            helperText={filedError.neighborhood !== \"\" ? `${filedError.neighborhood}` : \"\"}\r\n            required\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            InputProps={{\r\n              className: classes.colorWhite\r\n            }}\r\n            InputLabelProps={{\r\n              className: classes.colorWhite\r\n            }}\r\n            fullWidth\r\n            label=\"Cidade\"\r\n            name=\"city\"\r\n            placeholder=\"Digite o nome da cidade.\"\r\n            defaultValue={city}\r\n            onChange={handleChange(\"city\")}\r\n            margin=\"normal\"\r\n            error={filedError.city !== \"\"}\r\n            helperText={filedError.city !== \"\" ? `${filedError.city}` : \"\"}\r\n            disabled\r\n            required\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            InputProps={{\r\n              className: classes.colorWhite\r\n            }}\r\n            InputLabelProps={{\r\n              className: classes.colorWhite\r\n            }}\r\n            fullWidth\r\n            label=\"Estado\"\r\n            name=\"state\"\r\n            placeholder=\"Digite o nome do estado.\"\r\n            defaultValue={state}\r\n            onChange={handleChange(\"state\")}\r\n            margin=\"normal\"\r\n            error={filedError.state !== \"\"}\r\n            helperText={filedError.state !== \"\" ? `${filedError.state}` : \"\"}\r\n            disabled\r\n            required\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <div\r\n        style={{ display: \"flex\", marginTop: 50, justifyContent: \"flex-end\" }}\r\n      >\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"default\"\r\n          onClick={handleBack}\r\n          style={{ marginRight: 20 }}\r\n        >\r\n          Voltar\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          disabled={!isEmpty || isError}\r\n          color=\"primary\"\r\n          onClick={submit}\r\n          className={classes.disableButton}\r\n        >\r\n          Finalizar\r\n        </Button>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Confirm\r\n","import React, { useState, Fragment } from \"react\"\r\nimport { Link as RouterLink, withRouter, Redirect, useHistory} from 'react-router-dom';\r\nimport Stepper from \"@material-ui/core/Stepper\"\r\nimport Step from \"@material-ui/core/Step\"\r\nimport StepLabel from \"@material-ui/core/StepLabel\"\r\nimport FirstStep from \"./FirstStep\"\r\nimport SecondStep from \"./SecondStep\"\r\nimport Confirm from \"./Confirm\"\r\nimport AuthService from \"../../services/auth.service\";\r\nimport SweetAlert from 'sweetalert2-react';\r\nimport CPF from \"cpf_cnpj\";\r\nimport {\r\n  Grid,\r\n  IconButton,\r\n  Typography\r\n} from '@material-ui/core'\r\n\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nconst emailRegex = RegExp(/^[^@]+@[^@]+\\.[^@]+$/)\r\nconst cpfRegex = RegExp(/[0-9]{3}\\.[0-9]{3}\\.[0-9]{3}-[0-9]{2}/)\r\nconst labels = [\"Passo 1\", \"Passo 2\", \"Passo 3\"]\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  completed: {\r\n    color: \"#1361ff!important\"\r\n  },\r\n  root: {\r\n    backgroundColor: theme.palette.background.default,\r\n    height: '100%'\r\n  },\r\n  grid: {\r\n    height: '100%'\r\n  },\r\n  quoteContainer: {\r\n    [theme.breakpoints.down('md')]: {\r\n      display: 'none'\r\n    }\r\n  },\r\n  quote: {\r\n    backgroundColor: theme.palette.neutral,\r\n    height: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundImage: 'url(/images/auth.jpg)',\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center'\r\n  },\r\n  quoteInner: {\r\n    textAlign: 'center',\r\n    flexBasis: '600px'\r\n  },\r\n  quoteText: {\r\n    color: theme.palette.white,\r\n    fontWeight: 300\r\n  },\r\n  name: {\r\n    marginTop: theme.spacing(3),\r\n    color: theme.palette.white\r\n  },\r\n  bio: {\r\n    color: theme.palette.white\r\n  },\r\n  contentContainer: {},\r\n  content: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  contentHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    paddingTop: theme.spacing(5),\r\n    paddingBototm: theme.spacing(2),\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(2)\r\n  },\r\n  logoImage: {\r\n    marginLeft: theme.spacing(4)\r\n  },\r\n  contentBody: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    [theme.breakpoints.down('md')]: {\r\n      justifyContent: 'center'\r\n    }\r\n  },\r\n  form: {\r\n    paddingLeft: 100,\r\n    paddingRight: 100,\r\n    paddingBottom: 125,\r\n    flexBasis: 700,\r\n    [theme.breakpoints.down('sm')]: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2)\r\n    }\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  textField: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  policy: {\r\n    marginTop: theme.spacing(1),\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  policyCheckbox: {\r\n    marginLeft: '-14px'\r\n  },\r\n  signUpButton: {\r\n    margin: theme.spacing(2, 0)\r\n  },\r\n  contentForm: {\r\n    padding: 50\r\n  },\r\n  colorWhite: {\r\n    color: 'white!important'\r\n  },\r\n  disableButton: {\r\n      \"&:disabled\": {\r\n        color: 'rgb(206, 191, 191)!important',\r\n        backgroundColor: 'rgb(107, 110, 128)!important'\r\n      }\r\n  },\r\n  stepDone: {\r\n    backgroundColor:'#1a237e',\r\n    color: 'white'\r\n  }\r\n}));\r\n\r\nconst SignUp = () => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const [steps, setSteps] = useState(0)\r\n  const [fields, setFields] = useState({\r\n    full_name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirm: \"\",\r\n    investment_type: \"\",\r\n    birthdate: \"\",\r\n    gender: \"\",\r\n    cpf: \"\",\r\n    cellphone: \"\",\r\n    zipcode: \"\",\r\n    street: \"\",\r\n    number: \"\",\r\n    complement: \"\",\r\n    neighborhood: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    investment: \"\",\r\n  })\r\n  // Copy fields as they all have the same name\r\n  const [filedError, setFieldError] = useState({\r\n    ...fields\r\n  })\r\n\r\n  const [isError, setIsError] = useState(false)\r\n  const [isZipcode, setIsZipcode] = useState(false)\r\n  const [statusFail, setStatusFail] = useState(false)\r\n  const [status, setStatus] = useState(false)\r\n  const [loading, setLoading] = useState(false)\r\n  const [message, setMessage] = useState('')\r\n  // Proceed to next step\r\n  const handleNext = () => setSteps(steps + 1)\r\n  // Go back to prev step\r\n  const handleBack = () => setSteps(steps - 1)\r\n\r\n  // Handle fields change\r\n  // const handleBlur = inpurt =? ({tartget:})\r\n  const handleChange = input => ({ target: { value } }) => {\r\n    // Set values to the fields\r\n    setFields({\r\n      ...fields,\r\n      [input]: value\r\n    })\r\n    // Handle errors\r\n    const formErrors = { ...filedError }\r\n    const lengthValidate = value.length >= 0 && value.length < 3\r\n    const numberValidate = /^[0-9]{0,255}$/;\r\n    const phoneValidate = /^([+][0-9]{2})?([ ]\\([0-9]{2})\\)[ ]([0-9]{3}|[0-9]{5})-[0-9]{4}$/;\r\n    let cep = '';\r\n    let cepformatValidate = true;\r\n\r\n    if(input == \"zipcode\") {\r\n      cep = value;\r\n      cep = cep.replace(/\\D/g, '')\r\n      let val_cep = value;\r\n      var validate = /[0-9]{5}[-][0-9]{3}/;\r\n      cepformatValidate = cep == '';\r\n          if (validate.test(val_cep)) {\r\n            fetch(\"https://viacep.com.br/ws/\"+cep+\"/json\")\r\n              .then(res => res.json())\r\n              .then(\r\n                (result) => {\r\n                  if(result.erro) {\r\n                    cepformatValidate = true;\r\n                    setFields({\r\n                      ...fields,\r\n                      street: '',\r\n                      neighborhood: '',\r\n                      city: '',\r\n                      state: ''\r\n                    })\r\n                    setIsZipcode(false)\r\n                  } else {\r\n                    setFields({\r\n                      ...fields,\r\n                      zipcode: value,\r\n                      street: result.logradouro,\r\n                      neighborhood: result.bairro,\r\n                      city: result.localidade,\r\n                      state: result.uf\r\n                    })\r\n                    cepformatValidate = false;\r\n                    setIsZipcode(true)\r\n                  }\r\n                },\r\n                (error) => {\r\n                  setIsZipcode(false)\r\n                  cepformatValidate = true;\r\n                }\r\n            )\r\n          }else {\r\n            setIsZipcode(false)\r\n            cepformatValidate = true;\r\n          }\r\n    }\r\n    switch (input) {\r\n      case \"full_name\":\r\n        formErrors.full_name = lengthValidate\r\n          ? \"Necessário mínimo de 3 caracteres.\"\r\n          : \"\"\r\n        break\r\n      case \"email\":\r\n        formErrors.email = emailRegex.test(value) ? \"\" : \"Endereço de email inválido.\"\r\n      break\r\n      case \"cpf\":\r\n        formErrors.cpf = !CPF.CPF.isValid(value) || !cpfRegex.test(value)\r\n          ? \"CPF inválido. i.e. 532.820.857-96\"\r\n          : \"\"\r\n      break\r\n      case \"cellphone\":\r\n        formErrors.cellphone = phoneValidate.test(value)\r\n          ? \"\"\r\n          : \"Por favor insira um número de telefone válido. i.e: +55 (99) 99999-9999\"\r\n      break\r\n      case \"password\":\r\n        formErrors.password = value.length >= 0 && value.length < 6\r\n          ? \"Necessário mínimo de 6 caracteres.\"\r\n          : \"\"\r\n      break\r\n      case \"confirm\":\r\n        formErrors.confirm = lengthValidate\r\n          ? \"Necessário mínimo de 6 caracteres.\"\r\n          : \"\"\r\n      break\r\n      case \"zipcode\":\r\n        formErrors.zipcode = value.length == 0 || cepformatValidate\r\n          ? \"Formato de CEP inválido.\"\r\n          : \"\"\r\n      break\r\n      case \"birthdate\":\r\n        formErrors.birthdate = lengthValidate\r\n          ? \"Necessário mínimo de 3 caracteres.\"\r\n          : \"\"\r\n      break\r\n      case \"gender\":\r\n        formErrors.gender = lengthValidate\r\n          ? \"Necessário mínimo de 3 caracteres.\"\r\n          : \"\"\r\n      break\r\n      case \"street\":\r\n        formErrors.street = lengthValidate\r\n          ? \"Necessário mínimo de 3 caracteres.\"\r\n          : \"\"\r\n      break\r\n      case \"number\":\r\n        formErrors.number = !numberValidate.test(value) || value.length < 2 || value.length > 5\r\n          ? \"Números mínimos 2 e 5 máximos necessários.\"\r\n          : \"\"\r\n      break\r\n      case \"complement\":\r\n        formErrors.complement = \"\"\r\n      break\r\n      case \"neighborhood\":\r\n        formErrors.neighborhood = lengthValidate\r\n          ? \"Necessário mínimo de 3 caracteres.\"\r\n          : \"\"\r\n      break\r\n      case \"city\":\r\n        formErrors.city = value.length == 0\r\n          ? \"Necessário mínimo de 1 caractere.\"\r\n          : \"\"\r\n      break\r\n      case \"state\":\r\n        formErrors.state = value.length == 0\r\n          ? \"Necessário mínimo de 1 caractere.\"\r\n          : \"\"\r\n      break\r\n      case \"investment\":\r\n        formErrors.investment = lengthValidate\r\n          ? \"Necessário mínimo de 2 caracteres.\"\r\n          : \"\"\r\n      break\r\n      case \"investment_type\":\r\n        formErrors.investment_type = lengthValidate\r\n          ? \"Necessário mínimo de 3 caracteres.\"\r\n          : \"\"\r\n      break\r\n      default:\r\n        break\r\n    }\r\n    // set error hook\r\n    let error_count = 0;\r\n    Object.values(formErrors).forEach((error,val,array) => {\r\n      if (error.length > 0) {\r\n        error_count = error_count + 1;\r\n        return;\r\n      }\r\n    })\r\n    if(error_count > 0){\r\n      setIsError(true)\r\n    } else {\r\n      setIsError(false)\r\n    }\r\n    // set errors hook\r\n    setFieldError({\r\n      ...formErrors\r\n    })\r\n  }\r\n\r\n  const gotoSignIn = () => {\r\n    history.push(\"/sign-in\");\r\n  }\r\n  const handleSteps = step => {\r\n    switch (step) {\r\n      case 0:\r\n        return (\r\n          <FirstStep\r\n            classes={classes}\r\n            handleNext={handleNext}\r\n            handleChange={handleChange}\r\n            values={fields}\r\n            isError={isError}\r\n            filedError={filedError}\r\n          />\r\n        )\r\n      case 1:\r\n        return (\r\n          <SecondStep\r\n            classes={classes}\r\n            handleNext={handleNext}\r\n            handleBack={handleBack}\r\n            handleChange={handleChange}\r\n            values={fields}\r\n            isError={isError}\r\n            isZipcode={isZipcode}\r\n            filedError={filedError}\r\n          />\r\n        )\r\n      case 2:\r\n        return (\r\n          <Confirm\r\n            classes={classes}\r\n            handleNext={handleNext}\r\n            handleBack={handleBack}\r\n            handleChange={handleChange}\r\n            submit={submit}\r\n            values={fields}\r\n            isError={isError}\r\n            filedError={filedError}\r\n          />\r\n        )\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  const submit = () => {\r\n    if(!isError) {\r\n      setLoading(true);\r\n      AuthService.register(\r\n        fields\r\n      ).then(\r\n        response => {\r\n          setLoading(false);\r\n          setStatusFail(false);\r\n          setStatus(true);\r\n          setMessage(response.data.message);\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n          setLoading(false);\r\n          setStatusFail(true);\r\n          setStatus(false);\r\n          setMessage(resMessage);\r\n\r\n        }\r\n      );\r\n    }\r\n  }\r\n  // Handle components\r\n  return (\r\n\r\n    <div className={classes.root}>\r\n      <Grid\r\n        className={classes.grid}\r\n        container\r\n      >\r\n        <Grid\r\n          className={classes.quoteContainer}\r\n          item\r\n          lg={5}\r\n        >\r\n          <div className={classes.quote}>\r\n            <div className={classes.quoteInner}>\r\n              <Typography\r\n                className={classes.quoteText}\r\n                variant=\"h1\"\r\n              >\r\n                \"O dinheiro, assim como as emoções, é algo que você precisa controlar para manter sua vida no caminho certo.\"\r\n              </Typography>\r\n              <div className={classes.person}>\r\n                <Typography\r\n                  className={classes.name}\r\n                  variant=\"body1\"\r\n                >\r\n                  Natasha Munson\r\n                </Typography>\r\n                <Typography\r\n                  className={classes.bio}\r\n                  variant=\"body2\"\r\n                >\r\n                  www.novosite.com.br\r\n                </Typography>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n        <Grid\r\n          className={classes.content}\r\n          item\r\n          lg={7}\r\n          xs={12}\r\n        >\r\n      <div className={classes.content}>\r\n        <div className={classes.contentHeader}>\r\n          <IconButton onClick={gotoSignIn}>\r\n            <ArrowBackIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n            <div className={classes.contentForm}>\r\n                <Fragment>\r\n                    {steps === labels.length ? (\r\n                      // <Success />\r\n                      <div></div>\r\n                    ) : (\r\n                      <Fragment>\r\n                        <Stepper\r\n                          activeStep={steps}\r\n                          style={{ paddingTop: 30, paddingBottom: 50 }}\r\n                          alternativeLabel\r\n                        >\r\n                          {labels.map(label => (\r\n                            <Step key={label}>\r\n                              <StepLabel StepIconProps={{\r\n                                  classes: { root: classes.completed }\r\n                                }}>\r\n                                  {label}\r\n                              </StepLabel>\r\n                            </Step>\r\n                          ))}\r\n                        </Stepper>\r\n                        {handleSteps(steps)}\r\n                      </Fragment>\r\n                    )}\r\n                </Fragment>\r\n            </div>\r\n           </Grid>\r\n      </Grid>\r\n        <SweetAlert\r\n        show={status}\r\n        title=\"Sucesso\"\r\n        text={message}\r\n        type='success'\r\n        onConfirm={() => {\r\n          setStatus(false)\r\n          history.push(\"/sign-in\");\r\n        }}\r\n\r\n        />\r\n        <SweetAlert\r\n        show={loading}\r\n        title=\"Enviando\"\r\n        text={\"Isso pode levar alguns segundos.\"}\r\n        html={'<div class=\"save_loading\"><svg viewBox=\"0 0 140 140\" width=\"140\" height=\"140\"><g class=\"outline\"><path d=\"m 70 28 a 1 1 0 0 0 0 84 a 1 1 0 0 0 0 -84\" stroke=\"rgba(0,0,0,0.1)\" stroke-width=\"4\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></g><g class=\"circle\"><path d=\"m 70 28 a 1 1 0 0 0 0 84 a 1 1 0 0 0 0 -84\" stroke=\"#71BBFF\" stroke-width=\"4\" fill=\"none\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-dashoffset=\"200\" stroke-dasharray=\"300\"></path></g></svg></div>'}\r\n        type='success'\r\n        showConfirmButton= {false}\r\n\t\t\t\tallowOutsideClick= {false}\r\n        />\r\n        <SweetAlert\r\n        show={statusFail}\r\n        title=\"Erro\"\r\n        text={message}\r\n        type='error'\r\n        onConfirm={() => {\r\n          setStatusFail(false)\r\n        }}\r\n        />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(SignUp);\r\n","import React, { Fragment } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography as MuiTypography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst variants = {\r\n  h1: 'Nisi euismod ante senectus consequat phasellus ut',\r\n  h2: 'Nisi euismod ante senectus consequat phasellus ut',\r\n  h3: 'Nisi euismod ante senectus consequat phasellus ut',\r\n  h4: 'Nisi euismod ante senectus consequat phasellus ut',\r\n  h5: 'Nisi euismod ante senectus consequat phasellus ut',\r\n  h6: 'Nisi euismod ante senectus consequat phasellus ut',\r\n  subtitle1: 'Leo varius justo aptent arcu urna felis pede nisl',\r\n  subtitle2: 'Leo varius justo aptent arcu urna felis pede nisl',\r\n  body1:\r\n    'Justo proin curabitur dictumst semper auctor, consequat tempor, nostra aenean neque turpis nunc. Leo. Sapien aliquet facilisi turpis, elit facilisi praesent porta metus leo. Dignissim amet dis nec ac integer inceptos erat dis Turpis sodales ad torquent. Dolor, erat convallis.Laoreet velit a fames commodo tristique hendrerit sociosqu rhoncus vel sapien penatibus facilisis faucibus ad. Mus purus vehicula imperdiet tempor lectus, feugiat Sapien erat viverra netus potenti mattis purus turpis. Interdum curabitur potenti tristique. Porta velit dignissim tristique ultrices primis.',\r\n  body2:\r\n    'Justo proin curabitur dictumst semper auctor, consequat tempor, nostra aenean neque turpis nunc. Leo. Sapien aliquet facilisi turpis, elit facilisi praesent porta metus leo. Dignissim amet dis nec ac integer inceptos erat dis Turpis sodales ad torquent. Dolor, erat convallis.',\r\n  caption: 'Accumsan leo pretium conubia ullamcorper.',\r\n  overline: 'Accumsan leo pretium conubia ullamcorper.',\r\n  button: 'Vivamus ultrices rutrum fames dictumst'\r\n};\r\n\r\nconst Typography = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        spacing={4}\r\n      >\r\n        {Object.keys(variants).map((key, i) => (\r\n          <Fragment key={i}>\r\n            <Grid\r\n              item\r\n              sm={3}\r\n              xs={12}\r\n            >\r\n              <MuiTypography variant=\"caption\">{key}</MuiTypography>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              sm={9}\r\n              xs={12}\r\n            >\r\n              <MuiTypography variant={key}>{variants[key]}</MuiTypography>\r\n            </Grid>\r\n          </Fragment>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Typography;\r\n","\r\nexport default function authHeader() {\r\n    const user = JSON.parse(localStorage.getItem('user'));\r\n  \r\n    if (user && user.accessToken) {\r\n      return { 'x-access-token': user.accessToken };\r\n    } else {\r\n      return {};\r\n    }\r\n  }\r\n","import axios from 'axios';\r\nimport authHeader from './auth-header';\r\nimport authMultipartHeader from './auth-multipart-header';\r\nimport download from 'js-file-download';\r\n\r\nconst URL = 'http://localhost:8080/api/user/';\r\n\r\n\r\nclass UserService {\r\n  // getPublicContent() {\r\n  //   return axios.get(AUTH_URL + 'all');\r\n  // }\r\n  // getUserBoard() {\r\n  //   return axios.get(AUTH_URL + 'user', { headers: authHeader() });\r\n  // }\r\n  // getAdminBoard() {\r\n  //   return axios.get(AUTH_URL + 'admin', { headers: authHeader() });\r\n  // }\r\n  getAllUsers() {\r\n    return axios.get(URL + 'all', {headers: authHeader()});\r\n  }\r\n  getDeactiveUsers() {\r\n    return axios.get(URL + 'deactiveall', {headers: authHeader()});\r\n  }\r\n  getActiveUsers() {\r\n    return axios.get(URL + 'activeall', {headers: authHeader()});\r\n  }\r\n  getOneUser(userId) {\r\n    return axios.post(URL + 'one', {id: userId}, {headers: authHeader()});\r\n  }\r\n\r\n  setActive(formData) {\r\n    return axios\r\n      .post(URL + \"setActive\", formData, {headers: authHeader()})\r\n      .then(response => {\r\n        return response.data;\r\n      });\r\n  }\r\n  delete(userId) {\r\n    return axios\r\n      .post(URL + \"delete\", {id: userId}, {headers: authHeader()})\r\n      .then(response => {\r\n        return response.data;\r\n      });\r\n  }\r\n  update(user) {\r\n    return axios\r\n      .post(URL + \"update\", user, {headers: authHeader()})\r\n      .then(response => {\r\n        return response.data;\r\n      });\r\n  }\r\n  updatePassword(user) {\r\n    return axios\r\n      .post(URL + \"updatePassword\", user, {headers: authHeader()})\r\n      .then(response => {\r\n        return response.data;\r\n      });\r\n  }\r\n  getBank(userId) {\r\n    return axios.post(URL + 'bank', {user_id: userId}, {headers: authHeader()});\r\n  }\r\n  bankUpdate(data) {\r\n    return axios\r\n      .post(URL + \"bankUpdate\", data, {headers: authHeader()})\r\n      .then(response => {\r\n        return response.data;\r\n      });\r\n  }\r\n  getBalance(userId) {\r\n    return axios\r\n      .post(URL + \"getBalance\", {user_id: userId}, {headers: authHeader()})\r\n      .then(response => {\r\n        return response.data;\r\n    });\r\n  }\r\n  getContractPDFAll() {\r\n    return axios.get(URL + 'contract_all', {headers: authHeader()});\r\n  }\r\n  getContractPDFByUser(user_id) {\r\n    return axios.post(URL + 'contract_by_user',{user_id: user_id}, {headers: authHeader()});\r\n  }\r\n  downloadContract(pdf_path) {\r\n    return axios.post(URL + \"download_contract\", {pdf_path: pdf_path}, {headers: authHeader(),responseType: 'blob'})\r\n     .then(resp => {\r\n            const content = resp.headers['content-type'];\r\n            download(resp.data, \"contract.pdf\", content);\r\n     });\r\n  }\r\n  uploadAdminContract(formData) {\r\n    return axios\r\n      .post(URL + \"uploadAdminContract\", formData, {headers: authHeader()})\r\n      .then(response => {\r\n        return response.data;\r\n      });\r\n  }\r\n  uploadUserContract(formData) {\r\n    return axios\r\n      .post(URL + \"uploadUserContract\", formData, {headers: authHeader()})\r\n      .then(response => {\r\n        return response.data;\r\n      });\r\n  }\r\n  downloadUserContract(invest_type) {\r\n    return axios.post(URL + \"download_user_contract\", {'invest_type': invest_type}, {headers: authHeader(),responseType: 'blob'})\r\n     .then(resp => {\r\n            const content = resp.headers['content-type'];\r\n            download(resp.data, \"contract.pdf\", content);\r\n     });\r\n  }\r\n  check_cpf_user(cpf) {\r\n    return axios\r\n      .post(URL + \"check_cpf_user\", {cpf: cpf}, {headers: authHeader()})\r\n      .then(response => {\r\n        return response.data;\r\n    });\r\n  }\r\n}\r\n\r\nexport default new UserService();\r\n","import React, { useState } from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport SimpleMaskMoney from 'simple-mask-money/lib/simple-mask-money'\r\nimport $ from 'jquery'\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  Button\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport userService from 'services/user.service';\r\n\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nconst MySwal = withReactContent(Swal)\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1050\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  },\r\n  blackText: {\r\n    color: '#212a37!important'\r\n  },\r\n  head: {\r\n    color: '#212a37'\r\n  },\r\n  th: {\r\n    color: '#212a37!important'\r\n  }\r\n\r\n}));\r\n\r\nconst UsersTable = props => {\r\n  const { className, users, history, ...rest } = props;\r\n  const classes = useStyles();\r\n\r\n  const [message, setMessage] = useState('');\r\n  const [hactive_status, setHactive_status] = useState(false);\r\n  const [selectedUsers, setSelectedUsers] = useState([]);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n\r\n  const handleSelectAll = event => {\r\n\r\n    const { users } = props;\r\n\r\n    let selectedUsers;\r\n\r\n    if (event.target.checked) {\r\n      selectedUsers = users.map(user => user.id);\r\n    } else {\r\n      selectedUsers = [];\r\n    }\r\n\r\n    setSelectedUsers(selectedUsers);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedUsers.indexOf(id);\r\n    let newSelectedUsers = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedUsers = newSelectedUsers.concat(selectedUsers, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedUsers = newSelectedUsers.concat(selectedUsers.slice(1));\r\n    } else if (selectedIndex === selectedUsers.length - 1) {\r\n      newSelectedUsers = newSelectedUsers.concat(selectedUsers.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedUsers = newSelectedUsers.concat(\r\n        selectedUsers.slice(0, selectedIndex),\r\n        selectedUsers.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedUsers(newSelectedUsers);\r\n  };\r\n\r\n  const handlePageChange = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n\r\n  const handleActive = (userId, active, investment, investment_type) => {\r\n    if(active == \"NO\") {\r\n      MySwal.fire({\r\n        icon: 'warning',\r\n        confirmButtonText: 'Confirmar',\r\n        cancelButtonText: 'Cancelar',\r\n        showCancelButton: true,\r\n      })\r\n      .then((result) => {\r\n        if (result.value) {\r\n          userService.setActive(userId, active, investment, investment_type).then(\r\n            response => {\r\n              MySwal.fire({\r\n                title: 'Success',\r\n                text: response.message\r\n              })\r\n              window.location.reload();\r\n            },\r\n            error => {\r\n              console.log(error)\r\n            }\r\n          );\r\n        } else if (result.dismiss === MySwal.DismissReason.cancel) {\r\n\r\n        }\r\n      });\r\n    }else {\r\n      const { value: select_investment } =  MySwal.fire({\r\n        title: 'Aprovar a conta do cliente',\r\n        text: 'Entre com o aporte',\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Confirmar',\r\n        cancelButtonText: 'Cancelar',\r\n        allowOutsideClick: false,\r\n        html: '<input type=\"text\" id=\"swal_plan_value\" value=\"\" class=\"swal2-input\" style=\"max-width: 100%;\" placeHolder=\"1,000\">' +\r\n              '<input type=\"file\" id=\"swal_admin_cpf\" name=\"admin_pdf\" class=\"swal2-input\" style=\"max-width: 100%;\" placeHolder=\"\">',\r\n        preConfirm: (value) => {\r\n          if( SimpleMaskMoney.formatToNumber(document.getElementById(\"swal_plan_value\").value) < 5000) {\r\n            MySwal.showValidationMessage('You should put more than 5.000')\r\n          }else if(document.getElementById(\"swal_admin_cpf\").files.length == 0) {\r\n            MySwal.showValidationMessage('You should upload contract pdf')\r\n          }\r\n        },\r\n        onOpen: () => {\r\n          $(\"#swal_admin_cpf\").change(function (e) {\r\n              console.log(e);\r\n              var reader = new FileReader();\r\n              reader.readAsDataURL(this.files[0]);\r\n          });\r\n          let input_swal = document.getElementById(\"swal_plan_value\");\r\n          SimpleMaskMoney.setMask(input_swal, {\r\n            allowNegative: false,\r\n            negativeSignAfter: false,\r\n            prefix: '',\r\n            suffix: '',\r\n            fixed: true,\r\n            fractionDigits: 2,\r\n            decimalSeparator: ',',\r\n            thousandsSeparator: '.',\r\n            cursor: 'move'\r\n          });\r\n        }\r\n      }).then(function (result) {\r\n        if (result.dismiss === MySwal.DismissReason.cancel) {\r\n          return\r\n        }else if(result.value){\r\n          var formData = new FormData();\r\n          var file = $('#swal_admin_cpf')[0].files[0];\r\n          console.log(file)\r\n          formData.append(\"userId\", userId);\r\n          formData.append(\"admin_pdf\", file);\r\n          formData.append(\"investment_type\", investment_type);\r\n          formData.append(\"investment\", SimpleMaskMoney.formatToNumber(document.getElementById(\"swal_plan_value\").value));\r\n          formData.append(\"active\", active);\r\n\r\n          userService.setActive(formData).then(\r\n            response => {\r\n              if(response.status == 'success') {\r\n                MySwal.fire({\r\n                  title: 'Success',\r\n                  text: response.message\r\n                })\r\n                window.location.reload();\r\n              }else if(response.status == 'fail') {\r\n                MySwal.fire({\r\n                  title: 'Fail',\r\n                  icon: 'warning',\r\n                  text: response.message\r\n                })\r\n              }\r\n            },\r\n            error => {\r\n              console.log(error)\r\n            }\r\n          );\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleEdit = (userId) => {\r\n    MySwal.fire({\r\n      title: \"Ir para edição de dados deste usuário\",\r\n      text: \"\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Confirmar',\r\n      cancelButtonText: 'Cancelar'\r\n    })\r\n    .then((result) => {\r\n      if (result.value) {\r\n        history.push(\"/useredit/\" + userId);\r\n      } else if (result.dismiss === MySwal.DismissReason.cancel) {\r\n\r\n      }\r\n    });\r\n\r\n  }\r\n  const handleDelete = (userId) => {\r\n    MySwal.fire({\r\n      title: \"Confirma a exclusão permanentemente?\",\r\n      text: \"\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Confirmar',\r\n      cancelButtonText: 'Cancelar'\r\n    })\r\n    .then((result) => {\r\n      if (result.value) {\r\n        userService.delete(userId).then(\r\n          response => {\r\n            MySwal.fire({\r\n              title: 'Success',\r\n              text: response.message\r\n            })\r\n            window.location.reload();\r\n          },\r\n          error => {\r\n            console.log(error)\r\n          }\r\n        );\r\n      } else if (result.dismiss === MySwal.DismissReason.cancel) {\r\n\r\n      }\r\n    });\r\n  }\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n          <div className={classes.inner}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      checked={selectedUsers.length === users.length}\r\n                      color=\"primary\"\r\n                      indeterminate={\r\n                        selectedUsers.length > 0 &&\r\n                        selectedUsers.length < users.length\r\n                      }\r\n                      onChange={handleSelectAll}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell style={{color: '#212a37'}} className=\"blackText\">Nome Completo</TableCell>\r\n                  <TableCell className=\"blackText\" style={{color: '#212a37'}}>CPF</TableCell>\r\n                  <TableCell className=\"blackText\" style={{color: '#212a37'}}>Celular</TableCell>\r\n                  <TableCell className=\"blackText\" style={{color: '#212a37'}}>Plano</TableCell>\r\n                  <TableCell className=\"blackText\" style={{color: '#212a37'}}>Aporte</TableCell>\r\n                  <TableCell className=\"blackText\" style={{color: '#212a37'}}>Ações</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {users.slice(0, rowsPerPage).map(user => (\r\n                  <TableRow\r\n                    className={classes.tableRow}\r\n                    hover\r\n                    key={user.id}\r\n                    selected={selectedUsers.indexOf(user.id) !== -1}\r\n                  >\r\n                    <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        checked={selectedUsers.indexOf(user.id) !== -1}\r\n                        color=\"primary\"\r\n                        onChange={event => handleSelectOne(event, user.id)}\r\n                        value=\"true\"\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <div className={classes.nameContainer}>\r\n                        <Typography variant=\"body1\">{user.full_name}</Typography>\r\n                      </div>\r\n                    </TableCell>\r\n                    <TableCell>{user.cpf}</TableCell>\r\n                    <TableCell>{user.cellphone}</TableCell>\r\n                    <TableCell>\r\n                      {user.investment_type}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {user.investment}\r\n                    </TableCell>\r\n                    {/* <TableCell>\r\n                      {moment(user.createdAt).format('DD/MM/YYYY')}\r\n                    </TableCell> */}\r\n                    <TableCell>\r\n                      <Button variant=\"contained\" color=\"secondary\" onClick={handleEdit.bind(this, user.id)}>\r\n                        Editar\r\n                      </Button>\r\n                      <Button variant=\"contained\" color=\"secondary\" onClick={handleDelete.bind(this, user.id)}>\r\n                         Deletar\r\n                      </Button>\r\n                      <Button variant=\"contained\" color=\"secondary\" onClick={handleActive.bind(this, user.id, 'YES',user.investment, user.investment_type)}>\r\n                         Aprovar\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n      <CardActions className={classes.actions}>\r\n        <TablePagination\r\n          component=\"div\"\r\n          count={users.length}\r\n          onChangePage={handlePageChange}\r\n          onChangeRowsPerPage={handleRowsPerPageChange}\r\n          page={page}\r\n          rowsPerPage={rowsPerPage}\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n        />\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nUsersTable.propTypes = {\r\n  className: PropTypes.string,\r\n  users: PropTypes.array.isRequired,\r\n  history: PropTypes.object\r\n};\r\n\r\nexport default UsersTable;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { SearchInput } from 'components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  row: {\r\n    height: '42px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  spacer: {\r\n    flexGrow: 1\r\n  },\r\n  importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  exportButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  searchInput: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst UsersToolbar = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <div className={classes.row}>\r\n        <span className={classes.spacer} />\r\n        <Button className={classes.importButton}>Importar</Button>\r\n        <Button className={classes.exportButton}>Exportar</Button>\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n        >\r\n          Add usuário\r\n        </Button>\r\n      </div>\r\n      <div className={classes.row}>\r\n        <SearchInput\r\n          className={classes.searchInput}\r\n          placeholder=\"Buscar..\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nUsersToolbar.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default UsersToolbar;\r\n","import React, {useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nimport { UsersToolbar, UsersTable } from './components';\r\nimport UserService from \"../../services/user.service\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3)\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst UserList = (props) => {\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const [users, setUsers] = useState([]);\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n        try {\r\n          const response = await UserService.getDeactiveUsers();\r\n          // const response = await UserService.getAllUsers();\r\n\r\n            setUsers(response.data);\r\n        } catch (e) {\r\n            setUsers([]);\r\n        }\r\n    };\r\n    fetchUsers();\r\n  }, []);\r\n  return (\r\n    <div className={classes.root}>\r\n      <UsersToolbar />\r\n      <div className={classes.content}>\r\n        <UsersTable\r\n        history={history}\r\n        users={users} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n","import React, { useState } from 'react';\r\nimport { Redirect } from \"react-router-dom\";\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\n\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  TablePagination,\r\n  Button\r\n} from '@material-ui/core';\r\n\r\nimport { getInitials } from 'helpers';\r\nimport userService from 'services/user.service';\r\n\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nconst MySwal = withReactContent(Swal)\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1050\r\n  },\r\n  nameContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    justifyContent: 'flex-end'\r\n  },\r\n  blackText: {\r\n    color: '#212a37!important'\r\n  },\r\n  head: {\r\n    color: '#212a37'\r\n  },\r\n  th: {\r\n    color: '#212a37!important'\r\n  }\r\n\r\n}));\r\n\r\nconst UsersTable = props => {\r\n  const { className, users, history, ...rest } = props;\r\n  const classes = useStyles();\r\n\r\n  const [message, setMessage] = useState('');\r\n  const [hactive_status, setHactive_status] = useState(false);\r\n  const [selectedUsers, setSelectedUsers] = useState([]);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n\r\n  const handleSelectAll = event => {\r\n\r\n    const { users } = props;\r\n\r\n    let selectedUsers;\r\n\r\n    if (event.target.checked) {\r\n      selectedUsers = users.map(user => user.id);\r\n    } else {\r\n      selectedUsers = [];\r\n    }\r\n\r\n    setSelectedUsers(selectedUsers);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedUsers.indexOf(id);\r\n    let newSelectedUsers = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedUsers = newSelectedUsers.concat(selectedUsers, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedUsers = newSelectedUsers.concat(selectedUsers.slice(1));\r\n    } else if (selectedIndex === selectedUsers.length - 1) {\r\n      newSelectedUsers = newSelectedUsers.concat(selectedUsers.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedUsers = newSelectedUsers.concat(\r\n        selectedUsers.slice(0, selectedIndex),\r\n        selectedUsers.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedUsers(newSelectedUsers);\r\n  };\r\n\r\n  const handlePageChange = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleRowsPerPageChange = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n\r\n  const handleActive = (userId, active, investment) => {\r\n    if(active == \"NO\") {\r\n      MySwal.fire({\r\n        title: \"Desaprovar este usuário?\",\r\n        text: \"\",\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonText: 'Confirmar',\r\n        cancelButtonText: 'Cancelar'\r\n      })\r\n      .then((result) => {\r\n        if (result.value) {\r\n          userService.setActive(userId, active, investment).then(\r\n            response => {\r\n              MySwal.fire({\r\n                title: 'Success',\r\n                text: response.message\r\n              })\r\n              window.location.reload();\r\n            },\r\n            error => {\r\n              console.log(error)\r\n            }\r\n          );\r\n        } else if (result.dismiss === MySwal.DismissReason.cancel) {\r\n\r\n        }\r\n      });\r\n    }else {\r\n      const { value: select_investment } =  MySwal.fire({\r\n        title: 'Aprovar este usuário para lista de clientes?',\r\n        text: 'Entre com o aporte',\r\n        input: 'select',\r\n        inputOptions: {\r\n          \"5.000-15.000\": \"5.000-15.000\",\r\n          \"20.000-50.000\": \"20.000-50.000\",\r\n          \"55.000-80.000\": \"55.000-80.000\",\r\n          \"100.000+\": \"100.000+\"\r\n        },\r\n        inputValue: investment,\r\n        showCancelButton: true,\r\n        inputValidator: (value) => {\r\n          return new Promise((resolve) => {\r\n            if (value != null) {\r\n              resolve()\r\n            }\r\n          })\r\n        }\r\n      }).then(function (result) {\r\n        userService.setActive(userId, active, result.value).then(\r\n          response => {\r\n            MySwal.fire({\r\n              title: 'Success',\r\n              text: response.message\r\n            })\r\n            window.location.reload();\r\n          },\r\n          error => {\r\n            console.log(error)\r\n          }\r\n        );\r\n      })\r\n    }\r\n  }\r\n  const handleDelete = (userId) => {\r\n    MySwal.fire({\r\n      title: \"Confirma a exclusão permanentemente?\",\r\n      text: \"\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Confirmar',\r\n      cancelButtonText: 'Cancelar'\r\n    })\r\n    .then((result) => {\r\n      if (result.value) {\r\n        userService.delete(userId).then(\r\n          response => {\r\n            MySwal.fire({\r\n              title: 'Success',\r\n              text: response.message\r\n            })\r\n            window.location.reload();\r\n          },\r\n          error => {\r\n            console.log(error)\r\n          }\r\n        );\r\n      } else if (result.dismiss === MySwal.DismissReason.cancel) {\r\n\r\n      }\r\n    });\r\n  }\r\n  const handleEdit = (userId) => {\r\n    MySwal.fire({\r\n      title: \"Ir para edição de dados deste usuário\",\r\n      text: \"\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Confirmar',\r\n      cancelButtonText: 'Cancelar'\r\n    })\r\n    .then((result) => {\r\n      if (result.value) {\r\n        history.push(\"/useredit/\" + userId);\r\n      } else if (result.dismiss === MySwal.DismissReason.cancel) {\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n          <div className={classes.inner}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      checked={selectedUsers.length === users.length}\r\n                      color=\"primary\"\r\n                      indeterminate={\r\n                        selectedUsers.length > 0 &&\r\n                        selectedUsers.length < users.length\r\n                      }\r\n                      onChange={handleSelectAll}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell style={{color: '#212a37'}} className=\"blackText\">Nome Completo</TableCell>\r\n                  <TableCell className=\"blackText\" style={{color: '#212a37'}}>CPF</TableCell>\r\n                  <TableCell className=\"blackText\" style={{color: '#212a37'}}>Celular</TableCell>\r\n                  <TableCell className=\"blackText\" style={{color: '#212a37'}}>Plano</TableCell>\r\n                  <TableCell className=\"blackText\" style={{color: '#212a37'}}>Aporte</TableCell>\r\n                  <TableCell className=\"blackText\" style={{color: '#212a37'}}>Ações</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {users.slice(0, rowsPerPage).map(user => (\r\n                  <TableRow\r\n                    className={classes.tableRow}\r\n                    hover\r\n                    key={user.id}\r\n                    selected={selectedUsers.indexOf(user.id) !== -1}\r\n                  >\r\n                    <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        checked={selectedUsers.indexOf(user.id) !== -1}\r\n                        color=\"primary\"\r\n                        onChange={event => handleSelectOne(event, user.id)}\r\n                        value=\"true\"\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <div className={classes.nameContainer}>\r\n                        <Typography variant=\"body1\">{user.full_name}</Typography>\r\n                      </div>\r\n                    </TableCell>\r\n                    <TableCell>{user.cpf}</TableCell>\r\n                    <TableCell>{user.cellphone}</TableCell>\r\n                    <TableCell>\r\n                      {user.investment_type}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {user.investment}\r\n                    </TableCell>\r\n                    {/* <TableCell>\r\n                      {moment(user.createdAt).format('DD/MM/YYYY')}\r\n                    </TableCell> */}\r\n                    <TableCell>\r\n                      <Button variant=\"contained\" color=\"secondary\" onClick={handleEdit.bind(this, user.id)}>\r\n                          Editar\r\n                      </Button>\r\n                      <Button variant=\"contained\" color=\"secondary\" onClick={handleDelete.bind(this, user.id)}>\r\n                          Deletar\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n      <CardActions className={classes.actions}>\r\n        <TablePagination\r\n          component=\"div\"\r\n          count={users.length}\r\n          onChangePage={handlePageChange}\r\n          onChangeRowsPerPage={handleRowsPerPageChange}\r\n          page={page}\r\n          rowsPerPage={rowsPerPage}\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n        />\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nUsersTable.propTypes = {\r\n  className: PropTypes.string,\r\n  users: PropTypes.array.isRequired,\r\n  history: PropTypes.object\r\n};\r\n\r\nexport default UsersTable;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport { SearchInput } from 'components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  row: {\r\n    height: '42px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  spacer: {\r\n    flexGrow: 1\r\n  },\r\n  importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  exportButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  searchInput: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst UsersToolbar = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <div className={classes.row}>\r\n        <span className={classes.spacer} />\r\n        <Button className={classes.importButton}>Importar</Button>\r\n        <Button className={classes.exportButton}>Exportar</Button>\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n        >\r\n          Add usuário\r\n        </Button>\r\n      </div>\r\n      <div className={classes.row}>\r\n        <SearchInput\r\n          className={classes.searchInput}\r\n          placeholder=\"Buscar..\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nUsersToolbar.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default UsersToolbar;\r\n","import React, {useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nimport { UsersToolbar, UsersTable } from './components';\r\nimport UserService from \"../../services/user.service\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3)\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst ActiveUserList = (props) => {\r\n  const { history } = props;\r\n  const classes = useStyles();\r\n  const [users, setUsers] = useState([]);\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n        try {\r\n            const response = await UserService.getActiveUsers();\r\n            setUsers(response.data);\r\n        } catch (e) {\r\n            setUsers([]);\r\n        }\r\n    };\r\n    fetchUsers();\r\n  }, []);\r\n  return (\r\n    <div className={classes.root}>\r\n      <UsersToolbar />\r\n      <div className={classes.content}>\r\n        <UsersTable \r\n        history={history}\r\n        users={users} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActiveUserList;\r\n","import React, { useState,useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  IconButton\r\n} from '@material-ui/core';\r\nimport FormControl from \"@material-ui/core/FormControl\"\r\nimport Select from \"@material-ui/core/Select\"\r\nimport InputLabel from \"@material-ui/core/InputLabel\"\r\nimport MenuItem from \"@material-ui/core/MenuItem\"\r\nimport InputMask from \"react-input-mask\"\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nimport CPF from \"cpf_cnpj\";\r\nconst emailRegex = RegExp(/^[^@]+@[^@]+\\.[^@]+$/)\r\nconst cpfRegex = RegExp(/[0-9]{3}\\.[0-9]{3}\\.[0-9]{3}-[0-9]{2}/)\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {},\r\n    colorWhite: {\r\n      color: 'white!important'\r\n    },\r\n    disableButton: {\r\n        \"&:disabled\": {\r\n          color: 'rgb(206, 191, 191)!important',\r\n          backgroundColor: 'rgb(107, 110, 128)!important'\r\n        }\r\n    },\r\n}));\r\n\r\nconst UserDetails = props => {\r\n  const { className, UserService, userId, MySwal,useHistory, ...rest } = props;\r\n  const [user, setUser] = useState({\r\n    full_name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    investment_type: \"\",\r\n    birthdate: \"\",\r\n    gender: \"\",\r\n    cpf: \"\",\r\n    cellphone: \"\",\r\n    zipcode: \"\",\r\n    street: \"\",\r\n    number: \"\",\r\n    complement: \"\",\r\n    neighborhood: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    investment: \"\",\r\n  });\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n          const response = await UserService.getOneUser(userId);\r\n          if(response.data.password)\r\n            delete response.data.password\r\n          setUser(response.data);\r\n      } catch (e) {\r\n        setUser({});\r\n      }\r\n    };\r\n    fetchUser();\r\n  }, []);\r\n  const user_investment_type = user.investment_type;\r\n  const classes = useStyles();\r\n  const [fields, setFields] = useState({\r\n    full_name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    investment_type: \"\",\r\n    birthdate: \"\",\r\n    gender: \"\",\r\n    cpf: \"\",\r\n    cellphone: \"\",\r\n    zipcode: \"\",\r\n    street: \"\",\r\n    number: \"\",\r\n    complement: \"\",\r\n    neighborhood: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    investment: \"\",\r\n  })\r\n  // Copy fields as they all have the same name\r\n  const [filedError, setFieldError] = useState({\r\n    ...fields\r\n  })\r\n  const [isError, setIsError] = useState(true)\r\n  const [isZipcode, setIsZipcode] = useState(true)\r\n\r\n  const handleChange = input => ({ target: { value } }) => {\r\n    // Set user to the fields\r\n    setUser({\r\n      ...user,\r\n      [input]: value\r\n    })\r\n    // Handle errors\r\n    const formErrors = { ...filedError }\r\n    const lengthValidate = value.length >= 0 && value.length < 3\r\n    const numberValidate = /^[0-9]{0,255}$/;\r\n    const phoneValidate = /^([+][0-9]{2})?([ ]\\([0-9]{2})\\)[ ]([0-9]{3}|[0-9]{5})-[0-9]{4}$/;\r\n    let cep = '';\r\n    let cepformatValidate = true;\r\n\r\n    if(input == \"zipcode\") {\r\n      cep = value;\r\n      cep = cep.replace(/\\D/g, '')\r\n      let val_cep = value;\r\n      var validate = /[0-9]{5}[-][0-9]{3}/;\r\n      cepformatValidate = cep == '';\r\n          if (validate.test(val_cep)) {\r\n            fetch(\"https://viacep.com.br/ws/\"+cep+\"/json\")\r\n              .then(res => res.json())\r\n              .then(\r\n                (result) => {\r\n                  if(result.erro) {\r\n                    cepformatValidate = true;\r\n                    setUser({\r\n                      ...user,\r\n                      street: '',\r\n                      neighborhood: '',\r\n                      city: '',\r\n                      state: ''\r\n                    })\r\n                    setIsZipcode(false)\r\n                  } else {\r\n                    setUser({\r\n                      ...user,\r\n                      zipcode: value,\r\n                      street: result.logradouro,\r\n                      neighborhood: result.bairro,\r\n                      city: result.localidade,\r\n                      state: result.uf\r\n                    })\r\n                    cepformatValidate = false;\r\n                    setIsZipcode(true)\r\n                  }\r\n                },\r\n                (error) => {\r\n                  setIsZipcode(false)\r\n                  cepformatValidate = true;\r\n                }\r\n            )\r\n          }else {\r\n            setIsZipcode(false)\r\n            cepformatValidate = true;\r\n          }\r\n    }\r\n\r\n    switch (input) {\r\n      case \"full_name\":\r\n        formErrors.full_name = lengthValidate\r\n          ? \"Necessário mínimo de 3 caracteres.\"\r\n          : \"\"\r\n        break\r\n      case \"email\":\r\n        formErrors.email = emailRegex.test(value) ? \"\" : \"Endereço de email inválido.\"\r\n      break\r\n      case \"cpf\":\r\n        formErrors.cpf = !CPF.CPF.isValid(value) || !cpfRegex.test(value)\r\n          ? \"CPF inválido. i.e. 532.820.857-96\"\r\n          : \"\"\r\n      break\r\n      case \"cellphone\":\r\n        formErrors.cellphone = phoneValidate.test(value)\r\n          ? \"\"\r\n          : \"Por favor insira um número de telefone válido. i.e: +55 (99) 99999-9999\"\r\n      break\r\n      case \"password\":\r\n        formErrors.password = value.length >= 0 && value.length < 6\r\n          ? \"Necessário mínimo de 6 caracteres.\"\r\n          : \"\"\r\n      break\r\n      case \"confirm\":\r\n        formErrors.confirm = lengthValidate\r\n          ? \"Necessário mínimo de 6 caracteres.\"\r\n          : \"\"\r\n      break\r\n      case \"zipcode\":\r\n        formErrors.zipcode = value.length == 0 || cepformatValidate\r\n          ? \"Formato de CEP inválido.\"\r\n          : \"\"\r\n      break\r\n      case \"birthdate\":\r\n        formErrors.birthdate = lengthValidate\r\n          ? \"Necessário mínimo de 3 caracteres.\"\r\n          : \"\"\r\n      break\r\n      case \"gender\":\r\n        formErrors.gender = lengthValidate\r\n          ? \"Necessário mínimo de 3 caracteres.\"\r\n          : \"\"\r\n      break\r\n      case \"street\":\r\n        formErrors.street = lengthValidate\r\n          ? \"Necessário mínimo de 3 caracteres.\"\r\n          : \"\"\r\n      break\r\n      case \"number\":\r\n        formErrors.number = !numberValidate.test(value) || value.length < 2 || value.length > 5\r\n          ? \"Números mínimos 2 e 5 máximos necessários.\"\r\n          : \"\"\r\n      break\r\n      case \"complement\":\r\n        formErrors.complement = \"\"\r\n      break\r\n      case \"neighborhood\":\r\n        formErrors.neighborhood = lengthValidate\r\n          ? \"Necessário mínimo de 3 caracteres.\"\r\n          : \"\"\r\n      break\r\n      case \"city\":\r\n        formErrors.city = value.length == 0\r\n          ? \"Necessário mínimo de 1 caractere.\"\r\n          : \"\"\r\n      break\r\n      case \"state\":\r\n        formErrors.state = value.length == 0\r\n          ? \"Necessário mínimo de 1 caractere.\"\r\n          : \"\"\r\n      break\r\n      case \"investment\":\r\n        formErrors.investment = lengthValidate\r\n          ? \"Necessário mínimo de 2 caracteres.\"\r\n          : \"\"\r\n      break\r\n      case \"investment_type\":\r\n        formErrors.investment_type = lengthValidate\r\n          ? \"Necessário mínimo de 3 caracteres.\"\r\n          : \"\"\r\n      break\r\n      default:\r\n        break\r\n    }\r\n    // set error hook\r\n    let error_count = 0;\r\n    Object.values(formErrors).forEach((error,val,array) => {\r\n      if (error.length > 0) {\r\n        error_count = error_count + 1;\r\n        return;\r\n      }\r\n    })\r\n    if(error_count > 0){\r\n      setIsError(true)\r\n    } else {\r\n      setIsError(false)\r\n    }\r\n    // set errors hook\r\n    setFieldError({\r\n      ...formErrors\r\n    })\r\n  }\r\n  const history = useHistory();\r\n  const gotoBack = () => {\r\n    history.goBack();\r\n  }\r\n  const submit = () => {\r\n    if(!isError) {\r\n      UserService.update(\r\n        user\r\n      ).then(\r\n        response => {\r\n          MySwal.fire({\r\n            title: 'Success',\r\n            text: response.message\r\n          })\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n            MySwal.fire({\r\n              title: 'Fail',\r\n              text: resMessage,\r\n              dangerMode: true\r\n            })\r\n        }\r\n      );\r\n    }\r\n  }\r\n  return (\r\n\r\n\r\n\r\n\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <IconButton onClick={gotoBack}>\r\n        <ArrowBackIcon />\r\n      </IconButton>\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"Atualizar dados da conta\"\r\n          title=\"Minha Conta\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid container spacing={2} noValidate>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                fullWidth\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                label=\"Nome Completo\"\r\n                name=\"full_name\"\r\n                placeholder=\"Nome Completo\"\r\n                value={user.full_name}\r\n                onChange={handleChange(\"full_name\")}\r\n                margin=\"normal\"\r\n                error={filedError.full_name !== \"\"}\r\n                helperText={\r\n                  filedError.full_name !== \"\" ? `${filedError.full_name}` : \"\"\r\n                }\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <InputMask\r\n                mask=\"999.999.999-99\"\r\n                maskChar=\" \"\r\n                value={user.cpf}\r\n                onChange={handleChange(\"cpf\")}\r\n              >\r\n                {() => <TextField\r\n                        fullWidth\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                        label=\"CPF\"\r\n                        name=\"cpf\"\r\n                        placeholder=\"formato: 123.432.156-12\"\r\n                        margin=\"normal\"\r\n                        error={filedError.cpf !== \"\"}\r\n                        helperText={\r\n                          filedError.cpf !== \"\" ? `${filedError.cpf}` : \"\"\r\n                        }\r\n                        required\r\n                      />\r\n                }\r\n                </InputMask>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                fullWidth\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                label=\"E-mail\"\r\n                name=\"email\"\r\n                placeholder=\"meu@email.com.br\"\r\n                type=\"email\"\r\n                value={user.email}\r\n                onChange={handleChange(\"email\")}\r\n                margin=\"normal\"\r\n                error={filedError.email !== \"\"}\r\n                helperText={filedError.email !== \"\" ? `${filedError.email}` : \"\"}\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <InputMask\r\n                  mask=\"+55 (99) 99999-9999\"\r\n                  maskChar=\" \"\r\n                  value={user.cellphone}\r\n                  onChange={handleChange(\"cellphone\")}\r\n                >\r\n                  {() => <TextField\r\n                          InputLabelProps={{\r\n                            shrink: true,\r\n                          }}\r\n                          fullWidth\r\n                          label=\"Celular\"\r\n                          name=\"cellphone\"\r\n                          placeholder=\"i.e: +55 (99) 99999-9999\"\r\n                          margin=\"normal\"\r\n                          error={filedError.cellphone !== \"\"}\r\n                          helperText={filedError.cellphone !== \"\" ? `${filedError.cellphone}` : \"\"}\r\n                  />}\r\n              </InputMask>\r\n            </Grid>\r\n\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                fullWidth\r\n                label=\"Senha\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"Senha\"\r\n                value={user.password}\r\n                onChange={handleChange(\"password\")}\r\n                margin=\"normal\"\r\n                error={filedError.password !== \"\"}\r\n                helperText={\r\n                  filedError.password !== \"\" ? `${filedError.password}` : \"\"\r\n                }\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <InputMask\r\n                mask=\"99999-999\"\r\n                maskChar=\" \"\r\n                value={user.zipcode}\r\n                onChange={handleChange(\"zipcode\")}\r\n              >\r\n                {() => <TextField\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                        fullWidth\r\n                        label=\"CEP\"\r\n                        name=\"zipcode\"\r\n                        placeholder=\"Enter your zipcode\"\r\n                        margin=\"normal\"\r\n                        error={!isZipcode}\r\n                        helperText={isZipcode ? \"\" : \"Formato de CEP inválido.\"}\r\n                        required\r\n                      />\r\n                }\r\n                </InputMask>\r\n\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                fullWidth\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                label=\"Nascimento\"\r\n                name=\"birthdate\"\r\n                type=\"date\"\r\n                value={user.birthdate}\r\n                onChange={handleChange(\"birthdate\")}\r\n                margin=\"normal\"\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4} sm={4}>\r\n              <FormControl fullWidth required margin=\"normal\">\r\n                <InputLabel htmlFor=\"gender\">Gênero</InputLabel>\r\n                <Select value={user.gender} onChange={handleChange(\"gender\")}>\r\n                  <MenuItem value={\"MASCULINO\"}>MASCULINO</MenuItem>\r\n                  <MenuItem value={\"FEMININO\"}>FEMININO</MenuItem>\r\n                  <MenuItem value={\"TRANSGÊNERO\"}>TRANSGÊNERO</MenuItem>\r\n                  <MenuItem value={\"OUTRO\"}>OUTRO</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={4} sm={4}>\r\n              <FormControl fullWidth required margin=\"normal\">\r\n                <InputLabel htmlFor=\"user_investment_type\">Plano</InputLabel>\r\n                <Select value={user.investment_type} onChange={handleChange(\"investment_type\")}>\r\n                  <MenuItem value={\"FLEXIVEL\"}>FLEXÍVEL</MenuItem>\r\n                  <MenuItem value={\"CRESCIMENTO\"}>CRESCIMENTO</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={4} sm={4}>\r\n              <FormControl fullWidth required margin=\"normal\">\r\n                <InputLabel htmlFor=\"investment\">Aporte</InputLabel>\r\n                <Select value={user.investment} onChange={handleChange(\"investment\")}>\r\n                  <MenuItem value={\"5.000-15.000\"}>5.000-15.000</MenuItem>\r\n                  <MenuItem value={\"20.000-50.000\"}>20.000-50.000</MenuItem>\r\n                  <MenuItem value={\"55.000-80.000\"}>55.000-80.000</MenuItem>\r\n                  <MenuItem value={\"100.000+\"}>100.000+</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Logradouro\"\r\n                  name=\"street\"\r\n                  placeholder=\"Digite sua rua/logradouro.\"\r\n                  value={user.street}\r\n                  onChange={handleChange(\"street\")}\r\n                  margin=\"normal\"\r\n                  error={filedError.street !== \"\"}\r\n                  helperText={filedError.street !== \"\" ? `${filedError.street}` : \"\"}\r\n                  required\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Número\"\r\n                  name=\"number\"\r\n                  placeholder=\"Digite o número da residência.\"\r\n                  value={user.number}\r\n                  onChange={handleChange(\"number\")}\r\n                  margin=\"normal\"\r\n                  error={filedError.number !== \"\"}\r\n                  helperText={filedError.number !== \"\" ? \"Números de 2 a 5 necessários.\" : \"\"}\r\n                  required\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Complemento\"\r\n                  name=\"complement\"\r\n                  placeholder=\"Digite um complemento. i.e: apartamento 10\"\r\n                  value={user.complement}\r\n                  onChange={handleChange(\"complement\")}\r\n                  margin=\"normal\"\r\n                  error={filedError.complement !== \"\"}\r\n                  helperText={filedError.complement !== \"\" ? `${filedError.complement}` : \"\"}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Bairro\"\r\n                  name=\"neighborhood\"\r\n                  placeholder=\"Digite o bairro da residência.\"\r\n                  value={user.neighborhood}\r\n                  onChange={handleChange(\"neighborhood\")}\r\n                  margin=\"normal\"\r\n                  error={filedError.neighborhood !== \"\"}\r\n                  helperText={filedError.neighborhood !== \"\" ? `${filedError.neighborhood}` : \"\"}\r\n                  required\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  InputProps={{\r\n                    className: classes.colorWhite\r\n                  }}\r\n                  InputLabelProps={{\r\n                    className: classes.colorWhite\r\n                  }}\r\n                  fullWidth\r\n                  label=\"Cidade\"\r\n                  name=\"city\"\r\n                  placeholder=\"Digite o nome da cidade.\"\r\n                  value={user.city}\r\n                  onChange={handleChange(\"city\")}\r\n                  margin=\"normal\"\r\n                  error={filedError.city !== \"\"}\r\n                  helperText={filedError.city !== \"\" ? `${filedError.city}` : \"\"}\r\n                  disabled\r\n                  required\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  InputProps={{\r\n                    className: classes.colorWhite\r\n                  }}\r\n                  InputLabelProps={{\r\n                    className: classes.colorWhite\r\n                  }}\r\n                  fullWidth\r\n                  label=\"Estado\"\r\n                  name=\"state\"\r\n                  placeholder=\"Digite o nome do estado.\"\r\n                  value={user.state}\r\n                  onChange={handleChange(\"state\")}\r\n                  margin=\"normal\"\r\n                  error={filedError.state !== \"\"}\r\n                  helperText={filedError.state !== \"\" ? `${filedError.state}` : \"\"}\r\n                  disabled\r\n                  required\r\n                />\r\n            </Grid>\r\n\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          <Button\r\n            variant=\"contained\"\r\n            disabled={isError}\r\n            color=\"secondary\"\r\n            onClick={submit}\r\n            className={classes.disableButton}\r\n          >\r\n            Salvar\r\n          </Button>\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nUserDetails.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default UserDetails;\r\n","import React, {useEffect, useState} from 'react';\r\nimport { Link as RouterLink, withRouter, Redirect, useHistory} from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid } from '@material-ui/core';\r\nimport { UserDetails } from './components';\r\nimport UserService from \"../../services/user.service\";\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nconst MySwal = withReactContent(Swal)\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst UserEdit = ({ match, location }) => {\r\n  const classes = useStyles();\r\n  const { params: { userId } } = match;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        spacing={4}\r\n      >\r\n        <Grid\r\n          item\r\n          lg={12}\r\n          md={12}\r\n          xl={12}\r\n          xs={12}\r\n        >\r\n          <UserDetails \r\n          MySwal={MySwal}\r\n          useHistory={useHistory}\r\n          UserService={UserService}\r\n          userId={userId}/>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserEdit;\r\n","import React, { useState,useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport FormControl from \"@material-ui/core/FormControl\"\r\nimport Select from \"@material-ui/core/Select\"\r\nimport InputLabel from \"@material-ui/core/InputLabel\"\r\nimport MenuItem from \"@material-ui/core/MenuItem\"\r\nimport InputMask from \"react-input-mask\"\r\n\r\n\r\nimport CPF from \"cpf_cnpj\";\r\nconst emailRegex = RegExp(/^[^@]+@[^@]+\\.[^@]+$/)\r\nconst cpfRegex = RegExp(/[0-9]{3}\\.[0-9]{3}\\.[0-9]{3}-[0-9]{2}/)\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {},\r\n    colorWhite: {\r\n      color: 'white!important'\r\n    },\r\n    disableButton: {\r\n        \"&:disabled\": {\r\n          color: 'rgb(206, 191, 191)!important',\r\n          backgroundColor: 'rgb(107, 110, 128)!important'\r\n        }\r\n    },\r\n}));\r\n\r\nconst UserDetails = props => {\r\n  const { className, UserService, AuthService, MySwal, ...rest } = props;\r\n  const [user, setUser] = useState({\r\n    full_name: \"\",\r\n    email: \"\",\r\n    investment_type: \"\",\r\n    birthdate: \"\",\r\n    gender: \"\",\r\n    cpf: \"\",\r\n    cellphone: \"\",\r\n    zipcode: \"\",\r\n    street: \"\",\r\n    number: \"\",\r\n    complement: \"\",\r\n    neighborhood: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    investment: \"\",\r\n  });\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n          const response = await UserService.getOneUser(AuthService.getCurrentUser().id);\r\n          if(response.data.password)\r\n            delete response.data.password\r\n          setUser(response.data);\r\n      } catch (e) {\r\n        setUser({});\r\n      }\r\n    };\r\n    fetchUser();\r\n  }, []);\r\n  const user_investment_type = user.investment_type;\r\n  const classes = useStyles();\r\n  const [fields, setFields] = useState({\r\n    full_name: \"\",\r\n    email: \"\",\r\n    investment_type: \"\",\r\n    birthdate: \"\",\r\n    gender: \"\",\r\n    cpf: \"\",\r\n    cellphone: \"\",\r\n    zipcode: \"\",\r\n    street: \"\",\r\n    number: \"\",\r\n    complement: \"\",\r\n    neighborhood: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    investment: \"\",\r\n  })\r\n  // Copy fields as they all have the same name\r\n  const [filedError, setFieldError] = useState({\r\n    ...fields\r\n  })\r\n  const [isError, setIsError] = useState(false)\r\n  const [isZipcode, setIsZipcode] = useState(true)\r\n\r\n  const handleChange = input => ({ target: { value } }) => {\r\n    // Set user to the fields\r\n    setUser({\r\n      ...user,\r\n      [input]: value\r\n    })\r\n    // Handle errors\r\n    const formErrors = { ...filedError }\r\n    const lengthValidate = value.length >= 0 && value.length < 3\r\n    const numberValidate = /^[0-9]{0,255}$/;\r\n    const phoneValidate = /^([+][0-9]{2})?([ ]\\([0-9]{2})\\)[ ]([0-9]{3}|[0-9]{5})-[0-9]{4}$/;\r\n    let cep = '';\r\n    let cepformatValidate = true;\r\n\r\n    if(input == \"zipcode\") {\r\n      cep = value;\r\n      cep = cep.replace(/\\D/g, '')\r\n      let val_cep = value;\r\n      var validate = /[0-9]{5}[-][0-9]{3}/;\r\n      cepformatValidate = cep == '';\r\n          if (validate.test(val_cep)) {\r\n            fetch(\"https://viacep.com.br/ws/\"+cep+\"/json\")\r\n              .then(res => res.json())\r\n              .then(\r\n                (result) => {\r\n                  if(result.erro) {\r\n                    cepformatValidate = true;\r\n                    setUser({\r\n                      ...user,\r\n                      street: '',\r\n                      neighborhood: '',\r\n                      city: '',\r\n                      state: ''\r\n                    })\r\n                    setIsZipcode(false)\r\n                  } else {\r\n                    setUser({\r\n                      ...user,\r\n                      zipcode: value,\r\n                      street: result.logradouro,\r\n                      neighborhood: result.bairro,\r\n                      city: result.localidade,\r\n                      state: result.uf\r\n                    })\r\n                    cepformatValidate = false;\r\n                    setIsZipcode(true)\r\n                  }\r\n                },\r\n                (error) => {\r\n                  setIsZipcode(false)\r\n                  cepformatValidate = true;\r\n                }\r\n            )\r\n          }else {\r\n            setIsZipcode(false)\r\n            cepformatValidate = true;\r\n          }\r\n    }\r\n\r\n    switch (input) {\r\n      case \"full_name\":\r\n        formErrors.full_name = lengthValidate\r\n          ? \"Necessário mínimo de 3 caracteres.\"\r\n          : \"\"\r\n        break\r\n      case \"email\":\r\n        formErrors.email = emailRegex.test(value) ? \"\" : \"Endereço de email inválido.\"\r\n      break\r\n      case \"cpf\":\r\n        formErrors.cpf = !CPF.CPF.isValid(value) || !cpfRegex.test(value)\r\n          ? \"CPF inválido. i.e. 532.820.857-96\"\r\n          : \"\"\r\n      break\r\n      case \"cellphone\":\r\n        formErrors.cellphone = phoneValidate.test(value)\r\n          ? \"\"\r\n          : \"Por favor insira um número de telefone válido. i.e: +55 (99) 99999-9999\"\r\n      break\r\n      case \"password\":\r\n        formErrors.password = value.length >= 0 && value.length < 6\r\n          ? \"Necessário mínimo de 6 caracteres.\"\r\n          : \"\"\r\n      break\r\n      case \"confirm\":\r\n        formErrors.confirm = lengthValidate\r\n          ? \"Necessário mínimo de 6 caracteres.\"\r\n          : \"\"\r\n      break\r\n      case \"zipcode\":\r\n        formErrors.zipcode = value.length == 0 || cepformatValidate\r\n          ? \"Formato de CEP inválido.\"\r\n          : \"\"\r\n      break\r\n      case \"birthdate\":\r\n        formErrors.birthdate = lengthValidate\r\n          ? \"Necessário mínimo de 3 caracteres.\"\r\n          : \"\"\r\n      break\r\n      case \"gender\":\r\n        formErrors.gender = lengthValidate\r\n          ? \"Necessário mínimo de 3 caracteres.\"\r\n          : \"\"\r\n      break\r\n      case \"street\":\r\n        formErrors.street = lengthValidate\r\n          ? \"Necessário mínimo de 3 caracteres.\"\r\n          : \"\"\r\n      break\r\n      case \"number\":\r\n        formErrors.number = !numberValidate.test(value) || value.length < 2 || value.length > 5\r\n          ? \"Números mínimos 2 e 5 máximos necessários.\"\r\n          : \"\"\r\n      break\r\n      case \"complement\":\r\n        formErrors.complement = \"\"\r\n      break\r\n      case \"neighborhood\":\r\n        formErrors.neighborhood = lengthValidate\r\n          ? \"Necessário mínimo de 3 caracteres.\"\r\n          : \"\"\r\n      break\r\n      case \"city\":\r\n        formErrors.city = value.length == 0\r\n          ? \"Necessário mínimo de 1 caractere.\"\r\n          : \"\"\r\n      break\r\n      case \"state\":\r\n        formErrors.state = value.length == 0\r\n          ? \"Necessário mínimo de 1 caractere.\"\r\n          : \"\"\r\n      break\r\n      case \"investment\":\r\n        formErrors.investment = lengthValidate\r\n          ? \"Necessário mínimo de 2 caracteres.\"\r\n          : \"\"\r\n      break\r\n      case \"investment_type\":\r\n        formErrors.investment_type = lengthValidate\r\n          ? \"Necessário mínimo de 3 caracteres.\"\r\n          : \"\"\r\n      break\r\n      default:\r\n        break\r\n    }\r\n    // set error hook\r\n    let error_count = 0;\r\n    Object.values(formErrors).forEach((error,val,array) => {\r\n      if (error.length > 0) {\r\n        error_count = error_count + 1;\r\n        return;\r\n      }\r\n    })\r\n    if(error_count > 0){\r\n      setIsError(true)\r\n    } else {\r\n      setIsError(false)\r\n    }\r\n    // set errors hook\r\n    setFieldError({\r\n      ...formErrors\r\n    })\r\n  }\r\n\r\n  const submit = () => {\r\n    if(!isError) {\r\n      UserService.update(\r\n        user\r\n      ).then(\r\n        response => {\r\n          MySwal.fire({\r\n            title: 'Success',\r\n            text: response.message\r\n          })\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n            MySwal.fire({\r\n              title: 'Fail',\r\n              text: resMessage,\r\n              dangerMode: true\r\n            })\r\n        }\r\n      );\r\n    }\r\n  }\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"O endereço pode ser atualizado uma vez a cada 72 horas. Para atualizar dados pessoais como nome ou gênero, entre em contato com o suporte.\"\r\n          title=\"Dados Cadastrais\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid container spacing={2} noValidate>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                fullWidth\r\n                InputProps={{\r\n                  className: classes.colorWhite\r\n                }}\r\n                InputLabelProps={{\r\n                  className: classes.colorWhite,\r\n                  shrink: true,\r\n                }}\r\n                label=\"Nome Completo\"\r\n                name=\"full_name\"\r\n                placeholder=\"Nome Completo\"\r\n                value={user.full_name}\r\n                onChange={handleChange(\"full_name\")}\r\n                margin=\"normal\"\r\n                error={filedError.full_name !== \"\"}\r\n                helperText={\r\n                  filedError.full_name !== \"\" ? `${filedError.full_name}` : \"\"\r\n                }\r\n                disabled\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n                    <TextField\r\n                        fullWidth\r\n                        value={user.cpf}\r\n                        InputProps={{\r\n                          className: classes.colorWhite\r\n                        }}\r\n                        InputLabelProps={{\r\n                          className: classes.colorWhite,\r\n                          shrink: true,\r\n                        }}\r\n                        disabled\r\n                        label=\"CPF\"\r\n                        name=\"cpf\"\r\n                        placeholder=\"formato: 123.432.156-12\"\r\n                        margin=\"normal\"\r\n                        error={filedError.cpf !== \"\"}\r\n                        helperText={\r\n                          filedError.cpf !== \"\" ? `${filedError.cpf}` : \"\"\r\n                        }\r\n                        required\r\n                      />\r\n\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                disabled\r\n                fullWidth\r\n                  InputProps={{\r\n                  className: classes.colorWhite\r\n                }}\r\n                InputLabelProps={{\r\n                  className: classes.colorWhite,\r\n                  shrink: true,\r\n                }}\r\n                label=\"E-mail\"\r\n                name=\"email\"\r\n                placeholder=\"meu@email.com.br\"\r\n                type=\"email\"\r\n                value={user.email}\r\n                onChange={handleChange(\"email\")}\r\n                margin=\"normal\"\r\n                error={filedError.email !== \"\"}\r\n                helperText={filedError.email !== \"\" ? `${filedError.email}` : \"\"}\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n                 <TextField\r\n                          disabled\r\n                          value={user.cellphone}\r\n                          fullWidth\r\n                            InputProps={{\r\n                            className: classes.colorWhite\r\n                          }}\r\n                          InputLabelProps={{\r\n                            className: classes.colorWhite,\r\n                            shrink: true,\r\n                          }}\r\n                          fullWidth\r\n                          label=\"Celular\"\r\n                          name=\"cellphone\"\r\n                          placeholder=\"i.e: +55 (99) 99999-9999\"\r\n                          margin=\"normal\"\r\n                          error={filedError.cellphone !== \"\"}\r\n                          helperText={filedError.cellphone !== \"\" ? `${filedError.cellphone}` : \"\"}\r\n                  />\r\n            </Grid>\r\n\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                disabled\r\n                fullWidth\r\n                InputProps={{\r\n                  className: classes.colorWhite\r\n                }}\r\n                InputLabelProps={{\r\n                  className: classes.colorWhite,\r\n                  shrink: true,\r\n                }}\r\n                label=\"Nascimento\"\r\n                name=\"birthdate\"\r\n                type=\"date\"\r\n                value={user.birthdate}\r\n                onChange={handleChange(\"birthdate\")}\r\n                margin=\"normal\"\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4} sm={4}>\r\n              <FormControl fullWidth required margin=\"normal\">\r\n                <InputLabel htmlFor=\"gender\">Gênero</InputLabel>\r\n                <Select className={classes.colorWhite} value={user.gender} onChange={handleChange(\"gender\")} disabled>\r\n                  <MenuItem value={\"MASCULINO\"}>MASCULINO</MenuItem>\r\n                  <MenuItem value={\"FEMININO\"}>FEMININO</MenuItem>\r\n                  <MenuItem value={\"TRANSGÊNERO\"}>TRANSGÊNERO</MenuItem>\r\n                  <MenuItem value={\"OUTRO\"}>OUTRO</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <InputMask\r\n                mask=\"99999-999\"\r\n                maskChar=\" \"\r\n                value={user.zipcode}\r\n                onChange={handleChange(\"zipcode\")}\r\n              >\r\n                {() => <TextField\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                        fullWidth\r\n                        label=\"CEP\"\r\n                        name=\"zipcode\"\r\n                        placeholder=\"Enter your zipcode\"\r\n                        margin=\"normal\"\r\n                        error={!isZipcode}\r\n                        helperText={isZipcode ? \"\" : \"Formato de CEP inválido.\"}\r\n                        required\r\n                      />\r\n                }\r\n                </InputMask>\r\n\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Logradouro\"\r\n                  name=\"street\"\r\n                  placeholder=\"Digite sua rua/logradouro.\"\r\n                  value={user.street}\r\n                  onChange={handleChange(\"street\")}\r\n                  margin=\"normal\"\r\n                  error={filedError.street !== \"\"}\r\n                  helperText={filedError.street !== \"\" ? `${filedError.street}` : \"\"}\r\n                  required\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Número\"\r\n                  name=\"number\"\r\n                  placeholder=\"Digite o número da residência.\"\r\n                  value={user.number}\r\n                  onChange={handleChange(\"number\")}\r\n                  margin=\"normal\"\r\n                  error={filedError.number !== \"\"}\r\n                  helperText={filedError.number !== \"\" ? \"Números de 2 a 5 necessários.\" : \"\"}\r\n                  required\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Complemento\"\r\n                  name=\"complement\"\r\n                  placeholder=\"Digite um complemento. i.e: apartamento 10\"\r\n                  value={user.complement}\r\n                  onChange={handleChange(\"complement\")}\r\n                  margin=\"normal\"\r\n                  error={filedError.complement !== \"\"}\r\n                  helperText={filedError.complement !== \"\" ? `${filedError.complement}` : \"\"}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Bairro\"\r\n                  name=\"neighborhood\"\r\n                  placeholder=\"Digite o bairro da residência.\"\r\n                  value={user.neighborhood}\r\n                  onChange={handleChange(\"neighborhood\")}\r\n                  margin=\"normal\"\r\n                  error={filedError.neighborhood !== \"\"}\r\n                  helperText={filedError.neighborhood !== \"\" ? `${filedError.neighborhood}` : \"\"}\r\n                  required\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  InputProps={{\r\n                    className: classes.colorWhite\r\n                  }}\r\n                  InputLabelProps={{\r\n                    className: classes.colorWhite\r\n                  }}\r\n                  fullWidth\r\n                  label=\"Cidade\"\r\n                  name=\"city\"\r\n                  placeholder=\"Digite o nome da cidade.\"\r\n                  value={user.city}\r\n                  onChange={handleChange(\"city\")}\r\n                  margin=\"normal\"\r\n                  error={filedError.city !== \"\"}\r\n                  helperText={filedError.city !== \"\" ? `${filedError.city}` : \"\"}\r\n                  disabled\r\n                  required\r\n                />\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <TextField\r\n                  InputProps={{\r\n                    className: classes.colorWhite\r\n                  }}\r\n                  InputLabelProps={{\r\n                    className: classes.colorWhite\r\n                  }}\r\n                  fullWidth\r\n                  label=\"Estado\"\r\n                  name=\"state\"\r\n                  placeholder=\"Digite o nome do estado.\"\r\n                  value={user.state}\r\n                  onChange={handleChange(\"state\")}\r\n                  margin=\"normal\"\r\n                  error={filedError.state !== \"\"}\r\n                  helperText={filedError.state !== \"\" ? `${filedError.state}` : \"\"}\r\n                  disabled\r\n                  required\r\n                />\r\n            </Grid>\r\n\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          <Button\r\n            variant=\"contained\"\r\n            disabled={isError}\r\n            color=\"secondary\"\r\n            onClick={submit}\r\n            className={classes.disableButton}\r\n          >\r\n            Salvar\r\n          </Button>\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nUserDetails.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default UserDetails;\r\n","import React, {useEffect, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid } from '@material-ui/core';\r\nimport { UserDetails } from './components';\r\nimport UserService from \"../../services/user.service\";\r\nimport AuthService from \"../../services/auth.service\";\r\n\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nconst MySwal = withReactContent(Swal)\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst UserPersonal = ({ match, location }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        spacing={4}\r\n      >\r\n        <Grid\r\n          item\r\n          lg={12}\r\n          md={12}\r\n          xl={12}\r\n          xs={12}\r\n        >\r\n          <UserDetails \r\n          MySwal={MySwal}\r\n          UserService={UserService}\r\n          AuthService={AuthService}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPersonal;\r\n","import React, { useState,useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    root: {},\r\n    colorWhite: {\r\n      color: 'white!important'\r\n    },\r\n    disableButton: {\r\n        \"&:disabled\": {\r\n          color: 'rgb(206, 191, 191)!important',\r\n          backgroundColor: 'rgb(107, 110, 128)!important'\r\n        }\r\n    },\r\n}));\r\n\r\nconst UserDetails = props => {\r\n  const { className, UserService, AuthService, MySwal, ...rest } = props;\r\n  const [bank, setBank] = useState({\r\n    user_id: AuthService.getCurrentUser().id,\r\n    banco_nome: \"\",\r\n    banco_agencia: \"\",\r\n    banco_conta: \"\",\r\n    tipo_conta: \"\",\r\n  });\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n          const response = await UserService.getBank(AuthService.getCurrentUser().id);\r\n          if(response.data)\r\n            setBank(response.data);\r\n      } catch (e) {\r\n\r\n      }\r\n    };\r\n    fetchUser();\r\n  }, []);\r\n  const classes = useStyles();\r\n  const [fields, setFields] = useState({\r\n    banco_nome: \"\",\r\n    banco_agencia: \"\",\r\n    banco_conta: \"\",\r\n    tipo_conta: \"\",\r\n  })\r\n  // Copy fields as they all have the same name\r\n  const [filedError, setFieldError] = useState({\r\n    ...fields\r\n  })\r\n  const [isError, setIsError] = useState(false)\r\n  const handleChange = input => ({ target: { value } }) => {\r\n    // Set user to the fields\r\n    setBank({\r\n      ...bank,\r\n      [input]: value\r\n    })\r\n    // Handle errors\r\n    const formErrors = { ...filedError }\r\n    const lengthValidate = value.length >= 0 && value.length < 3\r\n    switch (input) {\r\n      case \"banco_nome\":\r\n        formErrors.banco_nome = lengthValidate\r\n          ? \"Necessário mínimo de 3 caracteres.\"\r\n          : \"\"\r\n        break\r\n      case \"banco_agencia\":\r\n        formErrors.banco_agencia = lengthValidate\r\n          ? \"Necessário mínimo de 3 caracteres.\"\r\n          : \"\"\r\n        break\r\n        case \"banco_conta\":\r\n      formErrors.banco_conta = lengthValidate\r\n        ? \"Necessário mínimo de 3 caracteres.\"\r\n        : \"\"\r\n      break\r\n      case \"tipo_conta\":\r\n      formErrors.tipo_conta = lengthValidate\r\n        ? \"Necessário mínimo de 3 caracteres.\"\r\n        : \"\"\r\n      break\r\n      default:\r\n        break\r\n    }\r\n    // set error hook\r\n    let error_count = 0;\r\n    Object.values(formErrors).forEach((error,val,array) => {\r\n      if (error.length > 0) {\r\n        error_count = error_count + 1;\r\n        return;\r\n      }\r\n    })\r\n    if(error_count > 0){\r\n      setIsError(true)\r\n    } else {\r\n      setIsError(false)\r\n    }\r\n    // set errors hook\r\n    setFieldError({\r\n      ...formErrors\r\n    })\r\n  }\r\n  const submit = () => {\r\n    console.log(bank);\r\n    if(bank && bank.banco_nome.length > 0 && bank.banco_agencia.length > 0 && bank.banco_conta.length > 0 && bank.tipo_conta.length > 0){\r\n      if(!isError) {\r\n        UserService.bankUpdate(\r\n          bank\r\n        ).then(\r\n          response => {\r\n            MySwal.fire({\r\n              title: 'Success',\r\n              text: response.message\r\n            })\r\n          },\r\n          error => {\r\n            const resMessage =\r\n              (error.response &&\r\n                error.response.data &&\r\n                error.response.data.message) ||\r\n              error.message ||\r\n              error.toString();\r\n              MySwal.fire({\r\n                title: 'Fail',\r\n                text: resMessage,\r\n                dangerMode: true\r\n              })\r\n          }\r\n        );\r\n      }\r\n    }else {\r\n      MySwal.fire({\r\n        title: 'Fail',\r\n        text: \"You should input to all fields\",\r\n        dangerMode: true\r\n      })\r\n    }\r\n\r\n  }\r\n  //console.log(bank);\r\n  //setIsError(bank.banco_nome.length > 0 && bank.banco_agencia.length > 0 && bank.banco_conta.length > 0 && bank.tipo_conta.length > 0);\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"Você pode atualizar os dados bancários para recebimento de saque\"\r\n          title=\"Conta bancária\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n            <Grid container spacing={2} noValidate>\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  label=\"Banco Nome\"\r\n                  name=\"banco_nome\"\r\n                  placeholder=\"ex: Banco do Brasil\"\r\n                  value={bank.banco_nome}\r\n                  onChange={handleChange(\"banco_nome\")}\r\n                  margin=\"normal\"\r\n                  error={filedError.banco_nome !== \"\"}\r\n                  helperText={\r\n                    filedError.banco_nome !== \"\" ? `${filedError.banco_nome}` : \"\"\r\n                  }\r\n                  required\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  label=\"Número da Agência\"\r\n                  name=\"banco_agencia\"\r\n                  placeholder=\"ex: 123\"\r\n                  value={bank.banco_agencia}\r\n                  onChange={handleChange(\"banco_agencia\")}\r\n                  margin=\"normal\"\r\n                  error={filedError.banco_agencia !== \"\"}\r\n                  helperText={\r\n                    filedError.banco_agencia !== \"\" ? `${filedError.banco_agencia}` : \"\"\r\n                  }\r\n                  required\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  label=\"Número da Conta\"\r\n                  name=\"banco_conta\"\r\n                  placeholder=\"ex: 40342-9\"\r\n                  value={bank.banco_conta}\r\n                  onChange={handleChange(\"banco_conta\")}\r\n                  margin=\"normal\"\r\n                  error={filedError.banco_conta !== \"\"}\r\n                  helperText={\r\n                    filedError.banco_conta !== \"\" ? `${filedError.banco_conta}` : \"\"\r\n                  }\r\n                  required\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                  label=\"Tipo de Conta\"\r\n                  name=\"tipo_conta\"\r\n                  placeholder=\"selecione\"\r\n                  value={bank.tipo_conta}\r\n                  onChange={handleChange(\"tipo_conta\")}\r\n                  margin=\"normal\"\r\n                  error={filedError.tipo_conta !== \"\"}\r\n                  helperText={\r\n                    filedError.tipo_conta !== \"\" ? `${filedError.tipo_conta}` : \"\"\r\n                  }\r\n                  required\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          <Button\r\n            variant=\"contained\"\r\n            disabled={isError}\r\n            color=\"secondary\"\r\n            onClick={submit}\r\n            className={classes.disableButton}\r\n          >\r\n            Salvar\r\n          </Button>\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nUserDetails.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default UserDetails;\r\n","import React, {useEffect, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid } from '@material-ui/core';\r\nimport { UserDetails } from './components';\r\nimport UserService from \"../../services/user.service\";\r\nimport AuthService from \"../../services/auth.service\";\r\n\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nconst MySwal = withReactContent(Swal)\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst UserBank = ({ match, location }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        spacing={4}\r\n      >\r\n        <Grid\r\n          item\r\n          lg={12}\r\n          md={12}\r\n          xl={12}\r\n          xs={12}\r\n        >\r\n          <UserDetails \r\n          MySwal={MySwal}\r\n          UserService={UserService}\r\n          AuthService={AuthService}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserBank;\r\n","import React, { useState,useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport moment from 'moment';\r\nimport currencyFormatter from 'currency-formatter';\r\nimport SimpleMaskMoney from 'simple-mask-money/lib/simple-mask-money'\r\nimport $ from 'jquery'\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TablePagination,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    colorWhite: {\r\n      color: 'white!important'\r\n    },\r\n    disableButton: {\r\n        \"&:disabled\": {\r\n          color: 'rgb(206, 191, 191)!important',\r\n          backgroundColor: 'rgb(107, 110, 128)!important'\r\n        }\r\n    },\r\n    margin: {\r\n      \"& > *\": {\r\n        margin: theme.spacing(1)\r\n      }\r\n    },\r\n}));\r\n\r\nconst PlanList = props => {\r\n  //basic setting\r\n  const classes = useStyles();\r\n  const { className, UserService, AuthService, PlanService, MySwal, ...rest } = props;\r\n  //handle table\r\n  const [plans, setPlans] = useState([]);\r\n  const [is_both, setIs_both] = useState(false);\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n        try {\r\n          const response = await PlanService.getPlanByUser(AuthService.getCurrentUser().id);\r\n          setPlans(response.data);\r\n\r\n        } catch (e) {\r\n            setPlans([]);\r\n        }\r\n    };\r\n    fetchUsers();\r\n  }, []);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n  const handlePageChange = (event, page) => {\r\n    setPage(page);\r\n  };\r\n  const handleRowsPerPageChange = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //handle action\r\n  const handleUpload = () => {\r\n    let is_both_invest_type = false\r\n    let f_count = 0\r\n    let c_count = 0\r\n    plans.map(item => {\r\n      if(item.invest_type == 'FLEXIVEL') {\r\n        f_count = f_count + 1;\r\n      }else if(item.invest_type == 'CRESCIMENTO'){\r\n        c_count = c_count + 1;\r\n      }\r\n    })\r\n\r\n    if(f_count > 0 && c_count > 0) {\r\n      is_both_invest_type = true\r\n    }\r\n    var select_html = ''\r\n    if(is_both_invest_type) {\r\n      select_html = '<select id=\"swal_investment_type\" class=\"swal2-select\" style=\"border-color: #d9d9d9;display: flex;width: 100%; font-size: 16px;padding: .975em .625em;\"><option value=\"FLEXIVEL\">FLEXIVEL</option><option value=\"CRESCIMENTO\">CRESCIMENTO</option></select>'\r\n    }\r\n\r\n    MySwal.fire({\r\n      title: 'Upload do Contrato',\r\n      text: '',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Confirmar',\r\n      cancelButtonText: 'Cancelar',\r\n      allowOutsideClick: false,\r\n      html: '<input type=\"file\" id=\"swal_admin_cpf\" name=\"admin_pdf\" class=\"swal2-input\" style=\"max-width: 100%;\" placeHolder=\"\">' + select_html,\r\n      preConfirm: (value) => {\r\n        if(document.getElementById(\"swal_admin_cpf\").files.length == 0) {\r\n          MySwal.showValidationMessage('O contrato precisa estar em formato .PDF')\r\n        }\r\n      },\r\n      onOpen: () => {\r\n        $(\"#swal_admin_cpf\").change(function (e) {\r\n            console.log(e);\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(this.files[0]);\r\n        });\r\n      }\r\n    }).then(function (result) {\r\n      if (result.dismiss === MySwal.DismissReason.cancel) {\r\n        return\r\n      }else if(result.value){\r\n        var formData = new FormData();\r\n        var file = $('#swal_admin_cpf')[0].files[0];\r\n\r\n\r\n        let user_pdf = \"user_pdf\"\r\n\r\n        if(f_count > 0 && c_count == 0) {\r\n          user_pdf = \"user_pdf\"\r\n        }else if(f_count == 0 && c_count > 0){\r\n          user_pdf = \"user_pdf2\"\r\n        }else if(f_count > 0 && c_count > 0) {\r\n          if(document.getElementById(\"swal_investment_type\").value == \"FLEXIVEL\") {\r\n            user_pdf = \"user_pdf\"\r\n          }else {\r\n            user_pdf = \"user_pdf2\"\r\n          }\r\n        }\r\n\r\n        formData.append('user_pdf', file)\r\n        formData.append('pdf_field', user_pdf)\r\n        UserService.getContractPDFByUser(AuthService.getCurrentUser().id).then(cp_res => {\r\n          let cp_res_data = cp_res.data;\r\n          let is_exist = false;\r\n          let admin_is_exist = false;\r\n\r\n          if(cp_res_data == null || cp_res_data.length == 0) {\r\n            admin_is_exist = false;\r\n          }else {\r\n\r\n            if(user_pdf == \"user_pdf\") {\r\n              if(!cp_res_data.admin_pdf || 0 === cp_res_data.admin_pdf.length ) {\r\n                admin_is_exist = false;\r\n              }else {\r\n                admin_is_exist = true;\r\n              }\r\n            }else {\r\n              if(!cp_res_data.admin_pdf2 || 0 === cp_res_data.admin_pdf2.length ) {\r\n                admin_is_exist = false;\r\n              }else {\r\n                admin_is_exist = true;\r\n              }\r\n            }\r\n\r\n            if(user_pdf == \"user_pdf\") {\r\n              if(!cp_res_data.user_pdf || 0 === cp_res_data.user_pdf.length ) {\r\n                is_exist = false;\r\n              }else {\r\n                is_exist = true;\r\n              }\r\n            }else {\r\n              if(!cp_res_data.user_pdf2 || 0 === cp_res_data.user_pdf2.length ) {\r\n                is_exist = false;\r\n              }else {\r\n                is_exist = true;\r\n              }\r\n            }\r\n\r\n          }\r\n\r\n          if(admin_is_exist) {\r\n            if(!is_exist){\r\n              UserService.uploadUserContract(formData).then(\r\n                response => {\r\n                  if(response.status == 'success') {\r\n                    MySwal.fire({\r\n                      title: 'Uploaded successfully',\r\n                      icon: 'success',\r\n                      text: response.message\r\n                    })\r\n                  }else if(response.status == 'fail') {\r\n                    MySwal.fire({\r\n                      title: 'Fail',\r\n                      icon: 'warning',\r\n                      text: response.message\r\n                    })\r\n                  }\r\n                },\r\n                error => {\r\n                  console.log(error)\r\n                }\r\n              );\r\n            }else {\r\n              let alarm_string = user_pdf == 'user_pdf' ? 'You already uploaded Flexible contract' : 'You already uploaded Crescimento contract'\r\n              MySwal.fire({\r\n                title: 'Alarm',\r\n                text: alarm_string\r\n              })\r\n            }\r\n          }else {\r\n            MySwal.fire({\r\n              title: 'Alarm',\r\n              text: 'Nenhum contrato disponível no momento'\r\n            })\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n  const handleDownload = (user_pdf) => {\r\n    let is_both_invest_type = false\r\n    let f_count = 0\r\n    let c_count = 0\r\n    plans.map(item => {\r\n      if(item.invest_type == 'FLEXIVEL') {\r\n        f_count = f_count + 1;\r\n      }else if(item.invest_type == 'CRESCIMENTO'){\r\n        c_count = c_count + 1;\r\n      }\r\n    })\r\n\r\n    if(f_count > 0 && c_count > 0) {\r\n      is_both_invest_type = true\r\n    }\r\n    var select_html = ''\r\n    UserService.getContractPDFByUser(AuthService.getCurrentUser().id).then(cp_res => {\r\n      let cp_res_data = cp_res.data;\r\n      let is_exist = false;\r\n      let admin_is_exist = false;\r\n\r\n\r\n      if(is_both_invest_type) {\r\n        select_html = '<select id=\"swal_investment_type\" class=\"swal2-select\" style=\"border-color: #d9d9d9;display: flex;width: 100%; font-size: 16px;padding: .975em .625em;\"><option value=\"FLEXIVEL\">FLEXIVEL</option><option value=\"CRESCIMENTO\">CRESCIMENTO</option></select>'\r\n\r\n        MySwal.fire({\r\n          allowOutsideClick: false,\r\n          title: 'Download Contract',\r\n          text: 'Entre com o aporte',\r\n          showCancelButton: true,\r\n          confirmButtonText: 'Confirmar',\r\n          cancelButtonText: 'Cancelar',\r\n          html: select_html,\r\n          preConfirm: (value) => {\r\n\r\n          },\r\n          onOpen: () => {\r\n\r\n          }\r\n        }).then(function (result) {\r\n          if (result.dismiss === MySwal.DismissReason.cancel) {\r\n            return\r\n          }else if(result.value){\r\n            let invest_type_value = document.getElementById('swal_investment_type').value\r\n            if(cp_res_data == null || cp_res_data.length == 0) {\r\n              admin_is_exist = false;\r\n            }else {\r\n              if(invest_type_value == \"FLEXIVEL\") {\r\n                if(!cp_res_data.admin_pdf || 0 === cp_res_data.admin_pdf.length ) {\r\n                  admin_is_exist = false;\r\n                }else {\r\n                  admin_is_exist = true;\r\n                }\r\n              }else {\r\n                if(!cp_res_data.admin_pdf2 || 0 === cp_res_data.admin_pdf2.length ) {\r\n                  admin_is_exist = false;\r\n                }else {\r\n                  admin_is_exist = true;\r\n                }\r\n              }\r\n            }\r\n            if(admin_is_exist) {\r\n              UserService.downloadUserContract(document.getElementById('swal_investment_type').value).then(\r\n                response => {\r\n\r\n                },\r\n                error => {\r\n                  console.log(error)\r\n                }\r\n              );\r\n            }else {\r\n              MySwal.fire({\r\n                title: 'Alarm',\r\n                text: 'Nenhum contrato disponível no momento'\r\n              })\r\n            }\r\n          }\r\n        })\r\n      }else {\r\n        let investment_type = \"FLEXIVEL\"\r\n\r\n        if(f_count > 0 && c_count == 0) {\r\n          investment_type = \"FLEXIVEL\"\r\n\r\n        }else if(f_count == 0 && c_count > 0){\r\n          investment_type = \"CRESCIMENTO\"\r\n        }\r\n\r\n        if(cp_res_data == null || cp_res_data.length == 0) {\r\n          admin_is_exist = false;\r\n        }else {\r\n          if(investment_type == \"FLEXIVEL\") {\r\n            if(!cp_res_data.admin_pdf || 0 === cp_res_data.admin_pdf.length ) {\r\n              admin_is_exist = false;\r\n            }else {\r\n              admin_is_exist = true;\r\n            }\r\n          }else {\r\n            if(!cp_res_data.admin_pdf2 || 0 === cp_res_data.admin_pdf2.length ) {\r\n              admin_is_exist = false;\r\n            }else {\r\n              admin_is_exist = true;\r\n            }\r\n          }\r\n        }\r\n        if(admin_is_exist) {\r\n          UserService.downloadUserContract(investment_type).then(\r\n            response => {\r\n\r\n            },\r\n            error => {\r\n              console.log(error)\r\n            }\r\n          );\r\n        }else {\r\n          MySwal.fire({\r\n            title: 'Alarm',\r\n            text: 'Nenhum contrato disponível no momento'\r\n          })\r\n        }\r\n      }\r\n    });\r\n\r\n\r\n\r\n  }\r\n\r\n  const handleAddPlan = () => {\r\n    UserService.getBalance(AuthService.getCurrentUser().id).then(\r\n      response => {\r\n        if(response.length == 0 || response == null || response == undefined || response.balance < 5000) {\r\n          MySwal.fire({\r\n            title: 'Alarm',\r\n            text: 'You should have available balance more than 5.000 to add new plan'\r\n          })\r\n        }else if(response.balance >= 5000) {\r\n          MySwal.fire({\r\n            title: 'New Contract Plan',\r\n            html:\r\n                  '<h2 class=\"swal2-title\" id=\"swal2-title\" style=\"margin-bottom: 1.5em; font-size: 1.4em\">Saldo atual: ' + currencyFormatter.format(response.balance, { code: 'BRL', symbol: '' }) + '</h2>' +\r\n                  '<h2 class=\"swal2-title\" id=\"swal2-title\" style=\"font-size: 1.3em;font-weight: 400\">Insira o valor desejado (min. R$5.000,00)</h2>' +\r\n                  '<input id=\"swal_open_value\" type=\"text\" min=\"5000\" class=\"swal2-input\" style=\"max-width:100%;\" placeHolder=\"5.000,00\">' +\r\n                  '<h2 class=\"swal2-title\" id=\"swal2-title\" style=\"font-size: 1.3em;font-weight: 400\">Selecione o Plano<h2>' +\r\n                  '<select id=\"swal_investment_type\" class=\"swal2-select\" style=\"border-color: #d9d9d9;display: flex;width: 100%; font-size: 0.6em;padding: .975em .625em;\"><option value=\"FLEXIVEL\">FLEXIVEL</option><option value=\"CRESCIMENTO\">CRESCIMENTO</option></select>',\r\n            showCancelButton: true,\r\n            preConfirm: (value) => {\r\n              if( SimpleMaskMoney.formatToNumber(document.getElementById('swal_open_value').value) < 5000) {\r\n                MySwal.showValidationMessage('You should put more than 5.000')\r\n              }\r\n            },\r\n            onOpen: () => {\r\n              const input = document.getElementById('swal_open_value')\r\n              SimpleMaskMoney.setMask(input, {\r\n                allowNegative: false,\r\n                negativeSignAfter: false,\r\n                prefix: '',\r\n                suffix: '',\r\n                fixed: true,\r\n                fractionDigits: 2,\r\n                decimalSeparator: ',',\r\n                thousandsSeparator: '.',\r\n                cursor: 'move'\r\n              });\r\n              input.oninput = () => {\r\n\r\n              }\r\n            }\r\n          }).then(function (result) {\r\n            if (result.dismiss === MySwal.DismissReason.cancel) {\r\n              return;\r\n            }else if(result.value){\r\n\r\n              PlanService.addPlan(\r\n                {\r\n                  open_value: SimpleMaskMoney.formatToNumber(document.getElementById('swal_open_value').value),\r\n                  investment_type: document.getElementById('swal_investment_type').value,\r\n              }).then(\r\n                response => {\r\n                  MySwal.fire({\r\n                    title: 'Success',\r\n                    text: response.message\r\n                  })\r\n                  window.location.reload();\r\n                },\r\n                error => {\r\n                  console.log(error)\r\n                }\r\n              );\r\n            }\r\n\r\n          })\r\n        }\r\n      },\r\n      error => {\r\n        console.log(error)\r\n      }\r\n    )\r\n  }\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"Histórico de planos ativos e expirados.\"\r\n          title=\"Planos\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <PerfectScrollbar>\r\n          <div className={classes.inner}>\r\n          <div className={classes.margin}>\r\n          {/* <Button variant=\"outlined\" color=\"inherit\" onClick={handleAddPlan.bind()}>\r\n              Add Plan\r\n          </Button> */}\r\n          {plans.length > 0 ? (\r\n            <div>\r\n              <Button variant=\"outlined\" color=\"inherit\" onClick={handleDownload.bind()}>\r\n                  Download Contrato\r\n              </Button>\r\n              <Button variant=\"outlined\" color=\"inherit\" onClick={handleUpload.bind()}>\r\n                  Upload Contrato\r\n              </Button>\r\n            </div>\r\n          ):('')}\r\n          </div>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell style={{color: '#212a37'}} className=\"blackText\">Data de Início</TableCell>\r\n                  <TableCell className=\"blackText\" style={{color: '#212a37'}}>Data de Término</TableCell>\r\n                  <TableCell className=\"blackText\" style={{color: '#212a37'}}>Aporte</TableCell>\r\n                  <TableCell className=\"blackText\" style={{color: '#212a37'}}>Lucro</TableCell>\r\n                  <TableCell className=\"blackText\" style={{color: '#212a37'}}>Total</TableCell>\r\n                  <TableCell className=\"blackText\" style={{color: '#212a37'}}>Plano</TableCell>\r\n                  <TableCell className=\"blackText\" style={{color: '#212a37'}}>Status</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {plans.slice(0, rowsPerPage).map(item => (\r\n                  <TableRow\r\n                    className={classes.tableRow}\r\n                    hover\r\n                    key={item.id}\r\n                  >\r\n                    <TableCell>\r\n                      <div className={classes.nameContainer}>\r\n\r\n                        <Typography variant=\"body1\">{moment(item.start_date).format('DD/MM/YYYY')}</Typography>\r\n                      </div>\r\n                    </TableCell>\r\n                    <TableCell>{moment(item.end_date).format('DD/MM/YYYY')}</TableCell>\r\n                    <TableCell>{currencyFormatter.format(item.open_value, { code: 'BRL', symbol: '' })}</TableCell>\r\n                    <TableCell>{item.invest_type=='FLEXIVEL' ? currencyFormatter.format(item.open_value*10/100, { code: 'BRL', symbol: '' }) : currencyFormatter.format(item.open_value*30/100, { code: 'BRL', symbol: '' })}</TableCell>\r\n                    <TableCell>{item.invest_type=='FLEXIVEL' ? currencyFormatter.format((Number(item.open_value) + Number(item.open_value*10/100)), { code: 'BRL', symbol: '' }) : currencyFormatter.format((Number(item.open_value) + Number(item.open_value*30/100)), { code: 'BRL', symbol: '' })}</TableCell>\r\n                    <TableCell>{item.invest_type}</TableCell>\r\n                    <TableCell>\r\n                      {item.status}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n        </PerfectScrollbar>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={plans.length}\r\n            onChangePage={handlePageChange}\r\n            onChangeRowsPerPage={handleRowsPerPageChange}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nPlanList.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default PlanList;\r\n","import axios from 'axios';\r\nimport authHeader from './auth-header';\r\nconst URL = 'http://localhost:8080/api/plan/';\r\n\r\nclass PlanService {\r\n  getAll() {\r\n    return axios.get(URL + 'all', {headers: authHeader()});\r\n  }\r\n  setApprove(id) {\r\n    return axios.post(URL + 'set_approve', {id: id}, {headers: authHeader()});\r\n  }\r\n  getPlanByUser(userId) {\r\n    return axios.post(URL + 'all_by_user', {user_id: userId}, {headers: authHeader()});\r\n  }\r\n  addPlan(add_data) {\r\n    return axios\r\n      .post(URL + \"add_plan\", add_data, {headers: authHeader()})\r\n      .then(response => {\r\n        return response.data;\r\n    });\r\n  }\r\n}\r\n\r\nexport default new PlanService();\r\n","import React, {useEffect, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid } from '@material-ui/core';\r\nimport { PlanList } from './components';\r\nimport UserService from \"../../services/user.service\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport PlanService from \"../../services/plan.service\";\r\n\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nconst MySwal = withReactContent(Swal)\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst UserPlan = ({ match, location }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        spacing={4}\r\n      >\r\n        <Grid\r\n          item\r\n          lg={12}\r\n          md={12}\r\n          xl={12}\r\n          xs={12}\r\n        >\r\n          <PlanList \r\n          MySwal={MySwal}\r\n          UserService={UserService}\r\n          AuthService={AuthService}\r\n          PlanService={PlanService}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPlan;\r\n","import React, { useState,useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport moment from 'moment';\r\nimport currencyFormatter from 'currency-formatter';\r\nimport SimpleMaskMoney from 'simple-mask-money/lib/simple-mask-money'\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TablePagination,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    colorWhite: {\r\n      color: 'white!important'\r\n    },\r\n    disableButton: {\r\n        \"&:disabled\": {\r\n          color: 'rgb(206, 191, 191)!important',\r\n          backgroundColor: 'rgb(107, 110, 128)!important'\r\n        }\r\n    },\r\n    margin: {\r\n      \"& > *\": {\r\n        margin: theme.spacing(1)\r\n      }\r\n    },\r\n}));\r\n\r\nconst PlanList = props => {\r\n  //basic setting\r\n  const classes = useStyles();\r\n  const { className, UserService, AuthService, PlanService, DepositService, MySwal, ...rest } = props;\r\n  //handle table\r\n  const [plans, setPlans] = useState([]);\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n        try {\r\n          const response = await DepositService.getDepositByUser(AuthService.getCurrentUser().id);\r\n          setPlans(response.data);\r\n        } catch (e) {\r\n            setPlans([]);\r\n        }\r\n    };\r\n    fetchUsers();\r\n  }, []);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n\r\n  const handlePageChange = (event, page) => {\r\n    setPage(page);\r\n    console.log(page)\r\n  };\r\n  const handleRowsPerPageChange = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //handle action\r\n  const submit = () => {\r\n  }\r\n\r\n  const handleAdd = () => {\r\n          MySwal.fire({\r\n            title: 'Novo Depósito',\r\n            html:\r\n                  '<h2 class=\"swal2-title\" id=\"swal2-title\" style=\"margin-bottom: 1.5em; font-size: 1.4em\">Insira o valor desejado (min. R$5.000,00)</h2>' +\r\n                  '<input id=\"swal_open_value\" type=\"text\" min=\"5000\" class=\"swal2-input\" style=\"max-width:100%;\" placeHolder=\"5.000,00\">' +\r\n                  '<h2 class=\"swal2-title\" id=\"swal2-title\" style=\"font-size: 1.3em;font-weight: 400\">Selecione o Plano<h2>' +\r\n                  '<select id=\"swal_investment_type\" class=\"swal2-select\" style=\"border-color: #d9d9d9;display: flex;width: 100%; font-size: 0.6em;padding: .975em .625em;\"><option value=\"FLEXIVEL\">FLEXIVEL</option><option value=\"CRESCIMENTO\">CRESCIMENTO</option></select>',\r\n            showCancelButton: true,\r\n            preConfirm: (value) => {\r\n              if( SimpleMaskMoney.formatToNumber(document.getElementById('swal_open_value').value) < 5000) {\r\n                MySwal.showValidationMessage('You should put more than 5.000')\r\n              }\r\n            },\r\n            onOpen: () => {\r\n              const input = document.getElementById('swal_open_value')\r\n              SimpleMaskMoney.setMask(input, {\r\n                allowNegative: false,\r\n                negativeSignAfter: false,\r\n                prefix: '',\r\n                suffix: '',\r\n                fixed: true,\r\n                fractionDigits: 2,\r\n                decimalSeparator: ',',\r\n                thousandsSeparator: '.',\r\n                cursor: 'move'\r\n              });\r\n              input.oninput = () => {\r\n\r\n              }\r\n            }\r\n          }).then(function (result) {\r\n            if (result.dismiss === MySwal.DismissReason.cancel) {\r\n              return;\r\n            }else if(result.value){\r\n              DepositService.addDeposit(\r\n                {\r\n                  user_value: SimpleMaskMoney.formatToNumber(document.getElementById('swal_open_value').value),\r\n                  investment_type: document.getElementById('swal_investment_type').value,\r\n              }).then(\r\n                response => {\r\n                  MySwal.fire({\r\n                    title: 'Success',\r\n                    text: response.message\r\n                  })\r\n                  window.location.reload();\r\n                },\r\n                error => {\r\n                  console.log(error)\r\n                }\r\n              );\r\n            }\r\n          })\r\n  }\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"Histórico de depósitos realizados.\"\r\n          title=\"Depósitos\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <PerfectScrollbar>\r\n          <div className={classes.margin}>\r\n          <div className={classes.inner}>\r\n          <Button variant=\"outlined\" color=\"inherit\" onClick={handleAdd.bind()}>\r\n              Depositar\r\n          </Button>\r\n          </div>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell className=\"blackText\" style={{color: '#212a37'}}>Valor Informado</TableCell>\r\n                  <TableCell className=\"blackText\" style={{color: '#212a37'}}>Valor Aprovado</TableCell>\r\n                  <TableCell className=\"blackText\" style={{color: '#212a37'}}>Plano</TableCell>\r\n                  <TableCell className=\"blackText\" style={{color: '#212a37'}}>Status</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {plans.slice(0, rowsPerPage).map(item => (\r\n                  <TableRow\r\n                    className={classes.tableRow}\r\n                    hover\r\n                    key={item.id}\r\n                  >\r\n                    <TableCell>{currencyFormatter.format(item.user_value, { code: 'BRL', symbol: '' })}</TableCell>\r\n                    <TableCell>{currencyFormatter.format(item.admin_value, { code: 'BRL', symbol: '' })}</TableCell>\r\n                    <TableCell>{item.invest_type}</TableCell>\r\n                    <TableCell>\r\n                      {item.status}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n        </PerfectScrollbar>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={plans.length}\r\n            onChangePage={handlePageChange}\r\n            onChangeRowsPerPage={handleRowsPerPageChange}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nPlanList.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default PlanList;\r\n","import axios from 'axios';\r\nimport authHeader from './auth-header';\r\nconst URL = 'http://localhost:8080/api/deposit/';\r\n\r\nclass DepositService {\r\n  getAll() {\r\n    return axios.get(URL + 'all', {headers: authHeader()});\r\n  }\r\n  setApprove(data) {\r\n    return axios.post(URL + 'set_approve', data, {headers: authHeader()});\r\n  }\r\n  getDepositByUser(userId) {\r\n    return axios.post(URL + 'all_by_user', {user_id: userId}, {headers: authHeader()});\r\n  }\r\n  addDeposit(add_data) {\r\n    return axios\r\n      .post(URL + \"add\", add_data, {headers: authHeader()})\r\n      .then(response => {\r\n        return response.data;\r\n    });\r\n  }\r\n}\r\n\r\nexport default new DepositService();\r\n","import React, {useEffect, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid } from '@material-ui/core';\r\nimport { PlanList } from './components';\r\nimport UserService from \"../../services/user.service\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport PlanService from \"../../services/plan.service\";\r\nimport DepositService from \"../../services/deposit.service\";\r\n\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nconst MySwal = withReactContent(Swal)\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst UserDeposit = ({ match, location }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        spacing={4}\r\n      >\r\n        <Grid\r\n          item\r\n          lg={12}\r\n          md={12}\r\n          xl={12}\r\n          xs={12}\r\n        >\r\n          <PlanList \r\n          MySwal={MySwal}\r\n          UserService={UserService}\r\n          AuthService={AuthService}\r\n          PlanService={PlanService}\r\n          DepositService={DepositService}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserDeposit;\r\n","import React, { useState,useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport moment from 'moment';\r\nimport currencyFormatter from 'currency-formatter';\r\nimport SimpleMaskMoney from 'simple-mask-money/lib/simple-mask-money'\r\nimport $ from 'jquery';\r\nimport 'jquery-mask-plugin/dist/jquery.mask.min';\r\n\r\n\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TablePagination,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    colorWhite: {\r\n      color: 'white!important'\r\n    },\r\n    disableButton: {\r\n        \"&:disabled\": {\r\n          color: 'rgb(206, 191, 191)!important',\r\n          backgroundColor: 'rgb(107, 110, 128)!important'\r\n        }\r\n    },\r\n    margin: {\r\n      \"& > *\": {\r\n        margin: theme.spacing(1)\r\n      }\r\n    },\r\n}));\r\n\r\nconst WithdrawList = props => {\r\n  //basic setting\r\n\r\n  // let input = document.getElementsByTagName('input')[0];\r\n  // if(input) {\r\n  //   input.oninput = () => {\r\n  //     input.value = SimpleMaskMoney.format(input.value);\r\n  //   }\r\n\r\n  //   // Your send method\r\n  //   input.onkeyup = (e) => {\r\n  //     if (e.key !== \"Enter\") return;\r\n  //     // This method return value of your input in format number to save in your database\r\n  //     SimpleMaskMoney.formatToNumber(input.value);\r\n  //   }\r\n  // }\r\n\r\n\r\n  const classes = useStyles();\r\n  const { className, UserService, AuthService, PlanService,WithdrawService, MySwal, ...rest } = props;\r\n  //handle table\r\n  const [plans, setPlans] = useState([]);\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n        try {\r\n          const response = await WithdrawService.getPlanByUser(AuthService.getCurrentUser().id);\r\n          setPlans(response.data);\r\n        } catch (e) {\r\n            setPlans([]);\r\n        }\r\n    };\r\n    fetchUsers();\r\n\r\n  }, []);\r\n\r\n  const args = {\r\n    allowNegative: false,\r\n    negativeSignAfter: false,\r\n    prefix: '',\r\n    suffix: '',\r\n    fixed: true,\r\n    fractionDigits: 2,\r\n    decimalSeparator: ',',\r\n    thousandsSeparator: '.',\r\n    cursor: 'move'\r\n  };\r\n\r\n\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n  const handlePageChange = (event, page) => {\r\n    setPage(page);\r\n  };\r\n  const handleRowsPerPageChange = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //handle action\r\n  const handleWithdraw = () => {\r\n    UserService.getBalance(AuthService.getCurrentUser().id).then(\r\n      response => {\r\n        if(response.status == 'fail') {\r\n          MySwal.fire({\r\n            title: 'Alarm',\r\n            icon: 'warning',\r\n            text: response.message\r\n          })\r\n        } else {\r\n          if(response.length == 0 || response == null || response == undefined || response.balance < 1000) {\r\n            MySwal.fire({\r\n              title: 'Saque',\r\n              icon: 'warning',\r\n              text: 'Você precisa ter no mínimo R$1.000,00 disponíveis para sacar.'\r\n            })\r\n          }else if(response.balance >= 1000) {\r\n            MySwal.fire({\r\n              title: 'Withdraw',\r\n              html:\r\n                    '<h2 class=\"swal2-title\" id=\"swal2-title\" style=\"margin-bottom: 1.5em; font-size: 1.4em\">Avaliable balance : '+currencyFormatter.format(response.balance, { code: 'BRL', symbol: '' })+'</h2>' +\r\n                    '<input type=\"text\" id=\"swal_withdraw_value\" value=\"\" class=\"swal2-input\" style=\"max-width: 100%;\" placeHolder=\"1,000\">',\r\n              showCancelButton: true,\r\n              preConfirm: (value) => {\r\n                if( SimpleMaskMoney.formatToNumber(document.getElementById('swal_withdraw_value').value) < 0\r\n                || SimpleMaskMoney.formatToNumber(document.getElementById('swal_withdraw_value').value) == ''\r\n                || SimpleMaskMoney.formatToNumber(document.getElementById('swal_withdraw_value').value) > response.balance) {\r\n                  MySwal.showValidationMessage('You should put correct value')\r\n                }\r\n              },\r\n              onOpen: () => {\r\n                const input = document.getElementById('swal_withdraw_value')\r\n                SimpleMaskMoney.setMask(input, args);\r\n                input.oninput = () => {\r\n\r\n                }\r\n              }\r\n            }).then(function (result) {\r\n              if (result.dismiss === MySwal.DismissReason.cancel) {\r\n                return;\r\n              }else if(result.value){\r\n                WithdrawService.add({\r\n                  withdraw_value: SimpleMaskMoney.formatToNumber(document.getElementById('swal_withdraw_value').value),\r\n              }).then(\r\n                  response => {\r\n                    MySwal.fire({\r\n                      title: 'Success',\r\n                      text: response.message\r\n                    })\r\n                    window.location.reload();\r\n                  },\r\n                  error => {\r\n                    console.log(error)\r\n                  }\r\n                );\r\n              }\r\n\r\n            })\r\n          }\r\n        }\r\n\r\n      },\r\n      error => {\r\n        console.log(error)\r\n      }\r\n    )\r\n  }\r\n  async function is_exist_cpf() {\r\n    const cpf_response = await UserService.check_cpf_user(document.getElementById('swal_withdraw_cpf').value)\r\n    if(cpf_response.cpf_user == null) {\r\n      return false;\r\n    }else {\r\n      return true\r\n    }\r\n  }\r\n  const  handleThrought = () => {\r\n    UserService.getBalance(AuthService.getCurrentUser().id).then(\r\n      response => {\r\n        if(response.status == 'fail') {\r\n          MySwal.fire({\r\n            title: 'Alarm',\r\n            icon: 'warning',\r\n            text: response.message\r\n          })\r\n        } else {\r\n          if(response.length == 0 || response == null || response == undefined || response.balance < 1000) {\r\n            MySwal.fire({\r\n              title: 'Alarm',\r\n              icon: 'warning',\r\n              text: 'You should have available balance more than 1.000 to transfer'\r\n            })\r\n          }else if(response.balance >= 1000) {\r\n            MySwal.fire({\r\n              title: 'Transfer to people',\r\n              html:\r\n                    '<h2 class=\"swal2-title\" id=\"swal2-title\" style=\"margin-bottom: 1.5em; font-size: 1.4em\">Avaliable balance : '+currencyFormatter.format(response.balance, { code: 'BRL', symbol: '' })+'</h2>' +\r\n                    '<input type=\"text\" id=\"swal_withdraw_value1\" value=\"\" class=\"swal2-input\" style=\"max-width: 100%;\" placeHolder=\"1,000\">' +\r\n                    '<input type=\"text\" id=\"swal_withdraw_cpf\" value=\"\" class=\"swal2-input\" style=\"max-width: 100%;\" placeHolder=\"\">',\r\n              showCancelButton: true,\r\n              preConfirm: (value) => {\r\n\r\n\r\n                const cpfRegex = RegExp(/[0-9]{3}\\.[0-9]{3}\\.[0-9]{3}-[0-9]{2}/)\r\n                if( SimpleMaskMoney.formatToNumber(document.getElementById('swal_withdraw_value1').value) < 0\r\n                || SimpleMaskMoney.formatToNumber(document.getElementById('swal_withdraw_value1').value) == ''\r\n                || SimpleMaskMoney.formatToNumber(document.getElementById('swal_withdraw_value1').value) > response.balance) {\r\n                  MySwal.showValidationMessage('You should put correct value')\r\n                }else if(!cpfRegex.test(document.getElementById('swal_withdraw_cpf').value)){\r\n                  MySwal.showValidationMessage('You should put correct cpf')\r\n                }else {\r\n\r\n                }\r\n              },\r\n              onOpen: (el) => {\r\n                const input = document.getElementById('swal_withdraw_value1')\r\n                const cpf_input = document.getElementById('swal_withdraw_cpf')\r\n                SimpleMaskMoney.setMask(input, args)\r\n                $('#swal_withdraw_cpf').mask('000.000.000-00')\r\n              }\r\n            }).then(function (result) {\r\n              if (result.dismiss === MySwal.DismissReason.cancel) {\r\n                return;\r\n              }else if(result.value){\r\n                UserService.check_cpf_user(document.getElementById('swal_withdraw_cpf').value).then(cpf_response => {\r\n                  if(cpf_response.cpf_user == null) {\r\n                    MySwal.fire({\r\n                      title: 'Fail',\r\n                      icon: 'warning',\r\n                      text: \"This cpf don't exist in user account\"\r\n                    })\r\n                  }else {\r\n                    WithdrawService.transfer({\r\n                      cpf: document.getElementById('swal_withdraw_cpf').value,\r\n                      withdraw_value: SimpleMaskMoney.formatToNumber(document.getElementById('swal_withdraw_value1').value),\r\n                  }).then(\r\n                      response => {\r\n                        MySwal.fire({\r\n                          title: 'Success',\r\n                          text: response.message\r\n                        })\r\n                        window.location.reload();\r\n                      },\r\n                      error => {\r\n                        console.log(error)\r\n                      }\r\n                    );\r\n                  }\r\n                })\r\n\r\n              }\r\n\r\n            })\r\n          }\r\n        }\r\n\r\n      },\r\n      error => {\r\n        console.log(error)\r\n      }\r\n    )\r\n  }\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"Saques disponíveis do dia 25 ao 30 de cada mês.\"\r\n          title=\"Saques\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <PerfectScrollbar>\r\n          <div className={classes.inner}>\r\n          <div className={classes.margin}>\r\n          <Button variant=\"outlined\" color=\"inherit\" onClick={handleWithdraw.bind()}>\r\n              Sacar para conta pessoal\r\n          </Button>\r\n          <Button variant=\"outlined\" color=\"inherit\" onClick={handleThrought.bind()}>\r\n              Transferir para outro CPF\r\n          </Button>\r\n          </div>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell style={{color: '#212a37'}} className=\"blackText\">Data de Solicitação</TableCell>\r\n                  <TableCell className=\"blackText\" style={{color: '#212a37'}}>Data de Aprovação</TableCell>\r\n                  <TableCell className=\"blackText\" style={{color: '#212a37'}}>Valor</TableCell>\r\n                  <TableCell className=\"blackText\" style={{color: '#212a37'}}>CPF do Destinatário</TableCell>\r\n                  <TableCell className=\"blackText\" style={{color: '#212a37'}}>Tipo</TableCell>\r\n                  <TableCell className=\"blackText\" style={{color: '#212a37'}}>Status</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {plans.slice(0, rowsPerPage).map(item => (\r\n                  <TableRow\r\n                    className={classes.tableRow}\r\n                    hover\r\n                    key={item.id}\r\n                  >\r\n                    <TableCell>\r\n                      <div className={classes.nameContainer}>\r\n                        <Typography variant=\"body1\">{moment(item.createdAt).format('DD/MM/YYYY')}</Typography>\r\n                      </div>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <div className={classes.nameContainer}>\r\n                        <Typography variant=\"body1\">{moment(item.updatedAt).format('DD/MM/YYYY')}</Typography>\r\n                      </div>\r\n                    </TableCell>\r\n                    <TableCell>{currencyFormatter.format(item.value, { code: 'BRL', symbol: '' })}</TableCell>\r\n                    <TableCell>{item.cpf}</TableCell>\r\n                    <TableCell>\r\n                      {item.cpf == \"\" || item.cpf == null ? 'Withdraw':'Transfer'}\r\n                    </TableCell>\r\n                    <TableCell>{item.status}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n        </PerfectScrollbar>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={plans.length}\r\n            onChangePage={handlePageChange}\r\n            onChangeRowsPerPage={handleRowsPerPageChange}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nWithdrawList.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default WithdrawList;\r\n","import axios from 'axios';\r\nimport authHeader from './auth-header';\r\nconst URL = 'http://localhost:8080/api/withdraw/';\r\n\r\nclass WithdrawService {\r\n  getAll() {\r\n    return axios.get(URL + 'all', {headers: authHeader()});\r\n  }\r\n  setApprove(id) {\r\n    return axios.post(URL + 'set_approve', {id: id}, {headers: authHeader()});\r\n  }\r\n  delete(id, value) {\r\n    return axios.post(URL + 'delete', {id: id, withdraw_value: value}, {headers: authHeader()});\r\n  }\r\n  getPlanByUser(userId) {\r\n    return axios.post(URL + 'all_by_user', {user_id: userId}, {headers: authHeader()});\r\n  }\r\n  add(add_data) {\r\n    return axios\r\n      .post(URL + \"add\", add_data, {headers: authHeader()})\r\n      .then(response => {\r\n        return response.data;\r\n    });\r\n  }\r\n  transfer(add_data) {\r\n    return axios\r\n      .post(URL + \"transfer\", add_data, {headers: authHeader()})\r\n      .then(response => {\r\n        return response.data;\r\n    });\r\n  }\r\n}\r\n\r\nexport default new WithdrawService();\r\n","import React, {useEffect, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid } from '@material-ui/core';\r\nimport { WithdrawList } from './components';\r\nimport UserService from \"../../services/user.service\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport PlanService from \"../../services/plan.service\";\r\nimport WithdrawService from \"../../services/withdraw.service\";\r\n\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nconst MySwal = withReactContent(Swal)\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst UserWithdraw = ({ match, location }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        spacing={4}\r\n      >\r\n        <Grid\r\n          item\r\n          lg={12}\r\n          md={12}\r\n          xl={12}\r\n          xs={12}\r\n        >\r\n          <WithdrawList \r\n          MySwal={MySwal}\r\n          UserService={UserService}\r\n          AuthService={AuthService}\r\n          PlanService={PlanService}\r\n          WithdrawService={WithdrawService}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserWithdraw;\r\n","import React, { useState,useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport moment from 'moment';\r\nimport currencyFormatter from 'currency-formatter';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TablePagination,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    colorWhite: {\r\n      color: 'white!important'\r\n    },\r\n    disableButton: {\r\n        \"&:disabled\": {\r\n          color: 'rgb(206, 191, 191)!important',\r\n          backgroundColor: 'rgb(107, 110, 128)!important'\r\n        }\r\n    },\r\n    margin: {\r\n      \"& > *\": {\r\n        margin: theme.spacing(1)\r\n      }\r\n    },\r\n}));\r\n\r\nconst PlanList = props => {\r\n  //basic setting\r\n  const classes = useStyles();\r\n  const { className, UserService, AuthService, PlanService, MySwal, ...rest } = props;\r\n  //handle table\r\n  const [plans, setPlans] = useState([]);\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n        try {\r\n          const response = await PlanService.getAll();\r\n          setPlans(response.data);\r\n        } catch (e) {\r\n            setPlans([]);\r\n        }\r\n    };\r\n    fetchUsers();\r\n  }, []);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n  const handlePageChange = (event, page) => {\r\n    setPage(page);\r\n  };\r\n  const handleRowsPerPageChange = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //handle action\r\n  const handleApprove = (plan_id) => {\r\n    MySwal.fire({\r\n      title: 'Confirmar',\r\n      icon: 'warning',\r\n      confirmButtonText: 'Confirmar',\r\n      cancelButtonText: 'Cancelar',\r\n      showCancelButton: true,\r\n    })\r\n    .then((result) => {\r\n      if (result.value) {\r\n        PlanService.setApprove(plan_id).then(\r\n          response => {\r\n            MySwal.fire({\r\n              title: 'Sucesso',\r\n              text: response.message\r\n            })\r\n            window.location.reload();\r\n          },\r\n          error => {\r\n            console.log(error)\r\n          }\r\n        )\r\n      } else if (result.dismiss === MySwal.DismissReason.cancel) {\r\n\r\n      }\r\n    });\r\n\r\n  }\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"Histórico de solicitação de planos.\"\r\n          title=\"Planos\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <PerfectScrollbar>\r\n          <div className={classes.inner}>\r\n          <div className={classes.margin}>\r\n          </div>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                <TableCell style={{color: '#212a37'}} className=\"blackText\">Nome Completo</TableCell>\r\n                <TableCell style={{color: '#212a37'}} className=\"blackText\">E-mail</TableCell>\r\n                  <TableCell style={{color: '#212a37'}} className=\"blackText\">Data de Início</TableCell>\r\n                  <TableCell className=\"blackText\" style={{color: '#212a37'}}>Data de Término</TableCell>\r\n                  <TableCell className=\"blackText\" style={{color: '#212a37'}}>Aporte</TableCell>\r\n                  <TableCell className=\"blackText\" style={{color: '#212a37'}}>Lucro</TableCell>\r\n                  <TableCell className=\"blackText\" style={{color: '#212a37'}}>Total</TableCell>\r\n                  <TableCell className=\"blackText\" style={{color: '#212a37'}}>Plano</TableCell>\r\n                  <TableCell className=\"blackText\" style={{color: '#212a37'}}>Status</TableCell>\r\n                  <TableCell className=\"blackText\" style={{color: '#212a37'}}>Ações</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {plans.slice(0, rowsPerPage).map(item => (\r\n                  <TableRow\r\n                    className={classes.tableRow}\r\n                    hover\r\n                    key={item.id}\r\n                  >\r\n                    <TableCell>{item.user.full_name}</TableCell>\r\n                    <TableCell>{item.user.email}</TableCell>\r\n                    <TableCell>\r\n                      <div className={classes.nameContainer}>\r\n\r\n                        <Typography variant=\"body1\">{moment(item.start_date).format('DD/MM/YYYY')}</Typography>\r\n                      </div>\r\n                    </TableCell>\r\n                    <TableCell>{moment(item.end_date).format('DD/MM/YYYY')}</TableCell>\r\n                    <TableCell>{currencyFormatter.format(item.open_value, { code: 'BRL', symbol: '' })}</TableCell>\r\n                    <TableCell>{item.invest_type=='FLEXIVEL' ? currencyFormatter.format(item.open_value*10/100, { code: 'BRL', symbol: '' }) : currencyFormatter.format(item.open_value*30/100, { code: 'BRL', symbol: '' })}</TableCell>\r\n                    <TableCell>{item.invest_type=='FLEXIVEL' ? currencyFormatter.format((Number(item.open_value) + Number(item.open_value*10/100)), { code: 'BRL', symbol: '' }) : currencyFormatter.format((Number(item.open_value) + Number(item.open_value*30/100)), { code: 'BRL', symbol: '' })}</TableCell>\r\n                    <TableCell>{item.invest_type}</TableCell>\r\n                    <TableCell>\r\n                      {item.status}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {\r\n                      item.status == 'pending' ? (\r\n                        <Button variant=\"contained\" color=\"secondary\" onClick={handleApprove.bind(this, item.id)}>\r\n                         Aprovar\r\n                      </Button>\r\n                      ) : ('')\r\n                      }\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n        </PerfectScrollbar>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={plans.length}\r\n            onChangePage={handlePageChange}\r\n            onChangeRowsPerPage={handleRowsPerPageChange}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nPlanList.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default PlanList;\r\n","import React, {useEffect, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid } from '@material-ui/core';\r\nimport { PlanList } from './components';\r\nimport UserService from \"../../services/user.service\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport PlanService from \"../../services/plan.service\";\r\n\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nconst MySwal = withReactContent(Swal)\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst AdminPlan = ({ match, location }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        spacing={4}\r\n      >\r\n        <Grid\r\n          item\r\n          lg={12}\r\n          md={12}\r\n          xl={12}\r\n          xs={12}\r\n        >\r\n          <PlanList \r\n          MySwal={MySwal}\r\n          UserService={UserService}\r\n          AuthService={AuthService}\r\n          PlanService={PlanService}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPlan;\r\n","import React, { useState,useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport moment from 'moment';\r\nimport currencyFormatter from 'currency-formatter';\r\nimport SimpleMaskMoney from 'simple-mask-money/lib/simple-mask-money'\r\nimport $ from 'jquery'\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TablePagination,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    colorWhite: {\r\n      color: 'white!important'\r\n    },\r\n    disableButton: {\r\n        \"&:disabled\": {\r\n          color: 'rgb(206, 191, 191)!important',\r\n          backgroundColor: 'rgb(107, 110, 128)!important'\r\n        }\r\n    },\r\n    margin: {\r\n      \"& > *\": {\r\n        margin: theme.spacing(1)\r\n      }\r\n    },\r\n}));\r\n\r\nconst PlanList = props => {\r\n  //basic setting\r\n  const classes = useStyles();\r\n  const { className, UserService, AuthService, PlanService, DepositService, MySwal, ...rest } = props;\r\n  //handle table\r\n  const [plans, setPlans] = useState([]);\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n        try {\r\n          const response = await DepositService.getAll();\r\n          setPlans(response.data);\r\n        } catch (e) {\r\n            setPlans([]);\r\n        }\r\n    };\r\n    fetchUsers();\r\n  }, []);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n\r\n  const handlePageChange = (event, page) => {\r\n    setPage(page);\r\n    console.log(page)\r\n  };\r\n  const handleRowsPerPageChange = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //handle action\r\n  const submit = () => {\r\n  }\r\n\r\n  const handleApprove = (user_id, deposit_id, user_value, invest_type) => {\r\n          MySwal.fire({\r\n            title: 'Aprovar Depósito',\r\n            html:\r\n                '<h2 class=\"swal2-title\" id=\"swal2-title\" style=\"margin-bottom: 1.5em; font-size: 1.4em\">Cliente solicitou: ' + currencyFormatter.format(user_value, { code: 'BRL', symbol: '' }) + '</h2>' +\r\n                  '<h2 class=\"swal2-title\" id=\"swal2-title\" style=\"margin-bottom: 1.5em; font-size: 1.4em\">Insira um valor (min. R$5.000,00)</h2>' +\r\n                  '<input id=\"swal_open_value\" type=\"text\" min=\"5000\" class=\"swal2-input\" style=\"max-width:100%;\" placeHolder=\"5.000,00\">' +\r\n                  '<select id=\"swal_investment_type\" class=\"swal2-select\" style=\"border-color: #d9d9d9;display: flex;width: 100%; font-size: 16px;padding: .975em .625em;\"><option value=\"FLEXIVEL\">FLEXIVEL</option><option value=\"CRESCIMENTO\">CRESCIMENTO</option></select>',\r\n            showCancelButton: true,\r\n            preConfirm: (value) => {\r\n              if( SimpleMaskMoney.formatToNumber(document.getElementById('swal_open_value').value) < 5000) {\r\n                MySwal.showValidationMessage('You should put more than 5.000')\r\n              }\r\n            },\r\n            onOpen: () => {\r\n              $('#swal_investment_type').val(invest_type)\r\n              const input = document.getElementById('swal_open_value')\r\n              SimpleMaskMoney.setMask(input, {\r\n                allowNegative: false,\r\n                negativeSignAfter: false,\r\n                prefix: '',\r\n                suffix: '',\r\n                fixed: true,\r\n                fractionDigits: 2,\r\n                decimalSeparator: ',',\r\n                thousandsSeparator: '.',\r\n                cursor: 'move'\r\n              });\r\n              input.oninput = () => {\r\n\r\n              }\r\n            }\r\n          }).then(function (result) {\r\n            if (result.dismiss === MySwal.DismissReason.cancel) {\r\n              return;\r\n            }else if(result.value){\r\n              DepositService.setApprove(\r\n                {\r\n                  user_id: user_id,\r\n                  id: deposit_id,\r\n                  admin_value: SimpleMaskMoney.formatToNumber(document.getElementById('swal_open_value').value),\r\n                  investment_type: document.getElementById('swal_investment_type').value,\r\n              }).then(\r\n                response => {\r\n                  MySwal.fire({\r\n                    title: 'Success',\r\n                    text: response.message\r\n                  })\r\n                  window.location.reload();\r\n                },\r\n                error => {\r\n                  console.log(error)\r\n                }\r\n              );\r\n            }\r\n          })\r\n  }\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"Histórico de depósitos solicitados.\"\r\n          title=\"Lista de Depósitos\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <PerfectScrollbar>\r\n          <div className={classes.inner}>\r\n          <div className={classes.margin}>\r\n          </div>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                <TableCell className=\"blackText\" style={{color: '#212a37'}}>Nome Completo</TableCell>\r\n                <TableCell className=\"blackText\" style={{color: '#212a37'}}>E-mail</TableCell>\r\n                <TableCell className=\"blackText\" style={{color: '#212a37'}}>Celular</TableCell>\r\n                  <TableCell className=\"blackText\" style={{color: '#212a37'}}>Valor Informado</TableCell>\r\n                  <TableCell className=\"blackText\" style={{color: '#212a37'}}>Valor Aprovado</TableCell>\r\n                  <TableCell className=\"blackText\" style={{color: '#212a37'}}>Plano</TableCell>\r\n                  <TableCell className=\"blackText\" style={{color: '#212a37'}}>Status</TableCell>\r\n                  <TableCell className=\"blackText\" style={{color: '#212a37'}}>Ações</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {plans.slice(0, rowsPerPage).map(item => (\r\n                  <TableRow\r\n                    className={classes.tableRow}\r\n                    hover\r\n                    key={item.id}\r\n                  >\r\n                    <TableCell>{item.user.full_name}</TableCell>\r\n                    <TableCell>{item.user.email}</TableCell>\r\n                    <TableCell>{item.user.cellphone}</TableCell>\r\n                    <TableCell>{currencyFormatter.format(item.user_value, { code: 'BRL', symbol: '' })}</TableCell>\r\n                    <TableCell>{currencyFormatter.format(item.admin_value, { code: 'BRL', symbol: '' })}</TableCell>\r\n                    <TableCell>{item.invest_type}</TableCell>\r\n                    <TableCell>\r\n                      {item.status}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {item.status != 'approved' ? (\r\n                        <Button variant=\"contained\" color=\"secondary\" onClick={handleApprove.bind(this, item.user_id, item.id, item.user_value, item.invest_type)}>\r\n                        Aprovar\r\n                        </Button>\r\n                      ): ('')}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n        </PerfectScrollbar>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={plans.length}\r\n            onChangePage={handlePageChange}\r\n            onChangeRowsPerPage={handleRowsPerPageChange}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nPlanList.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default PlanList;\r\n","import React, {useEffect, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid } from '@material-ui/core';\r\nimport { PlanList } from './components';\r\nimport UserService from \"../../services/user.service\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport PlanService from \"../../services/plan.service\";\r\nimport DepositService from \"../../services/deposit.service\";\r\n\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nconst MySwal = withReactContent(Swal)\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst AdminDeposit = ({ match, location }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        spacing={4}\r\n      >\r\n        <Grid\r\n          item\r\n          lg={12}\r\n          md={12}\r\n          xl={12}\r\n          xs={12}\r\n        >\r\n          <PlanList \r\n          MySwal={MySwal}\r\n          UserService={UserService}\r\n          AuthService={AuthService}\r\n          PlanService={PlanService}\r\n          DepositService={DepositService}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDeposit;\r\n","import React, { useState,useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport moment from 'moment';\r\nimport currencyFormatter from 'currency-formatter';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TablePagination,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    colorWhite: {\r\n      color: 'white!important'\r\n    },\r\n    disableButton: {\r\n        \"&:disabled\": {\r\n          color: 'rgb(206, 191, 191)!important',\r\n          backgroundColor: 'rgb(107, 110, 128)!important'\r\n        }\r\n    },\r\n    margin: {\r\n      \"& > *\": {\r\n        margin: theme.spacing(1)\r\n      }\r\n    },\r\n}));\r\n\r\nconst WithdrawList = props => {\r\n  //basic setting\r\n  const classes = useStyles();\r\n  const { className, UserService, AuthService, PlanService,WithdrawService, MySwal, ...rest } = props;\r\n  //handle table\r\n  const [plans, setPlans] = useState([]);\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n        try {\r\n          const response = await WithdrawService.getAll();\r\n          setPlans(response.data);\r\n        } catch (e) {\r\n            setPlans([]);\r\n        }\r\n    };\r\n    fetchUsers();\r\n  }, []);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n  const handlePageChange = (event, page) => {\r\n    setPage(page);\r\n  };\r\n  const handleRowsPerPageChange = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //handle action\r\n  const handleDelete = (withdraw_id, withdraw_value) => {\r\n    MySwal.fire({\r\n      title: 'Confirm',\r\n      text: 'Please delete',\r\n      icon: 'warning',\r\n      confirmButtonText: 'Confirmar',\r\n      cancelButtonText: 'Cancelar',\r\n      showCancelButton: true,\r\n    })\r\n    .then((result) => {\r\n      if (result.value) {\r\n        WithdrawService.delete(withdraw_id, withdraw_value).then(\r\n          response => {\r\n            MySwal.fire({\r\n              title: 'Success',\r\n              text: response.message\r\n            })\r\n            window.location.reload();\r\n          },\r\n          error => {\r\n            console.log(error)\r\n          }\r\n        )\r\n      } else if (result.dismiss === MySwal.DismissReason.cancel) {\r\n\r\n      }\r\n    });\r\n  }\r\n  const handleApprove = (withdraw_id) => {\r\n    MySwal.fire({\r\n      title: 'Autorizar Saque',\r\n      text: 'Deseja aprovar este saque?',\r\n      icon: 'warning',\r\n      confirmButtonText: 'Confirmar',\r\n      cancelButtonText: 'Cancelar',\r\n      showCancelButton: true,\r\n    })\r\n    .then((result) => {\r\n      if (result.value) {\r\n        WithdrawService.setApprove(withdraw_id).then(\r\n          response => {\r\n            MySwal.fire({\r\n              title: 'Success',\r\n              text: response.message\r\n            })\r\n            window.location.reload();\r\n          },\r\n          error => {\r\n            console.log(error)\r\n          }\r\n        )\r\n      } else if (result.dismiss === MySwal.DismissReason.cancel) {\r\n\r\n      }\r\n    });\r\n\r\n  }\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"Histórico de saques e transferências realizadas.\"\r\n          title=\"Saques\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <PerfectScrollbar>\r\n          <div className={classes.inner}>\r\n          <div className={classes.margin}>\r\n          </div>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                <TableCell className=\"blackText\" style={{color: '#212a37'}}>Nome Completo</TableCell>\r\n                  <TableCell style={{color: '#212a37'}} className=\"blackText\">Data de Solicitação</TableCell>\r\n                  <TableCell className=\"blackText\" style={{color: '#212a37'}}>Data de Aprovação</TableCell>\r\n                  <TableCell className=\"blackText\" style={{color: '#212a37'}}>Valor</TableCell>\r\n                  <TableCell className=\"blackText\" style={{color: '#212a37'}}>Transf. CPF</TableCell>\r\n                  <TableCell className=\"blackText\" style={{color: '#212a37'}}>Tipo</TableCell>\r\n                  <TableCell className=\"blackText\" style={{color: '#212a37'}}>Status</TableCell>\r\n                  <TableCell className=\"blackText\" style={{color: '#212a37'}}>Ações</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {plans.slice(0, rowsPerPage).map(item => (\r\n                  <TableRow\r\n                    className={classes.tableRow}\r\n                    hover\r\n                    key={item.id}\r\n                  >\r\n                    <TableCell>{item.user.full_name}</TableCell>\r\n                    <TableCell>\r\n                      <div className={classes.nameContainer}>\r\n                        <Typography variant=\"body1\">{moment(item.createdAt).format('DD/MM/YYYY')}</Typography>\r\n                      </div>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <div className={classes.nameContainer}>\r\n                        <Typography variant=\"body1\">{moment(item.updatedAt).format('DD/MM/YYYY')}</Typography>\r\n                      </div>\r\n                    </TableCell>\r\n                    <TableCell>{currencyFormatter.format(item.value, { code: 'BRL', symbol: '' })}</TableCell>\r\n                    <TableCell>{item.cpf}</TableCell>\r\n                    <TableCell>\r\n                      {item.cpf == \"\" || item.cpf == null ? 'Withdraw':'Transfer'}\r\n                    </TableCell>\r\n                    <TableCell>{item.status}</TableCell>\r\n                    <TableCell>\r\n                      {\r\n                      item.status == 'pending' ? (\r\n                        <div>\r\n                        <Button variant=\"contained\" color=\"secondary\" onClick={handleApprove.bind(this, item.id)}>\r\n                         Aprovar\r\n                        </Button>\r\n                        <Button variant=\"contained\" color=\"secondary\" style={{marginLeft: '10px'}} onClick={handleDelete.bind(this, item.id, item.value)}>\r\n                        Recusar\r\n                        </Button>\r\n                        </div>\r\n                      ) : ('')\r\n                      }\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n        </PerfectScrollbar>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={plans.length}\r\n            onChangePage={handlePageChange}\r\n            onChangeRowsPerPage={handleRowsPerPageChange}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nWithdrawList.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default WithdrawList;\r\n","import React, {useEffect, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid } from '@material-ui/core';\r\nimport { WithdrawList } from './components';\r\nimport UserService from \"../../services/user.service\";\r\nimport AuthService from \"../../services/auth.service\";\r\nimport PlanService from \"../../services/plan.service\";\r\nimport WithdrawService from \"../../services/withdraw.service\";\r\n\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nconst MySwal = withReactContent(Swal)\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst AdminWithdraw = ({ match, location }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        spacing={4}\r\n      >\r\n        <Grid\r\n          item\r\n          lg={12}\r\n          md={12}\r\n          xl={12}\r\n          xs={12}\r\n        >\r\n          <WithdrawList \r\n          MySwal={MySwal}\r\n          UserService={UserService}\r\n          AuthService={AuthService}\r\n          PlanService={PlanService}\r\n          WithdrawService={WithdrawService}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminWithdraw;\r\n","import React, { useState,useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport moment from 'moment';\r\nimport currencyFormatter from 'currency-formatter';\r\nimport $ from 'jquery'\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Grid,\r\n  Button,\r\n  TextField,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TablePagination,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {},\r\n    colorWhite: {\r\n      color: 'white!important'\r\n    },\r\n    disableButton: {\r\n        \"&:disabled\": {\r\n          color: 'rgb(206, 191, 191)!important',\r\n          backgroundColor: 'rgb(107, 110, 128)!important'\r\n        }\r\n    },\r\n    margin: {\r\n      \"& > *\": {\r\n        margin: theme.spacing(1)\r\n      }\r\n    },\r\n}));\r\n\r\nconst ContractList = props => {\r\n  //basic setting\r\n  const classes = useStyles();\r\n  const { className, UserService, AuthService, PlanService, MySwal, ...rest } = props;\r\n  //handle table\r\n  const [plans, setPlans] = useState([]);\r\n  useEffect(() => {\r\n    const fetchContracts = async () => {\r\n        try {\r\n          const response = await UserService.getContractPDFAll();\r\n          setPlans(response.data);\r\n        } catch (e) {\r\n            setPlans([]);\r\n        }\r\n    };\r\n    fetchContracts();\r\n  }, []);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n  const handlePageChange = (event, page) => {\r\n    setPage(page);\r\n  };\r\n  const handleRowsPerPageChange = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  //handle action\r\n  const handleUpload = (id, user_id,invest_type) => {\r\n    MySwal.fire({\r\n      title: 'Upload do Contrato ',\r\n      text: 'Entre com o aporte',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Confirmar',\r\n      cancelButtonText: 'Cancelar',\r\n      html: '<input type=\"file\" id=\"swal_admin_cpf\" name=\"admin_pdf\" class=\"swal2-input\" style=\"max-width: 100%;\" placeHolder=\"\">',\r\n      preConfirm: (value) => {\r\n        if(document.getElementById(\"swal_admin_cpf\").files.length == 0) {\r\n          MySwal.showValidationMessage('O contrato precisa estar em formato .PDF')\r\n        }\r\n      },\r\n      onOpen: () => {\r\n        $(\"#swal_admin_cpf\").change(function (e) {\r\n            console.log(e);\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(this.files[0]);\r\n        });\r\n      }\r\n    }).then(function (result) {\r\n      if (result.dismiss === MySwal.DismissReason.cancel) {\r\n        return\r\n      }else if(result.value){\r\n        var formData = new FormData();\r\n        var file = $('#swal_admin_cpf')[0].files[0];\r\n        console.log(file)\r\n        formData.append(\"id\", id);\r\n        formData.append(\"userId\", user_id);\r\n\r\n        if(invest_type == 0){\r\n          formData.append('pdf_field', \"admin_pdf\")\r\n        }else {\r\n          formData.append('pdf_field', \"admin_pdf2\")\r\n        }\r\n        formData.append(\"admin_pdf\", file)\r\n\r\n\r\n        UserService.uploadAdminContract(formData).then(\r\n          response => {\r\n            if(response.status == 'success') {\r\n\r\n            }else if(response.status == 'fail') {\r\n              MySwal.fire({\r\n                title: 'Falha',\r\n                icon: 'warning',\r\n                text: response.message\r\n              })\r\n            }\r\n          },\r\n          error => {\r\n            console.log(error)\r\n          }\r\n        );\r\n      }\r\n    })\r\n  }\r\n  const handleDownload = (user_pdf) => {\r\n    UserService.downloadContract(user_pdf).then(\r\n      response => {\r\n      },\r\n      error => {\r\n        console.log(error)\r\n      }\r\n    );\r\n  }\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n      >\r\n        <CardHeader\r\n          subheader=\"Lista de todos os contratos dos planos: flexível e crescimento.\"\r\n          title=\"Contratos\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <PerfectScrollbar>\r\n          <div className={classes.inner}>\r\n          <div className={classes.margin}>\r\n          </div>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                <TableCell className=\"blackText\" style={{color: '#212a37'}}>Nome Completo</TableCell>\r\n                <TableCell className=\"blackText\" style={{color: '#212a37'}}>E-mail</TableCell>\r\n                <TableCell className=\"blackText\" style={{color: '#212a37'}}>Flexível Download</TableCell>\r\n                <TableCell className=\"blackText\" style={{color: '#212a37'}}>Flexível Upload</TableCell>\r\n                <TableCell className=\"blackText\" style={{color: '#212a37'}}>Crescimento Download</TableCell>\r\n                <TableCell className=\"blackText\" style={{color: '#212a37'}}>Crescimento Upload</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {plans.slice(0, rowsPerPage).map(item => (\r\n                  <TableRow\r\n                    className={classes.tableRow}\r\n                    hover\r\n                    key={item.id}\r\n                  >\r\n                    <TableCell>{item.user.full_name}</TableCell>\r\n                    <TableCell>{item.user.email}</TableCell>\r\n                    <TableCell>\r\n                      {item.user_pdf == '' || item.user_pdf == null? (''):(\r\n                        <Button variant=\"contained\" color=\"secondary\" style={{marginLeft: '10px'}} onClick={handleDownload.bind(this, item.user_pdf)}>\r\n                          Download\r\n                        </Button>\r\n                      )}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                        <Button variant=\"contained\" color=\"secondary\" onClick={handleUpload.bind(this, item.id, item.user_id,0)}>\r\n                          Upload\r\n                        </Button>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {item.user_pdf2 == '' || item.user_pdf2 == null? (''):(\r\n                        <Button variant=\"contained\" color=\"secondary\" style={{marginLeft: '10px'}} onClick={handleDownload.bind(this, item.user_pdf2)}>\r\n                          Download\r\n                        </Button>\r\n                      )}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                        <Button variant=\"contained\" color=\"secondary\" onClick={handleUpload.bind(this, item.id, item.user_id,1)}>\r\n                          Upload\r\n                        </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n        </PerfectScrollbar>\r\n        </CardContent>\r\n        <Divider />\r\n        <CardActions>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={plans.length}\r\n            onChangePage={handlePageChange}\r\n            onChangeRowsPerPage={handleRowsPerPageChange}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nContractList.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default ContractList;\r\n","import React, {useEffect, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid } from '@material-ui/core';\r\nimport { ContractList } from './components';\r\nimport UserService from \"../../services/user.service\";\r\nimport PlanService from \"../../services/plan.service\";\r\nimport AuthService from \"../../services/auth.service\";\r\n\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nconst MySwal = withReactContent(Swal)\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst AdminContract = ({ match, location }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        spacing={4}\r\n      >\r\n        <Grid\r\n          item\r\n          lg={12}\r\n          md={12}\r\n          xl={12}\r\n          xs={12}\r\n        >\r\n          <ContractList \r\n          MySwal={MySwal}\r\n          UserService={UserService}\r\n          AuthService={AuthService}\r\n          PlanService={PlanService}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminContract;\r\n","import React, { useState,useEffect } from 'react';\r\n\r\nimport clsx from 'clsx';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\nimport {\r\n\r\n  Card,\r\n\r\n  CardHeader,\r\n\r\n  CardContent,\r\n\r\n  CardActions,\r\n\r\n  Divider,\r\n\r\n  Grid,\r\n\r\n  Button,\r\n\r\n  TextField\r\n\r\n} from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n\r\n    root: {},\r\n\r\n    colorWhite: {\r\n\r\n      color: 'white!important'\r\n\r\n    },\r\n\r\n    disableButton: {\r\n\r\n        \"&:disabled\": {\r\n\r\n          color: 'rgb(206, 191, 191)!important',\r\n\r\n          backgroundColor: 'rgb(107, 110, 128)!important'\r\n\r\n        }\r\n\r\n    },\r\n\r\n}));\r\n\r\n\r\nconst UserDetails = props => {\r\n\r\n  const { className, UserService, AuthService, MySwal, ...rest } = props;\r\n\r\n  const [user, setUser] = useState({\r\n\r\n    password: \"\",\r\n\r\n    confirm: \"\"\r\n\r\n  });\r\n\r\n\r\n  const classes = useStyles();\r\n\r\n  const [fields, setFields] = useState({\r\n\r\n    password: \"\",\r\n\r\n    confirm: \"\",\r\n\r\n    current_password: \"\"\r\n\r\n  })\r\n\r\n  // Copy fields as they all have the same name\r\n\r\n  const [filedError, setFieldError] = useState({\r\n\r\n    ...fields\r\n\r\n  })\r\n\r\n  const [isError, setIsError] = useState(true)\r\n\r\n\r\n  const handleChange = input => ({ target: { value } }) => {\r\n\r\n    // Set user to the fields\r\n\r\n    setUser({\r\n\r\n      ...user,\r\n\r\n      [input]: value\r\n\r\n    })\r\n\r\n    // Handle errors\r\n\r\n    const formErrors = { ...filedError }\r\n\r\n\r\n    switch (input) {\r\n\r\n      case \"password\":\r\n\r\n        formErrors.current_password = value.length >= 0 && value.length < 6\r\n\r\n          ? \"Digite a senha atual.\"\r\n\r\n          : \"\"\r\n\r\n      break\r\n\r\n      case \"password\":\r\n\r\n        formErrors.password = value.length >= 0 && value.length < 6\r\n\r\n          ? \"Necessário mínimo de 6 caracteres.\"\r\n\r\n          : \"\"\r\n\r\n      break\r\n\r\n      case \"confirm\":\r\n\r\n        formErrors.confirm = value.length >= 0 && value.length < 6 || user.password != value\r\n\r\n          ? \"Necessário mínimo de 6 caracteres.\"\r\n\r\n          : \"\"\r\n\r\n      break\r\n\r\n      default:\r\n\r\n        break\r\n\r\n    }\r\n\r\n\r\n    // set error hook\r\n\r\n    let error_count = 0;\r\n\r\n    Object.values(formErrors).forEach((error,val,array) => {\r\n\r\n      if (error.length > 0) {\r\n\r\n        error_count = error_count + 1;\r\n\r\n        return;\r\n\r\n      }\r\n\r\n    })\r\n\r\n    if(error_count > 0){\r\n\r\n      setIsError(true)\r\n\r\n    } else {\r\n\r\n      setIsError(false)\r\n\r\n    }\r\n\r\n    // set errors hook\r\n\r\n    setFieldError({\r\n\r\n      ...formErrors\r\n\r\n    })\r\n\r\n  }\r\n\r\n\r\n  const submit = () => {\r\n\r\n    if(!isError) {\r\n\r\n      UserService.updatePassword(\r\n\r\n        {id: AuthService.getCurrentUser().id, password: user.password, current_password: user.current_password}\r\n\r\n      ).then(\r\n\r\n        response => {\r\n\r\n          MySwal.fire({\r\n\r\n            title: 'Success',\r\n\r\n            text: response.message\r\n\r\n          })\r\n\r\n        },\r\n\r\n        error => {\r\n\r\n          const resMessage =\r\n\r\n            (error.response &&\r\n\r\n              error.response.data &&\r\n\r\n              error.response.data.message) ||\r\n\r\n            error.message ||\r\n\r\n            error.toString();\r\n\r\n            MySwal.fire({\r\n\r\n              title: 'Fail',\r\n\r\n              text: resMessage,\r\n\r\n              dangerMode: true\r\n\r\n            })\r\n\r\n        }\r\n\r\n      );\r\n\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n\r\n    <Card\r\n\r\n      {...rest}\r\n\r\n      className={clsx(classes.root, className)}\r\n\r\n    >\r\n\r\n      <form\r\n\r\n        autoComplete=\"off\"\r\n\r\n        noValidate\r\n\r\n      >\r\n\r\n        <CardHeader\r\n\r\n          subheader=\"Preencha os campos abaixo para alterar a senha\"\r\n\r\n          title=\"Alterar Senha\"\r\n\r\n        />\r\n\r\n        <Divider />\r\n\r\n        <CardContent>\r\n\r\n          <Grid container spacing={2} noValidate>\r\n\r\n          <Grid item xs={12}>\r\n\r\n              <TextField\r\n\r\n                fullWidth\r\n\r\n                label=\"Senha Atual\"\r\n\r\n                name=\"current_password\"\r\n\r\n                type=\"password\"\r\n\r\n                placeholder=\"Senha Atual\"\r\n\r\n                value={user.current_password}\r\n\r\n                onChange={handleChange(\"current_password\")}\r\n\r\n                margin=\"normal\"\r\n\r\n                error={filedError.current_password !== \"\"}\r\n\r\n                helperText={\r\n\r\n                  filedError.current_password !== \"\" ? `${filedError.current_password}` : \"Preencha a senha atual.\"\r\n\r\n                }\r\n\r\n                required\r\n\r\n              />\r\n\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n\r\n              <TextField\r\n\r\n                fullWidth\r\n\r\n                label=\"Nova Senha\"\r\n\r\n                name=\"password\"\r\n\r\n                type=\"password\"\r\n\r\n                placeholder=\"Nova Senha\"\r\n\r\n                value={user.password}\r\n\r\n                onChange={handleChange(\"password\")}\r\n\r\n                margin=\"normal\"\r\n\r\n                error={filedError.password !== \"\"}\r\n\r\n                helperText={\r\n\r\n                  filedError.password !== \"\" ? `${filedError.password}` : \"Preencha a nova senha.\"\r\n\r\n                }\r\n\r\n                required\r\n\r\n              />\r\n\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n\r\n              <TextField\r\n\r\n                fullWidth\r\n\r\n                label=\"Confirmar Senha\"\r\n\r\n                name=\"confirm\"\r\n\r\n                type=\"password\"\r\n\r\n                placeholder=\"Confirmar Senha\"\r\n\r\n                value={user.confirm}\r\n\r\n                onChange={handleChange(\"confirm\")}\r\n\r\n                margin=\"normal\"\r\n\r\n                error={user.password != user.confirm || user.confirm.length == 1}\r\n\r\n                helperText={\r\n\r\n                  user.password != user.confirm || user.confirm.length == 0 ? \"Confirmar senha precisa ser igual ao nova senha.\" : \"\"\r\n\r\n                }\r\n\r\n                required\r\n\r\n              />\r\n\r\n            </Grid>\r\n\r\n          </Grid>\r\n\r\n        </CardContent>\r\n\r\n        <Divider />\r\n\r\n        <CardActions>\r\n\r\n          <Button\r\n\r\n            variant=\"contained\"\r\n\r\n            disabled={isError || user.password != user.confirm || user.confirm.length == 0}\r\n\r\n            color=\"secondary\"\r\n\r\n            onClick={submit}\r\n\r\n            className={classes.disableButton}\r\n\r\n          >\r\n\r\n            Salvar\r\n\r\n          </Button>\r\n\r\n        </CardActions>\r\n\r\n      </form>\r\n\r\n    </Card>\r\n\r\n  );\r\n\r\n};\r\n\r\n\r\nUserDetails.propTypes = {\r\n\r\n  className: PropTypes.string\r\n\r\n};\r\n\r\n\r\nexport default UserDetails;\r\n","import React, {useEffect, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid } from '@material-ui/core';\r\nimport { UserDetails } from './components';\r\nimport UserService from \"../../services/user.service\";\r\nimport AuthService from \"../../services/auth.service\";\r\n\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nconst MySwal = withReactContent(Swal)\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(4)\r\n  }\r\n}));\r\n\r\nconst UserPassword = ({ match, location }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid\r\n        container\r\n        spacing={4}\r\n      >\r\n        <Grid\r\n          item\r\n          lg={12}\r\n          md={12}\r\n          xl={12}\r\n          xs={12}\r\n        >\r\n          <UserDetails \r\n          MySwal={MySwal}\r\n          UserService={UserService}\r\n          AuthService={AuthService}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPassword;\r\n","import React,{Component} from 'react';\r\nimport { Switch, Redirect } from 'react-router-dom';\r\n\r\nimport AuthService from \"./services/auth.service\";\r\n\r\nimport { RouteWithLayout } from './components';\r\nimport { Main as MainLayout, Minimal as MinimalLayout } from './layouts';\r\n\r\nimport {\r\n  Dashboard as DashboardView,\r\n  ProductList as ProductListView,\r\n  UserList as UserListView,\r\n  ActiveUserList as ActiveUserListView,\r\n  UserEdit as UserEditView,\r\n  UserPersonal as UserPersonalView,\r\n  UserBank as UserBankView,\r\n  UserPlan as UserPlanView,\r\n  UserDeposit as UserDepositView,\r\n  UserWithdraw as UserWithdrawView,\r\n  AdminPlan as AdminPlanView,\r\n  AdminContract as AdminContractView,\r\n  AdminDeposit as AdminDepositView,\r\n  AdminWithdraw as AdminWithdrawView,\r\n  UserPassword as UserPasswordView,\r\n  Typography as TypographyView,\r\n  Icons as IconsView,\r\n  Account as AccountView,\r\n  Settings as SettingsView,\r\n  SignUp as SignUpView,\r\n  SignIn as SignInView,\r\n  NotFound as NotFoundView,\r\n  \r\n} from './views';\r\n\r\n\r\nclass Routes extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.logOut = this.logOut.bind(this);\r\n\r\n    this.state = {\r\n      showUserBoard: false,\r\n      showAdminBoard: false,\r\n      currentUser: undefined\r\n    };\r\n    \r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: AuthService.getCurrentUser(),\r\n        showAdminBoard: user.roles.includes(\"ROLE_ADMIN\"),\r\n        showUserBoard: user.roles.includes(\"ROLE_USER\")\r\n      });\r\n    }\r\n  }\r\n\r\n  logOut() {\r\n    AuthService.logout();\r\n  }\r\n\r\n  render() {\r\n    const { currentUser, showAdminBoard, showUserBoard } = this.state;\r\n    return (\r\n      <Switch>\r\n        {!AuthService.getCurrentUser() && (\r\n          <Redirect\r\n          exact\r\n          from=\"/\"\r\n          to=\"/sign-in\"\r\n        />\r\n        )}\r\n\r\n        {AuthService.getCurrentUser() && (\r\n        <Redirect\r\n          exact\r\n          from=\"/\"\r\n          to=\"/dashboard\"\r\n        />\r\n        )}\r\n        \r\n        {AuthService.getCurrentUser() && (\r\n        <RouteWithLayout\r\n          component={DashboardView}\r\n          exact\r\n          layout={MainLayout}\r\n          path=\"/dashboard\"\r\n        />\r\n        )}\r\n        {AuthService.getCurrentUser() && AuthService.getCurrentUser().roles.includes(\"ROLE_ADMIN\") && (\r\n        <RouteWithLayout\r\n          component={UserListView}\r\n          exact\r\n          layout={MainLayout}\r\n          path=\"/users\"\r\n        />\r\n        )}\r\n        {AuthService.getCurrentUser() && AuthService.getCurrentUser().roles.includes(\"ROLE_ADMIN\") && (\r\n        <RouteWithLayout\r\n          component={AdminPlanView}\r\n          exact\r\n          layout={MainLayout}\r\n          path=\"/adminplan\"\r\n        />\r\n        )}\r\n        {AuthService.getCurrentUser() && AuthService.getCurrentUser().roles.includes(\"ROLE_ADMIN\") && (\r\n        <RouteWithLayout\r\n          component={AdminContractView}\r\n          exact\r\n          layout={MainLayout}\r\n          path=\"/admincontract\"\r\n        />\r\n        )}\r\n        {AuthService.getCurrentUser() && AuthService.getCurrentUser().roles.includes(\"ROLE_ADMIN\") && (\r\n        <RouteWithLayout\r\n          component={AdminDepositView}\r\n          exact\r\n          layout={MainLayout}\r\n          path=\"/admindeposit\"\r\n        />\r\n        )}\r\n        {AuthService.getCurrentUser() && AuthService.getCurrentUser().roles.includes(\"ROLE_ADMIN\") && (\r\n        <RouteWithLayout\r\n          component={AdminWithdrawView}\r\n          exact\r\n          layout={MainLayout}\r\n          path=\"/adminwithdraw\"\r\n        />\r\n        )}\r\n        {AuthService.getCurrentUser() && AuthService.getCurrentUser().roles.includes(\"ROLE_ADMIN\") && (\r\n        <RouteWithLayout\r\n          component={ActiveUserListView}\r\n          exact\r\n          layout={MainLayout}\r\n          path=\"/active_users\"\r\n        />\r\n        )}\r\n        {AuthService.getCurrentUser() && AuthService.getCurrentUser().roles.includes(\"ROLE_ADMIN\") && (\r\n        <RouteWithLayout\r\n          component={UserEditView}\r\n          exact\r\n          layout={MainLayout}\r\n          path=\"/useredit/:userId\"\r\n        />\r\n        )}\r\n        {AuthService.getCurrentUser() && (\r\n        <RouteWithLayout\r\n          component={UserPersonalView}\r\n          exact\r\n          layout={MainLayout}\r\n          path=\"/userpersonal\"\r\n        />\r\n        )}\r\n        {AuthService.getCurrentUser() && (\r\n        <RouteWithLayout\r\n          component={UserPasswordView}\r\n          exact\r\n          layout={MainLayout}\r\n          path=\"/userpassword\"\r\n        />\r\n        )}\r\n        {AuthService.getCurrentUser() && (\r\n        <RouteWithLayout\r\n          component={UserBankView}\r\n          exact\r\n          layout={MainLayout}\r\n          path=\"/userbank\"\r\n        />\r\n        )}\r\n        {AuthService.getCurrentUser() && (\r\n        <RouteWithLayout\r\n          component={UserPlanView}\r\n          exact\r\n          layout={MainLayout}\r\n          path=\"/userplan\"\r\n        />\r\n        )}\r\n        {AuthService.getCurrentUser() && (\r\n        <RouteWithLayout\r\n          component={UserDepositView}\r\n          exact\r\n          layout={MainLayout}\r\n          path=\"/userdeposit\"\r\n        />\r\n        )}\r\n        {AuthService.getCurrentUser() && (\r\n        <RouteWithLayout\r\n          component={UserWithdrawView}\r\n          exact\r\n          layout={MainLayout}\r\n          path=\"/userwithdraw\"\r\n        />\r\n        )}\r\n        {(showAdminBoard || currentUser) && (\r\n        <RouteWithLayout\r\n          component={ProductListView} \r\n          exact\r\n          layout={MainLayout}\r\n          path=\"/products\"\r\n        />\r\n        )}\r\n        {(showAdminBoard || currentUser) && (\r\n        <RouteWithLayout\r\n          component={TypographyView}\r\n          exact\r\n          layout={MainLayout}\r\n          path=\"/typography\"\r\n        />\r\n        )}\r\n        {(showAdminBoard || currentUser) && (\r\n        <RouteWithLayout\r\n          component={IconsView}\r\n          exact\r\n          layout={MainLayout}\r\n          path=\"/icons\"\r\n        />\r\n        )}\r\n        {(showAdminBoard || currentUser) && (\r\n        <RouteWithLayout\r\n          component={AccountView}\r\n          exact\r\n          layout={MainLayout}\r\n          path=\"/account\"\r\n        />\r\n        )}\r\n        {(showAdminBoard || currentUser) && (\r\n        <RouteWithLayout\r\n          component={SettingsView}\r\n          exact\r\n          layout={MainLayout}\r\n          path=\"/settings\"\r\n        />\r\n        )}\r\n        \r\n        <RouteWithLayout\r\n          component={SignUpView}\r\n          exact\r\n          layout={MinimalLayout}\r\n          path=\"/sign-up\"\r\n        />\r\n        \r\n        {!AuthService.getCurrentUser() && (\r\n        <RouteWithLayout\r\n          component={SignInView}\r\n          exact\r\n          layout={MinimalLayout}\r\n          path=\"/sign-in\"\r\n        />\r\n        )}\r\n\r\n        <RouteWithLayout\r\n          component={NotFoundView}\r\n          exact\r\n          layout={MinimalLayout}\r\n          path=\"/not-found\"\r\n        />\r\n        {/* <Redirect to=\"/not-found\" /> */}\r\n      </Switch>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Routes;\r\n","import React, { Component } from 'react';\r\nimport { Router } from 'react-router-dom';\r\nimport { createBrowserHistory } from 'history';\r\nimport { Chart } from 'react-chartjs-2';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport validate from 'validate.js';\r\n\r\nimport { chartjs } from './helpers';\r\nimport theme from './theme';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport './assets/scss/index.scss';\r\nimport validators from './common/validators';\r\nimport Routes from './Routes';\r\n\r\n\r\n\r\nconst browserHistory = createBrowserHistory();\r\n\r\nChart.helpers.extend(Chart.elements.Rectangle.prototype, {\r\n  draw: chartjs.draw\r\n});\r\n\r\nvalidate.validators = {\r\n  ...validate.validators,\r\n  ...validators\r\n};\r\n  \r\nexport default class App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <Router history={browserHistory}>\r\n          <Routes />\r\n        </Router>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}